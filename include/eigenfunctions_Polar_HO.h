/* * atus-pro testing - atus-pro testing playgroung
 * Copyright (C) 2017 Želimir Marojević <zelimir.marojevic@gmail.com>
 *
 * This file is part of atus-pro testing.
 *
 * atus-pro testing is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * atus-pro testing is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with atus-pro testing.  If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef __eigenfunctions_Polar_HO_h__
#define __eigenfunctions_Polar_HO_h__

#include "math.h"

#include <iostream>

typedef double (*TEF)(const double, const double);

double PHO_0_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1);
return retval;
}

double PHO_1_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (-a * x * x + 0.1e1);
return retval;
}

double PHO_2_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.2e1 * a * x * x + a * a * pow(x, 0.4e1) / 0.2e1);
return retval;
}

double PHO_3_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.3e1 * a * x * x + 0.3e1 / 0.2e1 * a * a * pow(x, 0.4e1) - pow(a, 0.3e1) * pow(x, 0.6e1) / 0.6e1);
return retval;
}

double PHO_4_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.4e1 * a * x * x + 0.3e1 * a * a * pow(x, 0.4e1) - 0.2e1 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + pow(a, 0.4e1) * pow(x, 0.8e1) / 0.24e2);
return retval;
}

double PHO_5_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.5e1 * a * x * x + 0.5e1 * a * a * pow(x, 0.4e1) - 0.5e1 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.5e1 / 0.24e2 * pow(a, 0.4e1) * pow(x, 0.8e1) - pow(a, 0.5e1) * pow(x, 0.10e2) / 0.120e3);
return retval;
}

double PHO_6_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (pow(a, 0.6e1) * pow(x, 0.12e2) - 0.36e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.450e3 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.2400e4 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.5400e4 * a * a * pow(x, 0.4e1) - 0.4320e4 * a * x * x + 0.720e3) / 0.720e3;
return retval;
}

double PHO_7_0( const double a, const double x )
{
double retval = -sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (pow(a, 0.7e1) * pow(x, 0.14e2) - 0.49e2 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.882e3 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.7350e4 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.29400e5 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.52920e5 * a * a * pow(x, 0.4e1) + 0.35280e5 * a * x * x - 0.5040e4) / 0.5040e4;
return retval;
}

double PHO_8_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.8e1 * a * x * x + 0.14e2 * a * a * pow(x, 0.4e1) - 0.28e2 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.35e2 / 0.12e2 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.7e1 / 0.15e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.7e1 / 0.180e3 * pow(a, 0.6e1) * pow(x, 0.12e2) - pow(a, 0.7e1) * pow(x, 0.14e2) / 0.630e3 + pow(a, 0.8e1) * pow(x, 0.16e2) / 0.40320e5);
return retval;
}

double PHO_9_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.9e1 * a * x * x + 0.18e2 * a * a * pow(x, 0.4e1) - 0.14e2 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.21e2 / 0.4e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.21e2 / 0.20e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.7e1 / 0.60e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - pow(a, 0.7e1) * pow(x, 0.14e2) / 0.140e3 + pow(a, 0.8e1) * pow(x, 0.16e2) / 0.4480e4 - pow(a, 0.9e1) * pow(x, 0.18e2) / 0.362880e6);
return retval;
}

double PHO_10_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.10e2 * a * x * x + 0.45e2 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.20e2 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.35e2 / 0.4e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.21e2 / 0.10e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.7e1 / 0.24e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - pow(a, 0.7e1) * pow(x, 0.14e2) / 0.42e2 + pow(a, 0.8e1) * pow(x, 0.16e2) / 0.896e3 - pow(a, 0.9e1) * pow(x, 0.18e2) / 0.36288e5 + pow(a, 0.10e2) * pow(x, 0.20e2) / 0.3628800e7);
return retval;
}

double PHO_11_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.11e2 * a * x * x + 0.55e2 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.55e2 / 0.2e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.55e2 / 0.4e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.77e2 / 0.20e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.77e2 / 0.120e3 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.11e2 / 0.168e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.11e2 / 0.2688e4 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.11e2 / 0.72576e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.11e2 / 0.3628800e7 * pow(a, 0.10e2) * pow(x, 0.20e2) - pow(a, 0.11e2) * pow(x, 0.22e2) / 0.39916800e8);
return retval;
}

double PHO_12_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.12e2 * a * x * x + 0.33e2 * a * a * pow(x, 0.4e1) - 0.110e3 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.165e3 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.33e2 / 0.5e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.77e2 / 0.60e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.11e2 / 0.70e2 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.11e2 / 0.896e3 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.11e2 / 0.18144e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.11e2 / 0.604800e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - pow(a, 0.11e2) * pow(x, 0.22e2) / 0.3326400e7 + pow(a, 0.12e2) * pow(x, 0.24e2) / 0.479001600e9);
return retval;
}

double PHO_13_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.13e2 * a * x * x + 0.39e2 * a * a * pow(x, 0.4e1) - 0.143e3 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.715e3 / 0.24e2 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.429e3 / 0.40e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.143e3 / 0.60e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.143e3 / 0.420e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.143e3 / 0.4480e4 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.143e3 / 0.72576e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.143e3 / 0.1814400e7 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.13e2 / 0.6652800e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.13e2 / 0.479001600e9 * pow(a, 0.12e2) * pow(x, 0.24e2) - pow(a, 0.13e2) * pow(x, 0.26e2) / 0.6227020800e10);
return retval;
}

double PHO_14_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.14e2 * a * x * x + 0.91e2 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.182e3 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.1001e4 / 0.24e2 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.1001e4 / 0.60e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.1001e4 / 0.240e3 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.143e3 / 0.210e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.143e3 / 0.1920e4 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.143e3 / 0.25920e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.143e3 / 0.518400e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.13e2 / 0.1425600e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.13e2 / 0.68428800e8 * pow(a, 0.12e2) * pow(x, 0.24e2) - pow(a, 0.13e2) * pow(x, 0.26e2) / 0.444787200e9 + pow(a, 0.14e2) * pow(x, 0.28e2) / 0.87178291200e11);
return retval;
}

double PHO_15_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.15e2 * a * x * x + 0.105e3 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.455e3 / 0.6e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.455e3 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.1001e4 / 0.40e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.1001e4 / 0.144e3 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.143e3 / 0.112e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.143e3 / 0.896e3 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.143e3 / 0.10368e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.143e3 / 0.172800e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.13e2 / 0.380160e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.13e2 / 0.13685760e8 * pow(a, 0.12e2) * pow(x, 0.24e2) - pow(a, 0.13e2) * pow(x, 0.26e2) / 0.59304960e8 + pow(a, 0.14e2) * pow(x, 0.28e2) / 0.5811886080e10 - pow(a, 0.15e2) * pow(x, 0.30e2) / 0.1307674368000e13);
return retval;
}

double PHO_16_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.16e2 * a * x * x + 0.60e2 * a * a * pow(x, 0.4e1) - 0.280e3 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.455e3 / 0.6e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.182e3 / 0.5e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.1001e4 / 0.90e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.143e3 / 0.63e2 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.143e3 / 0.448e3 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.143e3 / 0.4536e4 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.143e3 / 0.64800e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.13e2 / 0.118800e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.13e2 / 0.3421440e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - pow(a, 0.13e2) * pow(x, 0.26e2) / 0.11119680e8 + pow(a, 0.14e2) * pow(x, 0.28e2) / 0.726485760e9 - pow(a, 0.15e2) * pow(x, 0.30e2) / 0.81729648000e11 + pow(a, 0.16e2) * pow(x, 0.32e2) / 0.20922789888000e14);
return retval;
}

double PHO_17_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.17e2 * a * x * x + 0.68e2 * a * a * pow(x, 0.4e1) - 0.340e3 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.595e3 / 0.6e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.1547e4 / 0.30e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.1547e4 / 0.90e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.2431e4 / 0.630e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.2431e4 / 0.4032e4 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.2431e4 / 0.36288e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.2431e4 / 0.453600e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.221e3 / 0.712800e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.221e3 / 0.17107200e8 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.17e2 / 0.44478720e8 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.17e2 / 0.2179457280e10 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.17e2 / 0.163459296000e12 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.17e2 / 0.20922789888000e14 * pow(a, 0.16e2) * pow(x, 0.32e2) - pow(a, 0.17e2) * pow(x, 0.34e2) / 0.355687428096000e15);
return retval;
}

double PHO_18_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.18e2 * a * x * x + 0.153e3 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.136e3 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.255e3 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.357e3 / 0.5e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.1547e4 / 0.60e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.221e3 / 0.35e2 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.2431e4 / 0.2240e4 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.2431e4 / 0.18144e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.2431e4 / 0.201600e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.221e3 / 0.277200e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.221e3 / 0.5702400e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.17e2 / 0.12355200e8 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.17e2 / 0.484323840e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.17e2 / 0.27243216000e11 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.17e2 / 0.2324754432000e13 * pow(a, 0.16e2) * pow(x, 0.32e2) - pow(a, 0.17e2) * pow(x, 0.34e2) / 0.19760412672000e14 + pow(a, 0.18e2) * pow(x, 0.36e2) / 0.6402373705728000e16);
return retval;
}

double PHO_19_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.19e2 * a * x * x + 0.171e3 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.323e3 / 0.2e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.323e3 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.969e3 / 0.10e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.2261e4 / 0.60e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.4199e4 / 0.420e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.4199e4 / 0.2240e4 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.46189e5 / 0.181440e6 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.46189e5 / 0.1814400e7 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.4199e4 / 0.2217600e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.4199e4 / 0.39916800e8 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.323e3 / 0.74131200e8 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.323e3 / 0.2421619200e10 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.323e3 / 0.108972864000e12 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.323e3 / 0.6974263296000e13 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.19e2 / 0.39520825344000e14 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.19e2 / 0.6402373705728000e16 * pow(a, 0.18e2) * pow(x, 0.36e2) - pow(a, 0.19e2) * pow(x, 0.38e2) / 0.121645100408832000e18);
return retval;
}

double PHO_20_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.20e2 * a * x * x + 0.95e2 * a * a * pow(x, 0.4e1) - 0.190e3 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.1615e4 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.646e3 / 0.5e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.323e3 / 0.6e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.323e3 / 0.21e2 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.4199e4 / 0.1344e4 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.4199e4 / 0.9072e4 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.46189e5 / 0.907200e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.4199e4 / 0.997920e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.4199e4 / 0.15966720e8 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.323e3 / 0.25945920e8 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.323e3 / 0.726485760e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.323e3 / 0.27243216000e11 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.323e3 / 0.1394852659200e13 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.19e2 / 0.5928123801600e13 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.19e2 / 0.640237370572800e15 * pow(a, 0.18e2) * pow(x, 0.36e2) - pow(a, 0.19e2) * pow(x, 0.38e2) / 0.6082255020441600e16 + pow(a, 0.20e2) * pow(x, 0.40e2) / 0.2432902008176640000e19);
return retval;
}

double PHO_21_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.21e2 * a * x * x + 0.105e3 * a * a * pow(x, 0.4e1) - 0.665e3 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.1995e4 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.6783e4 / 0.40e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.2261e4 / 0.30e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.323e3 / 0.14e2 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.323e3 / 0.64e2 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.4199e4 / 0.5184e4 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.4199e4 / 0.43200e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.4199e4 / 0.475200e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.4199e4 / 0.6842880e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.323e3 / 0.9884160e7 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.323e3 / 0.242161920e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.323e3 / 0.7783776000e10 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.323e3 / 0.332107776000e12 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.19e2 / 0.1129166438400e13 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.19e2 / 0.91462481510400e14 * pow(a, 0.18e2) * pow(x, 0.36e2) - pow(a, 0.19e2) * pow(x, 0.38e2) / 0.579262382899200e15 + pow(a, 0.20e2) * pow(x, 0.40e2) / 0.115852476579840000e18 - pow(a, 0.21e2) * pow(x, 0.42e2) / 0.51090942171709440000e20);
return retval;
}

double PHO_22_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.22e2 * a * x * x + 0.231e3 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.770e3 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.7315e4 / 0.24e2 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.4389e4 / 0.20e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.24871e5 / 0.240e3 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.3553e4 / 0.105e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.3553e4 / 0.448e3 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.3553e4 / 0.2592e4 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.46189e5 / 0.259200e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.4199e4 / 0.237600e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.4199e4 / 0.3110400e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.323e3 / 0.4043520e7 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.323e3 / 0.88058880e8 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.323e3 / 0.2476656000e10 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.323e3 / 0.90574848000e11 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.19e2 / 0.256628736000e12 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.19e2 / 0.16629542092800e14 * pow(a, 0.18e2) * pow(x, 0.36e2) - pow(a, 0.19e2) * pow(x, 0.38e2) / 0.78990324940800e14 + pow(a, 0.20e2) * pow(x, 0.40e2) / 0.10532043325440000e17 - pow(a, 0.21e2) * pow(x, 0.42e2) / 0.2322315553259520000e19 + pow(a, 0.22e2) * pow(x, 0.44e2) / 0.1124000727777607680000e22);
return retval;
}

double PHO_23_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.23e2 * a * x * x + 0.253e3 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.1771e4 / 0.6e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.8855e4 / 0.24e2 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.33649e5 / 0.120e3 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.33649e5 / 0.240e3 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.81719e5 / 0.1680e4 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.81719e5 / 0.6720e4 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.81719e5 / 0.36288e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.81719e5 / 0.259200e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.96577e5 / 0.2851200e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.96577e5 / 0.34214400e8 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.7429e4 / 0.40435200e8 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.7429e4 / 0.792529920e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.7429e4 / 0.19813248000e11 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.7429e4 / 0.634023936000e12 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.437e3 / 0.1539772416000e13 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.437e3 / 0.83147710464000e14 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.23e2 / 0.315961299763200e15 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.23e2 / 0.31596129976320000e17 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.23e2 / 0.4644631106519040000e19 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.23e2 / 0.1124000727777607680000e22 * pow(a, 0.22e2) * pow(x, 0.44e2) - pow(a, 0.23e2) * pow(x, 0.46e2) / 0.25852016738884976640000e23);
return retval;
}

double PHO_24_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 + pow(a, 0.24e2) * pow(x, 0.48e2) / 0.620448401733239439360000e24 - pow(a, 0.23e2) * pow(x, 0.46e2) / 0.1077167364120207360000e22 + 0.23e2 / 0.93666727314800640000e20 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.23e2 / 0.580578888314880000e18 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.437e3 / 0.449100288000e12 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.7429e4 / 0.211341312000e12 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.23e2 / 0.5266021662720000e16 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.7429e4 / 0.7429968000e10 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.7429e4 / 0.330220800e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.4807e4 / 0.70e2 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.33649e5 / 0.180e3 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.7429e4 / 0.18532800e8 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.1771e4 / 0.5e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.1771e4 / 0.4e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.1012e4 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.138e3 * a * a * pow(x, 0.4e1) - 0.23e2 / 0.65825270784000e14 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.24e2 * a * x * x + 0.96577e5 / 0.17107200e8 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.7429e4 / 0.118800e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.437e3 / 0.20786927616000e14 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.81719e5 / 0.151200e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.81719e5 / 0.22680e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.81719e5 / 0.4480e4 * pow(a, 0.8e1) * pow(x, 0.16e2));
return retval;
}

double PHO_25_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - pow(a, 0.25e2) * pow(x, 0.50e2) / 0.15511210043330985984000000e26 + pow(a, 0.24e2) * pow(x, 0.48e2) / 0.24817936069329577574400e23 - pow(a, 0.23e2) * pow(x, 0.46e2) / 0.86173389129616588800e20 + 0.23e2 / 0.11240007277776076800e20 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.23e2 / 0.92892622130380800e17 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.437e3 / 0.143712092160e12 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.7429e4 / 0.76082872320e11 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.23e2 / 0.1053204332544000e16 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.7429e4 / 0.2971987200e10 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.7429e4 / 0.145297152e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.24035e5 / 0.252e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.8855e4 / 0.36e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.7429e4 / 0.8895744e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.1771e4 / 0.4e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.6325e4 / 0.12e2 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.1150e4 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.150e3 * a * a * pow(x, 0.4e1) - 0.23e2 / 0.15798064988160e14 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.25e2 * a * x * x + 0.7429e4 / 0.684288e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.7429e4 / 0.66528e5 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.437e3 / 0.5820339732480e13 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.81719e5 / 0.90720e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.408595e6 / 0.72576e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.24035e5 / 0.896e3 * pow(a, 0.8e1) * pow(x, 0.16e2));
return retval;
}

double PHO_26_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - pow(a, 0.25e2) * pow(x, 0.50e2) / 0.596585001666576384000000e24 + pow(a, 0.24e2) * pow(x, 0.48e2) / 0.1909072005333044428800e22 - pow(a, 0.23e2) * pow(x, 0.46e2) / 0.9943083361109606400e19 + 0.23e2 / 0.1729231888888627200e19 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.23e2 / 0.17863965794304000e17 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.437e3 / 0.49746493440e11 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.7429e4 / 0.29262643200e11 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.23e2 / 0.243047153664000e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.7429e4 / 0.1257379200e10 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.7429e4 / 0.67060224e8 * pow(a, 0.14e2) * pow(x, 0.28e2) + pow(a, 0.26e2) * pow(x, 0.52e2) / 0.403291461126605635584000000e27 - 0.16445e5 / 0.126e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.23023e5 / 0.72e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.7429e4 / 0.4447872e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.3289e4 / 0.6e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.7475e4 / 0.12e2 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.1300e4 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.325e3 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.23e2 / 0.4253325189120e13 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.26e2 * a * x * x + 0.96577e5 / 0.4790016e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.96577e5 / 0.498960e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.437e3 / 0.1790873763840e13 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.1062347e7 / 0.725760e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.312455e6 / 0.36288e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.312455e6 / 0.8064e4 * pow(a, 0.8e1) * pow(x, 0.16e2));
return retval;
}

double PHO_27_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - pow(a, 0.25e2) * pow(x, 0.50e2) / 0.44191481604931584000000e23 + pow(a, 0.24e2) * pow(x, 0.48e2) / 0.212119111703671603200e21 - pow(a, 0.23e2) * pow(x, 0.46e2) / 0.1473049386831052800e19 + 0.23e2 / 0.320228127571968000e18 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.23e2 / 0.3969770176512000e16 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.437e3 / 0.18424627200e11 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.7429e4 / 0.11921817600e11 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.23e2 / 0.63012225024000e14 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.7429e4 / 0.558835200e9 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.7429e4 / 0.32288256e8 * pow(a, 0.14e2) * pow(x, 0.28e2) + pow(a, 0.26e2) * pow(x, 0.52e2) / 0.14936720782466875392000000e26 - 0.9867e4 / 0.56e2 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.3289e4 / 0.8e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.7429e4 / 0.2306304e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.2691e4 / 0.4e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.2925e4 / 0.4e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.975e3 / 0.2e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.351e3 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.23e2 / 0.1260244500480e13 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.27e2 * a * x * x + 0.96577e5 / 0.2661120e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.96577e5 / 0.295680e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.437e3 / 0.596957921280e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.62491e5 / 0.26880e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.312455e6 / 0.24192e5 * pow(a, 0.9e1) * pow(x, 0.18e2) - pow(a, 0.27e2) * pow(x, 0.54e2) / 0.10888869450418352160768000000e29 + 0.49335e5 / 0.896e3 * pow(a, 0.8e1) * pow(x, 0.16e2));
return retval;
}

double PHO_28_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - pow(a, 0.25e2) * pow(x, 0.50e2) / 0.4734801600528384000000e22 + pow(a, 0.24e2) * pow(x, 0.48e2) / 0.30302730243381657600e20 - pow(a, 0.23e2) * pow(x, 0.46e2) / 0.263044533362688000e18 + 0.23e2 / 0.68620313051136000e17 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.23e2 / 0.992442544128000e15 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.437e3 / 0.7238246400e10 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.7429e4 / 0.5109350400e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.23e2 / 0.18003492864000e14 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.7429e4 / 0.259459200e9 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.7429e4 / 0.16144128e8 * pow(a, 0.14e2) * pow(x, 0.28e2) + pow(a, 0.26e2) * pow(x, 0.52e2) / 0.1066908627319062528000000e25 - 0.3289e4 / 0.14e2 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.2093e4 / 0.4e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.7429e4 / 0.1235520e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.819e3 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.6825e4 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.546e3 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.189e3 * a * a * pow(x, 0.4e1) - 0.23e2 / 0.405078589440e12 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.28e2 * a * x * x + 0.96577e5 / 0.1520640e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.5681e4 / 0.10560e5 * pow(a, 0.11e2) * pow(x, 0.22e2) + pow(a, 0.28e2) * pow(x, 0.56e2) / 0.304888344611713860501504000000e30 + 0.437e3 / 0.213199257600e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.62491e5 / 0.17280e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.16445e5 / 0.864e3 * pow(a, 0.9e1) * pow(x, 0.18e2) - pow(a, 0.27e2) * pow(x, 0.54e2) / 0.388888194657798291456000000e27 + 0.9867e4 / 0.128e3 * pow(a, 0.8e1) * pow(x, 0.16e2));
return retval;
}

double PHO_29_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.29e2 / 0.18939206402113536000000e23 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.29e2 / 0.151513651216908288000e21 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.29e2 / 0.1578267200176128000e19 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.667e3 / 0.480342191357952000e18 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.667e3 / 0.7939540353024000e16 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.12673e5 / 0.86858956800e11 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.215441e6 / 0.66421555200e11 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.667e3 / 0.162031435776000e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.215441e6 / 0.3632428800e10 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.215441e6 / 0.242161920e9 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.29e2 / 0.3200725881957187584000000e25 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.8671e4 / 0.28e2 * pow(a, 0.7e1) * pow(x, 0.14e2) - pow(a, 0.29e2) * pow(x, 0.58e2) / 0.8841761993739701954543616000000e31 + 0.2639e4 / 0.4e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.215441e6 / 0.19768320e8 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.7917e4 / 0.8e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.7917e4 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.609e3 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.203e3 * a * a * pow(x, 0.4e1) - 0.667e3 / 0.4050785894400e13 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.29e2 * a * x * x + 0.164749e6 / 0.1520640e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.164749e6 / 0.190080e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.29e2 / 0.304888344611713860501504000000e30 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.12673e5 / 0.2345191833600e13 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.95381e5 / 0.17280e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.95381e5 / 0.3456e4 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.29e2 / 0.777776389315596582912000000e27 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.95381e5 / 0.896e3 * pow(a, 0.8e1) * pow(x, 0.16e2));
return retval;
}

double PHO_30_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.29e2 / 0.3156534400352256000000e22 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.29e2 / 0.30302730243381657600e20 * pow(a, 0.24e2) * pow(x, 0.48e2) + pow(a, 0.30e2) * pow(x, 0.60e2) / 0.265252859812191058636308480000000e33 - 0.29e2 / 0.368262346707763200e18 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.667e3 / 0.128091251028787200e18 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.667e3 / 0.2381862105907200e16 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.12673e5 / 0.37638881280e11 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.215441e6 / 0.30996725760e11 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.667e3 / 0.54010478592000e14 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.215441e6 / 0.1816214400e10 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.215441e6 / 0.129153024e9 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.29e2 / 0.426763450927625011200000e24 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.5655e4 / 0.14e2 * pow(a, 0.7e1) * pow(x, 0.14e2) - pow(a, 0.29e2) * pow(x, 0.58e2) / 0.294725399791323398484787200000e30 + 0.13195e5 / 0.16e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.12673e5 / 0.658944e6 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.23751e5 / 0.20e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.9135e4 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.2030e4 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.435e3 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.667e3 / 0.1485288161280e13 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.30e2 * a * x * x + 0.164749e6 / 0.912384e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.8671e4 / 0.6336e4 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.29e2 / 0.20325889640780924033433600000e29 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.12673e5 / 0.938076733440e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.95381e5 / 0.11520e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.476905e6 / 0.12096e5 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.29e2 / 0.77777638931559658291200000e26 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.130065e6 / 0.896e3 * pow(a, 0.8e1) * pow(x, 0.16e2));
return retval;
}

double PHO_31_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.899e3 / 0.18939206402113536000000e23 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.899e3 / 0.212119111703671603200e21 * pow(a, 0.24e2) * pow(x, 0.48e2) - pow(a, 0.31e2) * pow(x, 0.62e2) / 0.8222838654177922817725562880000000e34 + 0.31e2 / 0.265252859812191058636308480000000e33 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.899e3 / 0.2946098773662105600e19 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.20677e5 / 0.1152821259259084800e19 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.20677e5 / 0.23818621059072000e17 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.392863e6 / 0.526944337920e12 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.6678671e7 / 0.464950886400e12 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.20677e5 / 0.594115264512000e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.6678671e7 / 0.29059430400e11 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.392863e6 / 0.129153024e9 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.899e3 / 0.2133817254638125056000000e25 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.58435e5 / 0.112e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.31e2 / 0.589450799582646796969574400000e30 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.81809e5 / 0.80e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.392863e6 / 0.11860992e8 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.56637e5 / 0.40e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.31465e5 / 0.24e2 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.4495e4 / 0.6e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.465e3 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.20677e5 / 0.17823457935360e14 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.31e2 * a * x * x + 0.268801e6 / 0.912384e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.268801e6 / 0.126720e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.899e3 / 0.60977668922342772100300800000e29 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.392863e6 / 0.12194997534720e14 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.2956811e7 / 0.241920e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.1344005e7 / 0.24192e5 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.899e3 / 0.311110555726238633164800000e27 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.175305e6 / 0.896e3 * pow(a, 0.8e1) * pow(x, 0.16e2));
return retval;
}

double PHO_32_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 + pow(a, 0.32e2) * pow(x, 0.64e2) / 0.263130836933693530167218012160000000e36 - 0.899e3 / 0.4142951400462336000000e22 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.899e3 / 0.53029777925917900800e20 * pow(a, 0.24e2) * pow(x, 0.48e2) - pow(a, 0.31e2) * pow(x, 0.62e2) / 0.256963707943060088053923840000000e33 + 0.31e2 / 0.16578303738261941164769280000000e32 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.899e3 / 0.828590280092467200e18 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.20677e5 / 0.360256643518464000e18 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.20677e5 / 0.8187650989056000e16 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.392863e6 / 0.247005158400e12 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.6678671e7 / 0.232475443200e12 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.20677e5 / 0.222793224192000e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.392863e6 / 0.908107200e9 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.392863e6 / 0.72648576e8 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.899e3 / 0.400090735244648448000000e24 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.23374e5 / 0.35e2 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.31e2 / 0.55261012460873137215897600000e29 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.6293e4 / 0.5e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.20677e5 / 0.370656e6 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.25172e5 / 0.15e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.4495e4 / 0.3e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.2480e4 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.248e3 * a * a * pow(x, 0.4e1) - 0.20677e5 / 0.7240779786240e13 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.32e2 * a * x * x + 0.268801e6 / 0.570240e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.268801e6 / 0.83160e5 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.899e3 / 0.7622208615292846512537600000e28 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.392863e6 / 0.5335311421440e13 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.268801e6 / 0.15120e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.58435e5 / 0.756e3 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.899e3 / 0.48611024332224786432000000e26 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.58435e5 / 0.224e3 * pow(a, 0.8e1) * pow(x, 0.16e2));
return retval;
}

double PHO_33_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 + pow(a, 0.32e2) * pow(x, 0.64e2) / 0.7973661725263440308097515520000000e34 - 0.899e3 / 0.1004351854657536000000e22 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.899e3 / 0.14462666707068518400e20 * pow(a, 0.24e2) * pow(x, 0.48e2) - pow(a, 0.31e2) * pow(x, 0.62e2) / 0.15573558057155156851752960000000e32 + 0.31e2 / 0.1507118521660176469524480000000e31 * pow(a, 0.30e2) * pow(x, 0.60e2) - pow(a, 0.33e2) * pow(x, 0.66e2) / 0.8683317618811886495518194401280000000e37 - 0.899e3 / 0.251087963664384000e18 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.20677e5 / 0.120085547839488000e18 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.20677e5 / 0.2977327632384000e16 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.392863e6 / 0.119760076800e12 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.392863e6 / 0.7044710400e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.20677e5 / 0.87767027712000e14 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.392863e6 / 0.495331200e9 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.20677e5 / 0.2201472e7 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.899e3 / 0.84867731718561792000000e23 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.29667e5 / 0.35e2 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.31e2 / 0.6698304540711895420108800000e28 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.69223e5 / 0.45e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.20677e5 / 0.224640e6 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.9889e4 / 0.5e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.1705e4 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.2728e4 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.264e3 * a * a * pow(x, 0.4e1) - 0.20677e5 / 0.3071845969920e13 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.33e2 * a * x * x + 0.268801e6 / 0.362880e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.268801e6 / 0.55440e5 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.899e3 / 0.1154880093226188865536000000e28 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.392863e6 / 0.2425141555200e13 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.128557e6 / 0.5040e4 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.642785e6 / 0.6048e4 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.899e3 / 0.8838368060404506624000000e25 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.385671e6 / 0.1120e4 * pow(a, 0.8e1) * pow(x, 0.16e2));
return retval;
}

double PHO_34_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 + pow(a, 0.32e2) * pow(x, 0.64e2) / 0.469038925015496488711618560000000e33 - 0.899e3 / 0.265857843879936000000e21 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.899e3 / 0.4253725502078976000e19 * pow(a, 0.24e2) * pow(x, 0.48e2) - pow(a, 0.31e2) * pow(x, 0.62e2) / 0.1374137475631337369272320000000e31 + 0.31e2 / 0.177308061371785467002880000000e30 * pow(a, 0.30e2) * pow(x, 0.60e2) - pow(a, 0.33e2) * pow(x, 0.66e2) / 0.255391694670937838103476305920000000e36 - 0.899e3 / 0.81234341185536000e17 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.20677e5 / 0.42383134531584000e17 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.20677e5 / 0.1138389977088000e16 * pow(a, 0.21e2) * pow(x, 0.42e2) + pow(a, 0.34e2) * pow(x, 0.68e2) / 0.295232799039604140847618609643520000000e39 - 0.392863e6 / 0.59880038400e11 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.6678671e7 / 0.63402393600e11 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.20677e5 / 0.36139364352000e14 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.351509e6 / 0.247665600e9 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.351509e6 / 0.22014720e8 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.899e3 / 0.19968878051426304000000e23 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.336226e6 / 0.315e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.31e2 / 0.985044785398808150016000000e27 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.168113e6 / 0.90e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.351509e6 / 0.2358720e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.11594e5 / 0.5e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.5797e4 / 0.3e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.2992e4 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.561e3 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.20677e5 / 0.1355226163200e13 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.34e2 * a * x * x + 0.4569617e7 / 0.3991680e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.198679e6 / 0.27720e5 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.899e3 / 0.203802369392856858624000000e27 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.392863e6 / 0.1141243084800e13 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.2185469e7 / 0.60480e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.2185469e7 / 0.15120e5 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.899e3 / 0.1819664012436221952000000e25 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.504339e6 / 0.1120e4 * pow(a, 0.8e1) * pow(x, 0.16e2));
return retval;
}

double PHO_35_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 + pow(a, 0.32e2) * pow(x, 0.64e2) / 0.40203336429899699032424448000000e32 - 0.899e3 / 0.75959383965696000000e20 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.899e3 / 0.1336885157796249600e19 * pow(a, 0.24e2) * pow(x, 0.48e2) - pow(a, 0.31e2) * pow(x, 0.62e2) / 0.157044282929295699345408000000e30 + 0.31e2 / 0.25329723053112209571840000000e29 * pow(a, 0.30e2) * pow(x, 0.60e2) - pow(a, 0.33e2) * pow(x, 0.66e2) / 0.14593811124053590748770074624000000e35 - 0.899e3 / 0.27851774120755200e17 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.20677e5 / 0.15742307111731200e17 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.20677e5 / 0.455355990835200e15 * pow(a, 0.21e2) * pow(x, 0.42e2) + pow(a, 0.34e2) * pow(x, 0.68e2) / 0.8435222829702975452789103132672000000e37 - 0.392863e6 / 0.30795448320e11 * pow(a, 0.17e2) * pow(x, 0.34e2) - pow(a, 0.35e2) * pow(x, 0.70e2) / 0.10333147966386144929666651337523200000000e41 + 0.351509e6 / 0.1811496960e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.20677e5 / 0.15488299008000e14 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.351509e6 / 0.141523200e9 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.351509e6 / 0.13208832e8 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.899e3 / 0.5134854356081049600000e22 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.168113e6 / 0.126e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.31e2 / 0.168864820354081397145600000e27 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.40579e5 / 0.18e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.351509e6 / 0.1482624e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.40579e5 / 0.15e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.6545e4 / 0.3e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.6545e4 / 0.6e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.595e3 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.20677e5 / 0.619531960320e12 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.35e2 * a * x * x + 0.198679e6 / 0.114048e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.198679e6 / 0.19008e5 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.899e3 / 0.40760473878571371724800000e26 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.392863e6 / 0.554318069760e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.2185469e7 / 0.43200e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.168113e6 / 0.864e3 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.899e3 / 0.415923202842565017600000e24 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.168113e6 / 0.288e3 * pow(a, 0.8e1) * pow(x, 0.16e2));
return retval;
}

double PHO_36_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 + pow(a, 0.32e2) * pow(x, 0.64e2) / 0.4467037381099966559158272000000e31 - 0.899e3 / 0.23209811767296000000e20 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.899e3 / 0.445628385932083200e18 * pow(a, 0.24e2) * pow(x, 0.48e2) - pow(a, 0.31e2) * pow(x, 0.62e2) / 0.21811705962402180464640000000e29 + 0.31e2 / 0.4221620508852034928640000000e28 * pow(a, 0.30e2) * pow(x, 0.60e2) - pow(a, 0.33e2) * pow(x, 0.66e2) / 0.1216150927004465895730839552000000e34 - 0.899e3 / 0.10057585099161600e17 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.20677e5 / 0.6122008321228800e16 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.20677e5 / 0.189731662848000e15 * pow(a, 0.21e2) * pow(x, 0.42e2) + pow(a, 0.34e2) * pow(x, 0.68e2) / 0.468623490539054191821616840704000000e36 - 0.20677e5 / 0.855429120e9 * pow(a, 0.17e2) * pow(x, 0.34e2) - pow(a, 0.35e2) * pow(x, 0.70e2) / 0.287031887955170692490740314931200000000e39 + 0.351509e6 / 0.1006387200e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.20677e5 / 0.6883688448000e13 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.351509e6 / 0.82555200e8 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.351509e6 / 0.8072064e7 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.899e3 / 0.1426348432244736000000e22 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.11594e5 / 0.7e1 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.31e2 / 0.32834826179960271667200000e26 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.40579e5 / 0.15e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.15283e5 / 0.41184e5 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.15708e5 / 0.5e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.19635e5 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.1190e4 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.315e3 * a * a * pow(x, 0.4e1) - 0.20677e5 / 0.292556759040e12 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.36e2 * a * x * x + 0.198679e6 / 0.76032e5 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.198679e6 / 0.13200e5 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.899e3 / 0.9057883084126971494400000e25 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.392863e6 / 0.277159034880e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.168113e6 / 0.2400e4 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.168113e6 / 0.648e3 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.899e3 / 0.103980800710641254400000e24 * pow(a, 0.27e2) * pow(x, 0.54e2) + pow(a, 0.36e2) * pow(x, 0.72e2) / 0.371993326789901217467999448150835200000000e42 + 0.168113e6 / 0.224e3 * pow(a, 0.8e1) * pow(x, 0.16e2));
return retval;
}

double PHO_37_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 + 0.37e2 / 0.22335186905499832795791360000000e32 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.33263e5 / 0.278517741207552000000e21 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.33263e5 / 0.5793169017117081600e19 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.37e2 / 0.130870235774413082787840000000e30 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.1147e4 / 0.29551343561964244500480000000e29 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.37e2 / 0.4864603708017863582923358208000000e34 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.33263e5 / 0.140806191388262400e18 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.765049e6 / 0.91830124818432000e17 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.765049e6 / 0.3035706605568000e16 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.37e2 / 0.1405870471617162575464850522112000000e37 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.765049e6 / 0.17108582400e11 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.37e2 / 0.574063775910341384981480629862400000000e39 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.13005833e8 / 0.21134131200e11 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.765049e6 / 0.117022703616000e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.13005833e8 / 0.1816214400e10 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.565471e6 / 0.8072064e7 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.33263e5 / 0.15689832754692096000000e23 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.214489e6 / 0.105e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.1147e4 / 0.262678609439682173337600000e27 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.48433e5 / 0.15e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.565471e6 / 0.988416e6 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.145299e6 / 0.40e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.22015e5 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.1295e4 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.333e3 * a * a * pow(x, 0.4e1) - 0.765049e6 / 0.5266021662720e13 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.37e2 * a * x * x + 0.7351123e7 / 0.1900800e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.565471e6 / 0.26400e5 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.33263e5 / 0.81520947757142743449600000e26 * pow(a, 0.28e2) * pow(x, 0.56e2) - pow(a, 0.37e2) * pow(x, 0.74e2) / 0.13763753091226345046315979581580902400000000e44 + 0.765049e6 / 0.277159034880e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.6220181e7 / 0.64800e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.6220181e7 / 0.18144e5 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.33263e5 / 0.1039808007106412544000000e25 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.37e2 / 0.371993326789901217467999448150835200000000e42 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.214489e6 / 0.224e3 * pow(a, 0.8e1) * pow(x, 0.16e2));
return retval;
}

double PHO_38_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 + 0.37e2 / 0.3526608458763131494072320000000e31 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.33263e5 / 0.95282385149952000000e20 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.33263e5 / 0.2134325427358924800e19 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.37e2 / 0.24107675011076094197760000000e29 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.1147e4 / 0.6221335486729314631680000000e28 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.37e2 / 0.640079435265508366174126080000000e33 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.33263e5 / 0.55581391337472000e17 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.765049e6 / 0.38665315713024000e17 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.765049e6 / 0.1358079270912000e16 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.37e2 / 0.147986365433385534259457949696000000e36 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.14535931e8 / 0.179640115200e12 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.37e2 / 0.45320824413974319866958997094400000000e38 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.247110827e9 / 0.232475443200e12 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.765049e6 / 0.55431806976000e14 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.10743949e8 / 0.908107200e9 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.10743949e8 / 0.96864768e8 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.33263e5 / 0.4954684027797504000000e22 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.262922e6 / 0.105e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.1147e4 / 0.62213354867293146316800000e26 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.920227e6 / 0.240e3 * pow(a, 0.6e1) * pow(x, 0.12e2) + pow(a, 0.38e2) * pow(x, 0.76e2) / 0.523022617466601111760007224100074291200000000e45 - 0.10743949e8 / 0.12355200e8 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.83657e5 / 0.20e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.24605e5 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.1406e4 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.703e3 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.765049e6 / 0.2633010831360e13 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.38e2 * a * x * x + 0.10743949e8 / 0.1900800e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.10743949e8 / 0.356400e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.33263e5 / 0.21452880988721774592000000e26 * pow(a, 0.28e2) * pow(x, 0.56e2) - pow(a, 0.37e2) * pow(x, 0.74e2) / 0.362204028716482764376736304778444800000000e42 + 0.14535931e8 / 0.2771590348800e13 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.118183439e9 / 0.907200e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.4075291e7 / 0.9072e4 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.33263e5 / 0.300997054688698368000000e24 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.37e2 / 0.19578596146836906182526286744780800000000e41 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.4075291e7 / 0.3360e4 * pow(a, 0.8e1) * pow(x, 0.16e2));
return retval;
}

double PHO_39_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 + 0.37e2 / 0.632981005419023601500160000000e30 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.33263e5 / 0.34203933130752000000e20 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.33263e5 / 0.820894395138048000e18 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.37e2 / 0.4945164104836121886720000000e28 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.1147e4 / 0.1435692804629841838080000000e28 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.37e2 / 0.98473759271616671719096320000000e32 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.33263e5 / 0.22802622087168000e17 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.765049e6 / 0.16854111977472000e17 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.765049e6 / 0.626805817344000e15 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.37e2 / 0.18972610952998145417879224320000000e35 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.14535931e8 / 0.101335449600e12 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.37e2 / 0.4648289683484545627380409958400000000e37 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.10743949e8 / 0.5960908800e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.765049e6 / 0.27005239296000e14 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.10743949e8 / 0.558835200e9 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.10743949e8 / 0.62092800e8 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.33263e5 / 0.1651561342599168000000e22 * pow(a, 0.26e2) * pow(x, 0.52e2) - pow(a, 0.39e2) * pow(x, 0.78e2) / 0.20397882081197443358640281739902897356800000000e47 - 0.1708993e7 / 0.560e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.1147e4 / 0.15952142273664909312000000e26 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.1087541e7 / 0.240e3 * pow(a, 0.6e1) * pow(x, 0.12e2) + pow(a, 0.38e2) * pow(x, 0.76e2) / 0.13410836345297464404102749335899340800000000e44 - 0.10743949e8 / 0.8236800e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.191919e6 / 0.40e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.27417e5 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.9139e4 / 0.6e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.741e3 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.765049e6 / 0.1350261964800e13 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.39e2 * a * x * x + 0.139671337e9 / 0.17107200e8 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.139671337e9 / 0.3326400e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.33263e5 / 0.6050812586562551808000000e25 * pow(a, 0.28e2) * pow(x, 0.56e2) - pow(a, 0.37e2) * pow(x, 0.74e2) / 0.18574565575204244327012118193766400000000e41 + 0.14535931e8 / 0.1492394803200e13 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.52978783e8 / 0.302400e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.52978783e8 / 0.90720e5 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.33263e5 / 0.92614478365753344000000e23 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.37e2 / 0.1506045857448992783271252826521600000000e40 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.1708993e7 / 0.1120e4 * pow(a, 0.8e1) * pow(x, 0.16e2));
return retval;
}

double PHO_40_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 + 0.37e2 / 0.126596201083804720300032000000e30 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.33263e5 / 0.12826474924032000000e20 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.33263e5 / 0.328357758055219200e18 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.37e2 / 0.1112661923588127424512000000e28 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.1147e4 / 0.358923201157460459520000000e27 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.37e2 / 0.17232907872532917550841856000000e32 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.33263e5 / 0.9691114387046400e16 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.765049e6 / 0.7584350389862400e16 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.765049e6 / 0.297732763238400e15 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.37e2 / 0.2845891642949721812681883648000000e34 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.631997e6 / 0.2533386240e10 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.37e2 / 0.581036210435568203422551244800000000e36 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.10743949e8 / 0.3576545280e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.765049e6 / 0.13502619648000e14 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.10743949e8 / 0.349272000e9 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.10743949e8 / 0.40360320e8 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.33263e5 / 0.578046469909708800000e21 * pow(a, 0.26e2) * pow(x, 0.52e2) - pow(a, 0.39e2) * pow(x, 0.78e2) / 0.509947052029936083966007043497572433920000000e45 + pow(a, 0.40e2) * pow(x, 0.80e2) / 0.815915283247897734345611269596115894272000000000e48 - 0.155363e6 / 0.42e2 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.1147e4 / 0.4386839125257850060800000e25 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.63973e5 / 0.12e2 * pow(a, 0.6e1) * pow(x, 0.12e2) + pow(a, 0.38e2) * pow(x, 0.76e2) / 0.670541817264873220205137466794967040000000e42 - 0.10743949e8 / 0.5559840e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.27417e5 / 0.5e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.45695e5 / 0.12e2 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.4940e4 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.390e3 * a * a * pow(x, 0.4e1) - 0.765049e6 / 0.708887531520e12 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.40e2 * a * x * x + 0.139671337e9 / 0.11975040e8 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.4816253e7 / 0.83160e5 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.33263e5 / 0.1815243775968765542400000e25 * pow(a, 0.28e2) * pow(x, 0.56e2) - pow(a, 0.37e2) * pow(x, 0.74e2) / 0.1393092418140318324525908864532480000000e40 + 0.14535931e8 / 0.820817141760e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.52978783e8 / 0.226800e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.1708993e7 / 0.2268e4 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.33263e5 / 0.30099705468869836800000e23 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.37e2 / 0.150604585744899278327125282652160000000e39 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.1708993e7 / 0.896e3 * pow(a, 0.8e1) * pow(x, 0.16e2));
return retval;
}

double PHO_41_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - pow(a, 0.41e2) * pow(x, 0.82e2) / 0.33452526613163807108170062053440751665152000000000e50 + 0.1517e4 / 0.1139365809754242482700288000000e31 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.1363783e7 / 0.205223598784512000000e21 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.1363783e7 / 0.5582081886938726400e19 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.1517e4 / 0.11126619235881274245120000000e29 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.47027e5 / 0.3948155212732065054720000000e28 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.1517e4 / 0.137863262980263340406734848000000e33 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.1363783e7 / 0.174440058966835200e18 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.31367009e8 / 0.144102657407385600e18 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.31367009e8 / 0.5954655264768000e16 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.1517e4 / 0.19921241500648052688773185536000000e35 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.25911877e8 / 0.60801269760e11 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.1517e4 / 0.3486217262613409220535307468800000000e37 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.440501909e9 / 0.89413632000e11 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.31367009e8 / 0.283555012608000e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.440501909e9 / 0.9081072000e10 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.440501909e9 / 0.1089728640e10 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.1363783e7 / 0.8670697048645632000000e22 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.41e2 / 0.1019894104059872167932014086995144867840000000e46 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.41e2 / 0.815915283247897734345611269596115894272000000000e48 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.374699e6 / 0.84e2 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.47027e5 / 0.52642069503094200729600000e26 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.374699e6 / 0.60e2 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.41e2 / 0.2011625451794619660615412400384901120000000e43 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.440501909e9 / 0.155675520e9 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.374699e6 / 0.60e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.50635e5 / 0.12e2 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.5330e4 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.410e3 * a * a * pow(x, 0.4e1) - 0.31367009e8 / 0.15595525693440e14 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.41e2 * a * x * x + 0.197466373e9 / 0.11975040e8 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.197466373e9 / 0.2494800e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.1363783e7 / 0.23598169087593952051200000e26 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.41e2 / 0.5572369672561273298103635458129920000000e40 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.25911877e8 / 0.820817141760e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.70068713e8 / 0.226800e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.70068713e8 / 0.72576e5 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.1363783e7 / 0.421395876564177715200000e24 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.1517e4 / 0.753022928724496391635626413260800000000e39 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.6369883e7 / 0.2688e4 * pow(a, 0.8e1) * pow(x, 0.16e2));
return retval;
}

double PHO_42_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - pow(a, 0.41e2) * pow(x, 0.82e2) / 0.796488728884852550194525286986684563456000000000e48 + 0.1517e4 / 0.271277573751010114928640000000e30 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.1363783e7 / 0.83066694746112000000e20 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.1363783e7 / 0.2392320808688025600e19 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.1517e4 / 0.2914114561778428968960000000e28 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.47027e5 / 0.1128044346494875729920000000e28 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.1517e4 / 0.29542127781485001515728896000000e32 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.1363783e7 / 0.78913360008806400e17 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.31367009e8 / 0.68620313051136000e17 * pow(a, 0.22e2) * pow(x, 0.44e2) + pow(a, 0.42e2) * pow(x, 0.84e2) / 0.1405006117752879898543142606244511569936384000000000e52 - 0.31367009e8 / 0.2977327632384000e16 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.1517e4 / 0.3794522190599629083575844864000000e34 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.25911877e8 / 0.36191232000e11 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.1517e4 / 0.581036210435568203422551244800000000e36 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.440501909e9 / 0.55351296000e11 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.31367009e8 / 0.148528816128000e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.440501909e9 / 0.5837832000e10 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.440501909e9 / 0.726485760e9 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.1363783e7 / 0.3303122685198336000000e22 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.41e2 / 0.72849578861419440566572434785367490560000000e44 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.41e2 / 0.38853108726090368302171965218862661632000000000e47 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.374699e6 / 0.70e2 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.47027e5 / 0.16293973893814871654400000e26 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.2622893e7 / 0.360e3 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.41e2 / 0.191583376361392348630039276227133440000000e42 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.15189721e8 / 0.3706560e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.70889e5 / 0.10e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.18655e5 / 0.4e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.5740e4 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.861e3 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.1363783e7 / 0.371322040320e12 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.42e2 * a * x * x + 0.197466373e9 / 0.8553600e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.6369883e7 / 0.59400e5 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.1363783e7 / 0.7866056362531317350400000e25 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.41e2 / 0.663377341971580154536147078348800000000e39 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.25911877e8 / 0.469038366720e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.70068713e8 / 0.172800e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.6369883e7 / 0.5184e4 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.1363783e7 / 0.150498527344349184000000e24 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.1517e4 / 0.107574704103499484519375201894400000000e39 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.374699e6 / 0.128e3 * pow(a, 0.8e1) * pow(x, 0.16e2));
return retval;
}

double PHO_43_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.43e2 / 0.1592977457769705100389050573973369126912000000000e49 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.65231e5 / 0.2984053311261111264215040000000e31 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.58642669e8 / 0.1495200505430016000000e22 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.58642669e8 / 0.45454095365072486400e20 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.65231e5 / 0.34969374741341147627520000000e29 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.2022161e7 / 0.14664576504433384488960000000e29 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.65231e5 / 0.295421277814850015157288960000000e33 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.58642669e8 / 0.1578267200176128000e19 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.1348781387e10 / 0.1441026574073856000e19 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.43e2 / 0.1405006117752879898543142606244511569936384000000000e52 * pow(a, 0.42e2) * pow(x, 0.84e2) - 0.1348781387e10 / 0.65501207912448000e17 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.65231e5 / 0.34150699715396661752182603776000000e35 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.1114210711e10 / 0.940972032000e12 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.65231e5 / 0.4648289683484545627380409958400000000e37 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.18941582087e11 / 0.1494484992000e13 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.58642669e8 / 0.148528816128000e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.18941582087e11 / 0.163459296000e12 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.653158003e9 / 0.726485760e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - pow(a, 0.43e2) * pow(x, 0.86e2) / 0.60415263063373835637355132068513997507264512000000000e53 + 0.58642669e8 / 0.56153085648371712000000e23 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.1763e4 / 0.291398315445677762266289739141469962240000000e45 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.1763e4 / 0.116559326178271104906515895656587984896000000000e48 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.16112057e8 / 0.2520e4 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.2022161e7 / 0.228115634513408203161600000e27 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.3048227e7 / 0.360e3 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.1763e4 / 0.957916881806961743150196381135667200000000e42 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.653158003e9 / 0.111196800e9 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.160433e6 / 0.20e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.61705e5 / 0.12e2 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.12341e5 / 0.6e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.903e3 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.58642669e8 / 0.8911728967680e13 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.43e2 * a * x * x + 0.273904969e9 / 0.8553600e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.273904969e9 / 0.1900800e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.58642669e8 / 0.117990845437969760256000000e27 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.1763e4 / 0.3980264051829480927216882470092800000000e40 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.1114210711e10 / 0.11725959168000e14 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.273904969e9 / 0.518400e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.16112057e8 / 0.10368e5 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.58642669e8 / 0.2407976437509586944000000e25 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.65231e5 / 0.753022928724496391635626413260800000000e39 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.16112057e8 / 0.4480e4 * pow(a, 0.8e1) * pow(x, 0.16e2));
return retval;
}

double PHO_44_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.43e2 / 0.108612099393388984117435266407275167744000000000e48 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.65231e5 / 0.813832721253030344785920000000e30 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.58642669e8 / 0.645654763708416000000e21 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.58642669e8 / 0.20660952438669312000e20 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.65231e5 / 0.10331860719032611799040000000e29 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.2022161e7 / 0.4666001615046985973760000000e28 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.65231e5 / 0.73855319453712503789322240000000e32 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.58642669e8 / 0.753263890993152000e18 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.1348781387e10 / 0.720513287036928000e18 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.43e2 / 0.63863914443312722661051936647477798633472000000000e50 * pow(a, 0.42e2) * pow(x, 0.84e2) - 0.58642669e8 / 0.1488663816192000e16 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.65231e5 / 0.7761522662590150398223319040000000e34 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.1114210711e10 / 0.577414656000e12 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.65231e5 / 0.950786526167293423782356582400000000e36 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.18941582087e11 / 0.951035904000e12 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.58642669e8 / 0.81015717888000e14 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.653158003e9 / 0.3714984000e10 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.653158003e9 / 0.495331200e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - pow(a, 0.43e2) * pow(x, 0.86e2) / 0.1373074160531223537212616637920772670619648000000000e52 + 0.58642669e8 / 0.22971716856152064000000e23 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.1763e4 / 0.33113444937008836621169288538803404800000000e44 * pow(a, 0.39e2) * pow(x, 0.78e2) + pow(a, 0.44e2) * pow(x, 0.88e2) / 0.2658271574788448768043625811014615890319638528000000000e55 + 0.1763e4 / 0.10596302379842827718774172332417089536000000000e47 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.4790071e7 / 0.630e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.2022161e7 / 0.77766693584116432896000000e26 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.1764763e7 / 0.180e3 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.1763e4 / 0.130625029337312964975026779245772800000000e42 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.21069613e8 / 0.2527200e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.135751e6 / 0.15e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.135751e6 / 0.24e2 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.6622e4 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.473e3 * a * a * pow(x, 0.4e1) - 0.58642669e8 / 0.5063482368000e13 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.44e2 * a * x * x + 0.273904969e9 / 0.6220800e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.273904969e9 / 0.1425600e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.58642669e8 / 0.42905761977443549184000000e26 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.1763e4 / 0.633223826427417420239049483878400000000e39 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.1114210711e10 / 0.6928975872000e13 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.177232627e9 / 0.259200e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.177232627e9 / 0.90720e5 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.58642669e8 / 0.930354532674158592000000e24 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.65231e5 / 0.136913259768090253024659347865600000000e39 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.177232627e9 / 0.40320e5 * pow(a, 0.8e1) * pow(x, 0.16e2));
return retval;
}

double PHO_45_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.43e2 / 0.9654408834967909699327579236202237132800000000e46 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.65231e5 / 0.235107230584208766271488000000e30 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.58642669e8 / 0.286957672759296000000e21 * pow(a, 0.25e2) * pow(x, 0.50e2) - pow(a, 0.45e2) * pow(x, 0.90e2) / 0.119622220865480194561963161495657715064383733760000000000e57 + 0.58642669e8 / 0.9641777804712345600e19 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.65231e5 / 0.3214356668143479226368000000e28 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.2022161e7 / 0.1555333871682328657920000000e28 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.65231e5 / 0.19694751854323334343819264000000e32 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.58642669e8 / 0.368262346707763200e18 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.58642669e8 / 0.16011406378598400e17 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.43e2 / 0.4257594296220848177403462443165186575564800000000e49 * pow(a, 0.42e2) * pow(x, 0.84e2) - 0.58642669e8 / 0.793954035302400e15 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.65231e5 / 0.1897261095299814541787922432000000e34 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.1114210711e10 / 0.359280230400e12 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.65231e5 / 0.211285894703842983062745907200000000e36 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.653158003e9 / 0.21134131200e11 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.58642669e8 / 0.45008732160000e14 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.653158003e9 / 0.2476656000e10 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.21069613e8 / 0.11007360e8 * pow(a, 0.14e2) * pow(x, 0.28e2) - pow(a, 0.43e2) * pow(x, 0.86e2) / 0.61025518245832157209449628352034340916428800000000e50 + 0.58642669e8 / 0.9699169339264204800000e22 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.1763e4 / 0.4415125991601178216155905138507120640000000e43 * pow(a, 0.39e2) * pow(x, 0.78e2) + pow(a, 0.44e2) * pow(x, 0.88e2) / 0.59072701661965528178747240244769242007103078400000000e53 + 0.1763e4 / 0.1177366931093647524308241370268565504000000000e46 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.252109e6 / 0.28e2 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.2022161e7 / 0.27650379941019176140800000e26 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.135751e6 / 0.12e2 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.1763e4 / 0.20319449008026461218337498993786880000000e41 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.21069613e8 / 0.1797120e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.407253e6 / 0.40e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.49665e5 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.2365e4 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.495e3 * a * a * pow(x, 0.4e1) - 0.58642669e8 / 0.2925567590400e13 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.45e2 * a * x * x + 0.273904969e9 / 0.4561920e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.16112057e8 / 0.63360e5 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.58642669e8 / 0.16208843413700896358400000e26 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.1763e4 / 0.112573124698207541375831019356160000000e39 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.1114210711e10 / 0.4157385523200e13 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.177232627e9 / 0.201600e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.177232627e9 / 0.72576e5 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.58642669e8 / 0.372141813069663436800000e24 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.65231e5 / 0.27382651953618050604931869573120000000e38 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.4790071e7 / 0.896e3 * pow(a, 0.8e1) * pow(x, 0.16e2));
return retval;
}

double PHO_46_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.43e2 / 0.1049392264670424967318215134369808384000000000e46 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.65231e5 / 0.71554374525628754952192000000e29 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.58642669e8 / 0.131002415824896000000e21 * pow(a, 0.25e2) * pow(x, 0.50e2) - pow(a, 0.45e2) * pow(x, 0.90e2) / 0.2600483062293047707868764380340385110095298560000000000e55 + 0.58642669e8 / 0.4611285037036339200e19 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.65231e5 / 0.1048159783090264965120000000e28 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.2022161e7 / 0.540985694498201272320000000e27 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.65231e5 / 0.5565908132743551010209792000000e31 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.58642669e8 / 0.184131173353881600e18 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.1348781387e10 / 0.192136876543180800e18 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.43e2 / 0.370225590975725928469866299405668397875200000000e48 * pow(a, 0.42e2) * pow(x, 0.84e2) + pow(a, 0.46e2) * pow(x, 0.92e2) / 0.5502622159812088949850305428800254892961651752960000000000e58 - 0.1348781387e10 / 0.9924425441280000e16 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.65231e5 / 0.494937677034734228292501504000000e33 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.883684357e9 / 0.179640115200e12 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.65231e5 / 0.50524887863962452471526195200000000e35 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.15022634069e11 / 0.317011968000e12 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.1348781387e10 / 0.585113518080000e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.484601099e9 / 0.1238328000e10 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.484601099e9 / 0.176117760e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - pow(a, 0.43e2) * pow(x, 0.86e2) / 0.3979925102989053731051062718610935277158400000000e49 + 0.58642669e8 / 0.4217030147506176000000e22 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.1763e4 / 0.671866998721918424197637738468474880000000e42 * pow(a, 0.39e2) * pow(x, 0.78e2) + pow(a, 0.44e2) * pow(x, 0.88e2) / 0.2568378333128936007771619141076923565526220800000000e52 + 0.1763e4 / 0.153569599707867068388031483078508544000000000e45 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.446039e6 / 0.42e2 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.2022161e7 / 0.10218618673854912921600000e26 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.3122273e7 / 0.240e3 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.1763e4 / 0.3533817218787210646667391129354240000000e40 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.484601099e9 / 0.29652480e8 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.228459e6 / 0.20e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.54395e5 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.2530e4 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.1035e4 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.1348781387e10 / 0.39495162470400e14 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.46e2 * a * x * x + 0.370577311e9 / 0.4561920e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.370577311e9 / 0.1108800e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.58642669e8 / 0.6342590901013394227200000e25 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.1763e4 / 0.22025176571388432008314764656640000000e38 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.25626846353e11 / 0.58203397324800e14 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.4076350421e10 / 0.3628800e7 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.110171633e9 / 0.36288e5 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.58642669e8 / 0.153710748876600115200000e24 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.65231e5 / 0.5952750424699576218463449907200000000e37 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.5798507e7 / 0.896e3 * pow(a, 0.8e1) * pow(x, 0.16e2));
return retval;
}

double PHO_47_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.2021e4 / 0.6296353588022549803909290806218850304000000000e46 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.3065857e7 / 0.1073315617884431324282880000000e31 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.2756205443e10 / 0.2882053148147712000000e22 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.47e2 / 0.5200966124586095415737528760680770220190597120000000000e55 * pow(a, 0.45e2) * pow(x, 0.90e2) + 0.2756205443e10 / 0.106059555851835801600e21 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.3065857e7 / 0.16770556529444239441920000000e29 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.95041567e8 / 0.9196756806469421629440000000e28 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.3065857e7 / 0.77922713858409714142937088000000e32 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.2756205443e10 / 0.4419148160493158400e19 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.63392725189e11 / 0.4803421913579520000e19 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.2021e4 / 0.1851127954878629642349331497028341989376000000000e49 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.47e2 / 0.5502622159812088949850305428800254892961651752960000000000e58 * pow(a, 0.46e2) * pow(x, 0.92e2) - 0.63392725189e11 / 0.258035061473280000e18 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.3065857e7 / 0.6434189801451544967802519552000000e34 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.41533164779e11 / 0.5389203456000e13 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.3065857e7 / 0.606298654367549429658314342400000000e36 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.22776251653e11 / 0.317011968000e12 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.63392725189e11 / 0.15798064988160000e17 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.22776251653e11 / 0.39626496000e11 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.22776251653e11 / 0.5811886080e10 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.47e2 / 0.15919700411956214924204250874443741108633600000000e50 * pow(a, 0.43e2) * pow(x, 0.86e2) + 0.2756205443e10 / 0.88557633097629696000000e23 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.82861e5 / 0.5374935989775347393581101907747799040000000e43 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.47e2 / 0.7705134999386808023314857423230770696578662400000000e52 * pow(a, 0.44e2) * pow(x, 0.88e2) + 0.82861e5 / 0.1074987197955069478716220381549559808000000000e46 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.20963833e8 / 0.1680e4 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.95041567e8 / 0.183935136129388432588800000e27 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.3579191e7 / 0.240e3 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.82861e5 / 0.31804354969084895820006520164188160000000e41 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.1339779509e10 / 0.59304960e8 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.511313e6 / 0.40e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.59455e5 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.5405e4 / 0.2e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.1081e4 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.63392725189e11 / 0.1105864549171200e16 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.47e2 * a * x * x + 0.17417133617e11 / 0.159667200e9 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.17417133617e11 / 0.39916800e8 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.2756205443e10 / 0.120509227119254490316800000e27 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.82861e5 / 0.220251765713884320083147646566400000000e39 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.41533164779e11 / 0.58203397324800e14 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.5178066751e10 / 0.3628800e7 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.272529829e9 / 0.72576e5 * pow(a, 0.9e1) * pow(x, 0.18e2) - pow(a, 0.47e2) * pow(x, 0.94e2) / 0.258623241511168180642964355153611979969197632389120000000000e60 - 0.2756205443e10 / 0.3074214977532002304000000e25 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.3065857e7 / 0.65480254671695338403097948979200000000e38 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.20963833e8 / 0.2688e4 * pow(a, 0.8e1) * pow(x, 0.16e2));
return retval;
}

double PHO_48_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.2021e4 / 0.918218231586621846403438242573582336000000000e45 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.3065857e7 / 0.357771872628143774760960000000e30 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.2756205443e10 / 0.1380983800154112000000e22 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.47e2 / 0.325060382786630963483595547542548138761912320000000000e54 * pow(a, 0.45e2) * pow(x, 0.90e2) + 0.2756205443e10 / 0.53029777925917900800e20 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.3065857e7 / 0.5939572104178168135680000000e28 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.95041567e8 / 0.3448783802426033111040000000e28 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.3065857e7 / 0.24350848080753035669667840000000e32 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.2756205443e10 / 0.2301639666923520000e19 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.63392725189e11 / 0.2601853536522240000e19 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.2021e4 / 0.231390994359828705293666437128542748672000000000e48 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.47e2 / 0.229275923325503706243762726200010620540068823040000000000e57 * pow(a, 0.46e2) * pow(x, 0.92e2) - 0.63392725189e11 / 0.145144722078720000e18 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.3065857e7 / 0.1876638692090033948942401536000000e34 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.1339779509e10 / 0.112275072000e12 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.3065857e7 / 0.164205885557877970532460134400000000e36 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.22776251653e11 / 0.211341312000e12 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.63392725189e11 / 0.9215537909760000e16 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.22776251653e11 / 0.27243216000e11 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.1339779509e10 / 0.242161920e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.47e2 / 0.1658302126245439054604609466087889698816000000000e49 * pow(a, 0.43e2) * pow(x, 0.86e2) + 0.2756205443e10 / 0.40588915169746944000000e23 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.82861e5 / 0.1007800498082877636296456607702712320000000e43 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.47e2 / 0.642094583282234001942904785269230891381555200000000e51 * pow(a, 0.44e2) * pow(x, 0.88e2) + 0.82861e5 / 0.179164532992511579786036730258259968000000000e45 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.511313e6 / 0.35e2 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.95041567e8 / 0.72807658051216254566400000e26 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.511313e6 / 0.30e2 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.82861e5 / 0.6625907285226019962501358367539200000000e40 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.1339779509e10 / 0.43243200e8 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.71346e5 / 0.5e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.16215e5 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.8648e4 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.564e3 * a * a * pow(x, 0.4e1) - 0.2185956041e10 / 0.23038844774400e14 * pow(a, 0.19e2) * pow(x, 0.38e2) + pow(a, 0.48e2) * pow(x, 0.96e2) / 0.12413915592536072670862289047373375038521486354677760000000000e62 - 0.48e2 * a * x * x + 0.17417133617e11 / 0.119750400e9 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.470733341e9 / 0.831600e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.2756205443e10 / 0.50212177966356037632000000e26 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.82861e5 / 0.50474362976098490019054669004800000000e38 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.41533164779e11 / 0.36377123328000e14 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.272529829e9 / 0.151200e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.20963833e8 / 0.4536e4 * pow(a, 0.9e1) * pow(x, 0.18e2) - pow(a, 0.47e2) * pow(x, 0.94e2) / 0.5387984198149337096728424065700249582691617341440000000000e58 - 0.2756205443e10 / 0.1344969052670251008000000e25 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.3065857e7 / 0.16370063667923834600774487244800000000e38 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.20963833e8 / 0.2240e4 * pow(a, 0.8e1) * pow(x, 0.16e2));
return retval;
}

double PHO_49_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.2021e4 / 0.149913180667203566759745019195686912000000000e45 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.3065857e7 / 0.124124935401600901447680000000e30 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.2756205443e10 / 0.676400228646912000000e21 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.47e2 / 0.26535541451969874570089432452452909286686720000000000e53 * pow(a, 0.45e2) * pow(x, 0.90e2) + 0.2756205443e10 / 0.27056009145876480000e20 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.3065857e7 / 0.2181883630106265845760000000e28 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.95041567e8 / 0.1337283515226421002240000000e28 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.3065857e7 / 0.7951297332490787157442560000000e31 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.2756205443e10 / 0.1221278190612480000e19 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.63392725189e11 / 0.1433674397675520000e19 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.2021e4 / 0.33055856337118386470523776732648964096000000000e47 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.47e2 / 0.14037301428092063647577309767347589012657274880000000000e56 * pow(a, 0.46e2) * pow(x, 0.92e2) - 0.63392725189e11 / 0.82939841187840000e17 * pow(a, 0.21e2) * pow(x, 0.42e2) - pow(a, 0.49e2) * pow(x, 0.98e2) / 0.608281864034267560872252163321295376887552831379210240000000000e63 + 0.3065857e7 / 0.574481232272459372125224960000000e33 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.1339779509e10 / 0.73322496000e11 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.3065857e7 / 0.46915967302250848723560038400000000e35 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.22776251653e11 / 0.142331904000e12 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.2185956041e10 / 0.188072202240000e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.1339779509e10 / 0.1111968000e10 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.1339779509e10 / 0.172972800e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.47e2 / 0.203057403213727231176074628500557922304000000000e48 * pow(a, 0.43e2) * pow(x, 0.86e2) + 0.2756205443e10 / 0.19051939773554688000000e23 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.82861e5 / 0.205673571037321966591113593408716800000000e42 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.47e2 / 0.65519855436962653259480080129513356263424000000000e50 * pow(a, 0.44e2) * pow(x, 0.88e2) + 0.82861e5 / 0.32907771365971514654578174945394688000000000e44 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.511313e6 / 0.30e2 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.95041567e8 / 0.29717411449476022272000000e26 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.582659e6 / 0.30e2 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.82861e5 / 0.1487448574234412644643162082508800000000e40 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.9378456563e10 / 0.222393600e9 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.158907e6 / 0.10e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.52969e5 / 0.6e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.9212e4 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.588e3 * a * a * pow(x, 0.4e1) - 0.2185956041e10 / 0.14105415168000e14 * pow(a, 0.19e2) * pow(x, 0.38e2) + pow(a, 0.48e2) * pow(x, 0.96e2) / 0.253345216174205564711475286681089286500438497034240000000000e60 - 0.49e2 * a * x * x + 0.3295133387e10 / 0.17107200e8 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.173428073e9 / 0.237600e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.2756205443e10 / 0.21519504842724016128000000e26 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.82861e5 / 0.12361068483942487351605225062400000000e38 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.1339779509e10 / 0.742390272000e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.146746831e9 / 0.64800e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.146746831e9 / 0.25920e5 * pow(a, 0.9e1) * pow(x, 0.18e2) - pow(a, 0.47e2) * pow(x, 0.94e2) / 0.219917722373442330478711186355112227864963973120000000000e57 - 0.2756205443e10 / 0.603863656300929024000000e24 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.3065857e7 / 0.4343078115979792853266700697600000000e37 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.3579191e7 / 0.320e3 * pow(a, 0.8e1) * pow(x, 0.16e2));
return retval;
}

double PHO_50_0( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.2021e4 / 0.26984372520096642016754103455223644160000000e44 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.3065857e7 / 0.44684976744576324521164800000e29 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.2756205443e10 / 0.338200114323456000000e21 * pow(a, 0.25e2) * pow(x, 0.50e2) + pow(a, 0.50e2) * pow(x, 0.100e3) / 0.30414093201713378043612608166064768844377641568960512000000000000e65 - 0.47e2 / 0.2653554145196987457008943245245290928668672000000000e52 * pow(a, 0.45e2) * pow(x, 0.90e2) + 0.2756205443e10 / 0.14069124755855769600e20 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.3065857e7 / 0.829115779440381021388800000e27 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.95041567e8 / 0.534913406090568400896000000e27 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.3065857e7 / 0.2703441093046867633530470400000e31 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.2756205443e10 / 0.659490222930739200e18 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.63392725189e11 / 0.802857662698291200e18 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.2021e4 / 0.5288937013938941835283804277223834255360000000e46 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.47e2 / 0.1122984114247365091806184781387807121012581990400000000e55 * pow(a, 0.46e2) * pow(x, 0.92e2) - 0.2185956041e10 / 0.1658796823756800e16 * pow(a, 0.21e2) * pow(x, 0.42e2) - pow(a, 0.49e2) * pow(x, 0.98e2) / 0.12165637280685351217445043266425907537751056627584204800000000e62 + 0.3065857e7 / 0.183833994327186999080071987200000e33 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.1339779509e10 / 0.48392847360e11 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.3065857e7 / 0.14074790190675254617068011520000000e35 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.1339779509e10 / 0.5693276160e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.2185956041e10 / 0.112843321344000e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.1339779509e10 / 0.778377600e9 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.1339779509e10 / 0.124540416e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.47e2 / 0.28428036449921812364650447990078109122560000000e47 * pow(a, 0.43e2) * pow(x, 0.86e2) + 0.2756205443e10 / 0.9144931091306250240000e22 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.82861e5 / 0.45248185628210832650044990549917696000000e41 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.47e2 / 0.7862382652435518391137609615541602751610880000000e49 * pow(a, 0.44e2) * pow(x, 0.88e2) + 0.82861e5 / 0.6581554273194302930915634989078937600000000e43 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.59455e5 / 0.3e1 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.95041567e8 / 0.12481312808779929354240000e26 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.264845e6 / 0.12e2 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.82861e5 / 0.356987657816259034714358899802112000000e39 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.253471799e9 / 0.4447872e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.52969e5 / 0.3e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.57575e5 / 0.6e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.9800e4 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.1225e4 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.70514711e8 / 0.282108303360e12 * pow(a, 0.19e2) * pow(x, 0.38e2) + pow(a, 0.48e2) * pow(x, 0.96e2) / 0.10133808646968222588459011467243571460017539881369600000000e59 - 0.50e2 * a * x * x + 0.173428073e9 / 0.684288e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.13340621e8 / 0.14256e5 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.2756205443e10 / 0.9468582130798567096320000e25 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.82861e5 / 0.3213877805825046711417358516224000000e37 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.1339779509e10 / 0.475129774080e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.146746831e9 / 0.51840e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.17895955e8 / 0.2592e4 * pow(a, 0.9e1) * pow(x, 0.18e2) - pow(a, 0.47e2) * pow(x, 0.94e2) / 0.13195063342406539828722671181306733671897838387200000000e56 - 0.2756205443e10 / 0.277777281898427351040000e24 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.3065857e7 / 0.1216061872474341998914676195328000000e37 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.2556565e7 / 0.192e3 * pow(a, 0.8e1) * pow(x, 0.16e2));
return retval;
}

double PHO_0_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x);
return retval;
}

double PHO_1_1( const double a, const double x )
{
double retval = sqrt(a) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (-a * x * x + 0.2e1);
return retval;
}

double PHO_2_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.3e1) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (a * a * pow(x, 0.4e1) - 0.6e1 * a * x * x + 0.6e1) / 0.6e1;
return retval;
}

double PHO_3_1( const double a, const double x )
{
double retval = -sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (pow(a, 0.3e1) * pow(x, 0.6e1) - 0.12e2 * a * a * pow(x, 0.4e1) + 0.36e2 * a * x * x - 0.24e2) / 0.12e2;
return retval;
}

double PHO_4_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.5e1) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (pow(a, 0.4e1) * pow(x, 0.8e1) - 0.20e2 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.120e3 * a * a * pow(x, 0.4e1) - 0.240e3 * a * x * x + 0.120e3) / 0.120e3;
return retval;
}

double PHO_5_1( const double a, const double x )
{
double retval = -sqrt(0.2e1) * sqrt(a) * sqrt(0.6e1) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (pow(a, 0.5e1) * pow(x, 0.10e2) - 0.30e2 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.300e3 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.1200e4 * a * a * pow(x, 0.4e1) + 0.1800e4 * a * x * x - 0.720e3) / 0.720e3;
return retval;
}

double PHO_6_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.7e1) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (pow(a, 0.6e1) * pow(x, 0.12e2) - 0.42e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.630e3 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.4200e4 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.12600e5 * a * a * pow(x, 0.4e1) - 0.15120e5 * a * x * x + 0.5040e4) / 0.5040e4;
return retval;
}

double PHO_7_1( const double a, const double x )
{
double retval = sqrt(a) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.8e1 - 0.28e2 * a * x * x + 0.28e2 * a * a * pow(x, 0.4e1) - 0.35e2 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.7e1 / 0.3e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.7e1 / 0.30e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + pow(a, 0.6e1) * pow(x, 0.12e2) / 0.90e2 - pow(a, 0.7e1) * pow(x, 0.14e2) / 0.5040e4) / 0.2e1;
return retval;
}

double PHO_8_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.9e1 - 0.36e2 * a * x * x + 0.42e2 * a * a * pow(x, 0.4e1) - 0.21e2 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.21e2 / 0.4e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.7e1 / 0.10e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + pow(a, 0.6e1) * pow(x, 0.12e2) / 0.20e2 - pow(a, 0.7e1) * pow(x, 0.14e2) / 0.560e3 + pow(a, 0.8e1) * pow(x, 0.16e2) / 0.40320e5) / 0.3e1;
return retval;
}

double PHO_9_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.10e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.10e2 - 0.45e2 * a * x * x + 0.60e2 * a * a * pow(x, 0.4e1) - 0.35e2 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.21e2 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.7e1 / 0.4e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + pow(a, 0.6e1) * pow(x, 0.12e2) / 0.6e1 - pow(a, 0.7e1) * pow(x, 0.14e2) / 0.112e3 + pow(a, 0.8e1) * pow(x, 0.16e2) / 0.4032e4 - pow(a, 0.9e1) * pow(x, 0.18e2) / 0.362880e6) / 0.10e2;
return retval;
}

double PHO_10_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.11e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.11e2 - 0.55e2 * a * x * x + 0.165e3 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.55e2 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.77e2 / 0.4e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.77e2 / 0.20e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.11e2 / 0.24e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.11e2 / 0.336e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.11e2 / 0.8064e4 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.11e2 / 0.362880e6 * pow(a, 0.9e1) * pow(x, 0.18e2) + pow(a, 0.10e2) * pow(x, 0.20e2) / 0.3628800e7) / 0.11e2;
return retval;
}

double PHO_11_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.3e1) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.12e2 - 0.66e2 * a * x * x + 0.110e3 * a * a * pow(x, 0.4e1) - 0.165e3 / 0.2e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.33e2 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.77e2 / 0.10e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.11e2 / 0.10e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.11e2 / 0.112e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.11e2 / 0.2016e4 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.11e2 / 0.60480e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + pow(a, 0.10e2) * pow(x, 0.20e2) / 0.302400e6 - pow(a, 0.11e2) * pow(x, 0.22e2) / 0.39916800e8) / 0.6e1;
return retval;
}

double PHO_12_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.13e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.13e2 - 0.78e2 * a * x * x + 0.143e3 * a * a * pow(x, 0.4e1) - 0.715e3 / 0.6e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.429e3 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.143e3 / 0.10e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.143e3 / 0.60e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.143e3 / 0.560e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.143e3 / 0.8064e4 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.143e3 / 0.181440e6 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.13e2 / 0.604800e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.13e2 / 0.39916800e8 * pow(a, 0.11e2) * pow(x, 0.22e2) + pow(a, 0.12e2) * pow(x, 0.24e2) / 0.479001600e9) / 0.13e2;
return retval;
}

double PHO_13_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.14e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.14e2 - 0.91e2 * a * x * x + 0.182e3 * a * a * pow(x, 0.4e1) - 0.1001e4 / 0.6e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.1001e4 / 0.12e2 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.1001e4 / 0.40e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.143e3 / 0.30e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.143e3 / 0.240e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.143e3 / 0.2880e4 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.143e3 / 0.51840e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.13e2 / 0.129600e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.13e2 / 0.5702400e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + pow(a, 0.12e2) * pow(x, 0.24e2) / 0.34214400e8 - pow(a, 0.13e2) * pow(x, 0.26e2) / 0.6227020800e10) / 0.14e2;
return retval;
}

double PHO_14_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.15e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.15e2 - 0.105e3 * a * x * x + 0.455e3 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.455e3 / 0.2e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.1001e4 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.1001e4 / 0.24e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.143e3 / 0.16e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.143e3 / 0.112e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.143e3 / 0.1152e4 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.143e3 / 0.17280e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.13e2 / 0.34560e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.13e2 / 0.1140480e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + pow(a, 0.12e2) * pow(x, 0.24e2) / 0.4561920e7 - pow(a, 0.13e2) * pow(x, 0.26e2) / 0.415134720e9 + pow(a, 0.14e2) * pow(x, 0.28e2) / 0.87178291200e11) / 0.15e2;
return retval;
}

double PHO_15_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.16e2 - 0.120e3 * a * x * x + 0.280e3 * a * a * pow(x, 0.4e1) - 0.910e3 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.182e3 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.1001e4 / 0.15e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.143e3 / 0.9e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.143e3 / 0.56e2 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.143e3 / 0.504e3 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.143e3 / 0.6480e4 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.13e2 / 0.10800e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.13e2 / 0.285120e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + pow(a, 0.12e2) * pow(x, 0.24e2) / 0.855360e6 - pow(a, 0.13e2) * pow(x, 0.26e2) / 0.51891840e8 + pow(a, 0.14e2) * pow(x, 0.28e2) / 0.5448643200e10 - pow(a, 0.15e2) * pow(x, 0.30e2) / 0.1307674368000e13) / 0.4e1;
return retval;
}

double PHO_16_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.17e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.17e2 - 0.136e3 * a * x * x + 0.340e3 * a * a * pow(x, 0.4e1) - 0.1190e4 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.1547e4 / 0.6e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.1547e4 / 0.15e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.2431e4 / 0.90e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.2431e4 / 0.504e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.2431e4 / 0.4032e4 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.2431e4 / 0.45360e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.221e3 / 0.64800e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.221e3 / 0.1425600e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.17e2 / 0.3421440e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.17e2 / 0.155675520e9 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.17e2 / 0.10897286400e11 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.17e2 / 0.1307674368000e13 * pow(a, 0.15e2) * pow(x, 0.30e2) + pow(a, 0.16e2) * pow(x, 0.32e2) / 0.20922789888000e14) / 0.17e2;
return retval;
}

double PHO_17_1( const double a, const double x )
{
double retval = sqrt(a) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.18e2 - 0.153e3 * a * x * x + 0.408e3 * a * a * pow(x, 0.4e1) - 0.510e3 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.357e3 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.1547e4 / 0.10e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.221e3 / 0.5e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.2431e4 / 0.280e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.2431e4 / 0.2016e4 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.2431e4 / 0.20160e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.221e3 / 0.25200e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.221e3 / 0.475200e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.17e2 / 0.950400e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.17e2 / 0.34594560e8 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.17e2 / 0.1816214400e10 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.17e2 / 0.145297152000e12 * pow(a, 0.15e2) * pow(x, 0.30e2) + pow(a, 0.16e2) * pow(x, 0.32e2) / 0.1162377216000e13 - pow(a, 0.17e2) * pow(x, 0.34e2) / 0.355687428096000e15) / 0.3e1;
return retval;
}

double PHO_18_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.19e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.19e2 - 0.171e3 * a * x * x + 0.969e3 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.646e3 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.969e3 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.2261e4 / 0.10e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.4199e4 / 0.60e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.4199e4 / 0.280e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.46189e5 / 0.20160e5 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.46189e5 / 0.181440e6 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.4199e4 / 0.201600e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.4199e4 / 0.3326400e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.323e3 / 0.5702400e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.323e3 / 0.172972800e9 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.323e3 / 0.7264857600e10 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.323e3 / 0.435891456000e12 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.19e2 / 0.2324754432000e13 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.19e2 / 0.355687428096000e15 * pow(a, 0.17e2) * pow(x, 0.34e2) + pow(a, 0.18e2) * pow(x, 0.36e2) / 0.6402373705728000e16) / 0.19e2;
return retval;
}

double PHO_19_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.5e1) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.20e2 - 0.190e3 * a * x * x + 0.570e3 * a * a * pow(x, 0.4e1) - 0.1615e4 / 0.2e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.646e3 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.323e3 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.323e3 / 0.3e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.4199e4 / 0.168e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.4199e4 / 0.1008e4 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.46189e5 / 0.90720e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.4199e4 / 0.90720e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.4199e4 / 0.1330560e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.323e3 / 0.1995840e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.323e3 / 0.51891840e8 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.323e3 / 0.1816214400e10 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.323e3 / 0.87178291200e11 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.19e2 / 0.348713164800e12 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.19e2 / 0.35568742809600e14 * pow(a, 0.17e2) * pow(x, 0.34e2) + pow(a, 0.18e2) * pow(x, 0.36e2) / 0.320118685286400e15 - pow(a, 0.19e2) * pow(x, 0.38e2) / 0.121645100408832000e18) / 0.10e2;
return retval;
}

double PHO_20_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.21e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.21e2 - 0.210e3 * a * x * x + 0.665e3 * a * a * pow(x, 0.4e1) - 0.1995e4 / 0.2e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.6783e4 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.2261e4 / 0.5e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.323e3 / 0.2e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.323e3 / 0.8e1 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.4199e4 / 0.576e3 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.4199e4 / 0.4320e4 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.4199e4 / 0.43200e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.4199e4 / 0.570240e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.323e3 / 0.760320e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.323e3 / 0.17297280e8 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.323e3 / 0.518918400e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.323e3 / 0.20756736000e11 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.19e2 / 0.66421555200e11 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.19e2 / 0.5081248972800e13 * pow(a, 0.17e2) * pow(x, 0.34e2) + pow(a, 0.18e2) * pow(x, 0.36e2) / 0.30487493836800e14 - pow(a, 0.19e2) * pow(x, 0.38e2) / 0.5792623828992000e16 + pow(a, 0.20e2) * pow(x, 0.40e2) / 0.2432902008176640000e19) / 0.21e2;
return retval;
}

double PHO_21_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.22e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.22e2 - 0.231e3 * a * x * x + 0.770e3 * a * a * pow(x, 0.4e1) - 0.7315e4 / 0.6e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.4389e4 / 0.4e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.24871e5 / 0.40e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.3553e4 / 0.15e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.3553e4 / 0.56e2 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.3553e4 / 0.288e3 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.46189e5 / 0.25920e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.4199e4 / 0.21600e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.4199e4 / 0.259200e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.323e3 / 0.311040e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.323e3 / 0.6289920e7 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.323e3 / 0.165110400e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.323e3 / 0.5660928000e10 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.19e2 / 0.15095808000e11 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.19e2 / 0.923863449600e12 * pow(a, 0.17e2) * pow(x, 0.34e2) + pow(a, 0.18e2) * pow(x, 0.36e2) / 0.4157385523200e13 - pow(a, 0.19e2) * pow(x, 0.38e2) / 0.526602166272000e15 + pow(a, 0.20e2) * pow(x, 0.40e2) / 0.110586454917120000e18 - pow(a, 0.21e2) * pow(x, 0.42e2) / 0.51090942171709440000e20) / 0.22e2;
return retval;
}

double PHO_22_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.23e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.23e2 - 0.253e3 * a * x * x + 0.1771e4 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.8855e4 / 0.6e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.33649e5 / 0.24e2 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.33649e5 / 0.40e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.81719e5 / 0.240e3 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.81719e5 / 0.840e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.81719e5 / 0.4032e4 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.81719e5 / 0.25920e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.96577e5 / 0.259200e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.96577e5 / 0.2851200e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.7429e4 / 0.3110400e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.7429e4 / 0.56609280e8 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.7429e4 / 0.1320883200e10 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.7429e4 / 0.39626496000e11 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.437e3 / 0.90574848000e11 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.437e3 / 0.4619317248000e13 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.23e2 / 0.16629542092800e14 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.23e2 / 0.1579806498816000e16 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.23e2 / 0.221172909834240000e18 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.23e2 / 0.51090942171709440000e20 * pow(a, 0.21e2) * pow(x, 0.42e2) + pow(a, 0.22e2) * pow(x, 0.44e2) / 0.1124000727777607680000e22) / 0.23e2;
return retval;
}

double PHO_23_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.6e1) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.24e2 - 0.276e3 * a * x * x + 0.1012e4 * a * a * pow(x, 0.4e1) - 0.1771e4 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.1771e4 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.33649e5 / 0.30e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.4807e4 / 0.10e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.81719e5 / 0.560e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.81719e5 / 0.2520e4 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.81719e5 / 0.15120e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.7429e4 / 0.10800e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.96577e5 / 0.1425600e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.7429e4 / 0.1425600e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.7429e4 / 0.23587200e8 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.7429e4 / 0.495331200e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.7429e4 / 0.13208832000e11 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.437e3 / 0.26417664000e11 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.437e3 / 0.1154829312000e13 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.23e2 / 0.3464487936000e13 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.23e2 / 0.263301083136000e15 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.23e2 / 0.27646613729280000e17 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.23e2 / 0.4257578514309120000e19 * pow(a, 0.21e2) * pow(x, 0.42e2) + pow(a, 0.22e2) * pow(x, 0.44e2) / 0.46833363657400320000e20 - pow(a, 0.23e2) * pow(x, 0.46e2) / 0.25852016738884976640000e23) / 0.12e2;
return retval;
}

double PHO_24_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.25e2 - pow(a, 0.23e2) * pow(x, 0.46e2) / 0.1034080669555399065600e22 + 0.23e2 / 0.4423458196684800e16 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.7429e4 / 0.10378368e8 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.437e3 / 0.323352207360e12 * pow(a, 0.17e2) * pow(x, 0.34e2) + pow(a, 0.24e2) * pow(x, 0.48e2) / 0.620448401733239439360000e24 - 0.23e2 / 0.510909421717094400e18 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.23e2 / 0.52660216627200e14 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.23e2 / 0.831477104640e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + pow(a, 0.22e2) * pow(x, 0.44e2) / 0.3746669092592025600e19 - 0.24035e5 / 0.112e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.24035e5 / 0.36e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.8855e4 / 0.6e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.8855e4 / 0.4e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.6325e4 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.437e3 / 0.8453652480e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.1150e4 * a * a * pow(x, 0.4e1) - 0.300e3 * a * x * x + 0.7429e4 / 0.684288e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.7429e4 / 0.4755179520e10 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.7429e4 / 0.57024e5 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.7429e4 / 0.6048e4 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.7429e4 / 0.198132480e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.81719e5 / 0.9072e4 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.408595e6 / 0.8064e4 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.5e1;
return retval;
}

double PHO_25_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.26e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.26e2 - pow(a, 0.23e2) * pow(x, 0.46e2) / 0.79544666888876851200e20 + 0.23e2 / 0.850665037824000e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.7429e4 / 0.4790016e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - pow(a, 0.25e2) * pow(x, 0.50e2) / 0.15511210043330985984000000e26 - 0.437e3 / 0.99492986880e11 * pow(a, 0.17e2) * pow(x, 0.34e2) + pow(a, 0.24e2) * pow(x, 0.48e2) / 0.23863400066663055360000e23 - 0.23e2 / 0.78601449494937600e17 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.23e2 / 0.12152357683200e14 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.23e2 / 0.223859220480e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + pow(a, 0.22e2) * pow(x, 0.44e2) / 0.432307972222156800e18 - 0.312455e6 / 0.1008e4 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.16445e5 / 0.18e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.23023e5 / 0.12e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.16445e5 / 0.6e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.7475e4 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.437e3 / 0.2926264320e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.1300e4 * a * a * pow(x, 0.4e1) - 0.325e3 * a * x * x + 0.7429e4 / 0.342144e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.7429e4 / 0.1828915200e10 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.96577e5 / 0.399168e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.96577e5 / 0.45360e5 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.7429e4 / 0.83825280e8 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.1062347e7 / 0.72576e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.312455e6 / 0.4032e4 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.26e2;
return retval;
}

double PHO_26_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.3e1) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.27e2 - pow(a, 0.23e2) * pow(x, 0.46e2) / 0.8838296320986316800e19 + 0.23e2 / 0.189036675072000e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.7429e4 / 0.2306304e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - pow(a, 0.25e2) * pow(x, 0.50e2) / 0.574489260864110592000000e24 - 0.437e3 / 0.33164328960e11 * pow(a, 0.17e2) * pow(x, 0.34e2) + pow(a, 0.24e2) * pow(x, 0.48e2) / 0.1767659264197263360000e22 + pow(a, 0.26e2) * pow(x, 0.52e2) / 0.403291461126605635584000000e27 - 0.23e2 / 0.14555823980544000e17 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.23e2 / 0.3150611251200e13 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.23e2 / 0.66328657920e11 * pow(a, 0.18e2) * pow(x, 0.36e2) + pow(a, 0.22e2) * pow(x, 0.44e2) / 0.64045625514393600e17 - 0.49335e5 / 0.112e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.9867e4 / 0.8e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.9867e4 / 0.4e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.13455e5 / 0.4e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.2925e4 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.437e3 / 0.1083801600e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.2925e4 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.351e3 * a * x * x + 0.7429e4 / 0.177408e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.7429e4 / 0.745113600e9 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.96577e5 / 0.221760e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.96577e5 / 0.26880e5 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.7429e4 / 0.37255680e8 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.62491e5 / 0.2688e4 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.312455e6 / 0.2688e4 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.9e1;
return retval;
}

double PHO_27_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.7e1) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.28e2 - pow(a, 0.23e2) * pow(x, 0.46e2) / 0.1262613760140902400e19 + 0.23e2 / 0.47259168768000e14 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.7429e4 / 0.1153152e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - pow(a, 0.25e2) * pow(x, 0.50e2) / 0.41034947204579328000000e23 - 0.437e3 / 0.11844403200e11 * pow(a, 0.17e2) * pow(x, 0.34e2) + pow(a, 0.24e2) * pow(x, 0.48e2) / 0.189392064021135360000e21 + pow(a, 0.26e2) * pow(x, 0.52e2) / 0.14403266468807344128000000e26 - 0.23e2 / 0.3119105138688000e16 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.23e2 / 0.900174643200e12 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.23e2 / 0.21319925760e11 * pow(a, 0.18e2) * pow(x, 0.36e2) + pow(a, 0.22e2) * pow(x, 0.44e2) / 0.11436718841856000e17 - 0.9867e4 / 0.16e2 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.3289e4 / 0.2e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.6279e4 / 0.2e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.4095e4 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.6825e4 / 0.2e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - pow(a, 0.27e2) * pow(x, 0.54e2) / 0.10888869450418352160768000000e29 + 0.437e3 / 0.425779200e9 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.1638e4 * a * a * pow(x, 0.4e1) - 0.378e3 * a * x * x + 0.7429e4 / 0.95040e5 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.7429e4 / 0.319334400e9 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.96577e5 / 0.126720e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.5681e4 / 0.960e3 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.7429e4 / 0.17297280e8 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.62491e5 / 0.1728e4 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.16445e5 / 0.96e2 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.14e2;
return retval;
}

double PHO_28_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.29e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.29e2 - 0.29e2 / 0.6313068800704512000e19 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.667e3 / 0.378073350144000e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.215441e6 / 0.17297280e8 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.29e2 / 0.123104841613737984000000e24 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.12673e5 / 0.130288435200e12 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.29e2 / 0.757568256084541440000e21 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.29e2 / 0.28806532937614688256000000e26 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.667e3 / 0.21833735970816000e17 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.667e3 / 0.8101571788800e13 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.667e3 / 0.213199257600e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.29e2 / 0.68620313051136000e17 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.95381e5 / 0.112e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.8671e4 / 0.4e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.7917e4 / 0.2e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.39585e5 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.7917e4 / 0.2e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.29e2 / 0.10888869450418352160768000000e29 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.12673e5 / 0.5109350400e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.1827e4 * a * a * pow(x, 0.4e1) - 0.406e3 * a * x * x + 0.215441e6 / 0.1520640e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.215441e6 / 0.4151347200e10 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.164749e6 / 0.126720e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + pow(a, 0.28e2) * pow(x, 0.56e2) / 0.304888344611713860501504000000e30 + 0.164749e6 / 0.17280e5 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.215441e6 / 0.242161920e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.95381e5 / 0.1728e4 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.95381e5 / 0.384e3 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.29e2;
return retval;
}

double PHO_29_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.30e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.30e2 - 0.29e2 / 0.1262613760140902400e19 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.667e3 / 0.113422005043200e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.215441e6 / 0.9225216e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.29e2 / 0.16413978881831731200000e23 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.12673e5 / 0.52115374080e11 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.29e2 / 0.126261376014090240000e21 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.29e2 / 0.2880653293761468825600000e25 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.667e3 / 0.5822329592217600e16 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.667e3 / 0.2700523929600e13 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.667e3 / 0.78173061120e11 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.29e2 / 0.16011406378598400e17 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.130065e6 / 0.112e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - pow(a, 0.29e2) * pow(x, 0.58e2) / 0.8841761993739701954543616000000e31 + 0.5655e4 / 0.2e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.39585e5 / 0.8e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.23751e5 / 0.4e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.9135e4 / 0.2e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.29e2 / 0.725924630027890144051200000e27 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.12673e5 / 0.2214051840e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.2030e4 * a * a * pow(x, 0.4e1) - 0.435e3 * a * x * x + 0.12673e5 / 0.50688e5 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.215441e6 / 0.1937295360e10 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.164749e6 / 0.76032e5 * pow(a, 0.11e2) * pow(x, 0.22e2) + pow(a, 0.28e2) * pow(x, 0.56e2) / 0.10162944820390462016716800000e29 + 0.8671e4 / 0.576e3 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.215441e6 / 0.121080960e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.95381e5 / 0.1152e4 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.476905e6 / 0.1344e4 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.30e2;
return retval;
}

double PHO_30_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.31e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.31e2 - 0.899e3 / 0.8838296320986316800e19 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.20677e5 / 0.1134220050432000e16 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.392863e6 / 0.9225216e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.899e3 / 0.82069894409158656000000e23 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.392863e6 / 0.677499863040e12 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.899e3 / 0.757568256084541440000e21 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.899e3 / 0.11522613175045875302400000e26 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.20677e5 / 0.52400966329958400e17 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.20677e5 / 0.29705763225600e14 * pow(a, 0.19e2) * pow(x, 0.38e2) + pow(a, 0.30e2) * pow(x, 0.60e2) / 0.265252859812191058636308480000000e33 + 0.20677e5 / 0.938076733440e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.899e3 / 0.128091251028787200e18 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.175305e6 / 0.112e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.31e2 / 0.8841761993739701954543616000000e31 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.58435e5 / 0.16e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.245427e6 / 0.40e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.56637e5 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.31465e5 / 0.6e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.899e3 / 0.2177773890083670432153600000e28 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.392863e6 / 0.30996725760e11 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.4495e4 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.465e3 * a * x * x + 0.392863e6 / 0.912384e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.6678671e7 / 0.29059430400e11 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.268801e6 / 0.76032e5 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.31e2 / 0.20325889640780924033433600000e29 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.268801e6 / 0.11520e5 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.6678671e7 / 0.1937295360e10 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.2956811e7 / 0.24192e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.1344005e7 / 0.2688e4 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.31e2;
return retval;
}

double PHO_31_1( const double a, const double x )
{
double retval = sqrt(a) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.32e2 - 0.899e3 / 0.2209574080246579200e19 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.20677e5 / 0.389888142336000e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.392863e6 / 0.5189184e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.899e3 / 0.15388105201717248000000e23 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.392863e6 / 0.296406190080e12 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.899e3 / 0.165718056018493440000e21 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.899e3 / 0.1800408308600918016000000e25 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.20677e5 / 0.16375301978112000e17 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.20677e5 / 0.11139661209600e14 * pow(a, 0.19e2) * pow(x, 0.38e2) + pow(a, 0.30e2) * pow(x, 0.60e2) / 0.8289151869130970582384640000000e31 - pow(a, 0.31e2) * pow(x, 0.62e2) / 0.8222838654177922817725562880000000e34 + 0.20677e5 / 0.381093672960e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.899e3 / 0.36025664351846400e17 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.58435e5 / 0.28e2 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.31e2 / 0.552610124608731372158976000000e30 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.23374e5 / 0.5e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.37758e5 / 0.5e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.25172e5 / 0.3e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.17980e5 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.899e3 / 0.272221736260458804019200000e27 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.392863e6 / 0.14529715200e11 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.2480e4 * a * a * pow(x, 0.4e1) - 0.496e3 * a * x * x + 0.20677e5 / 0.28512e5 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.6678671e7 / 0.14529715200e11 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.268801e6 / 0.47520e5 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.31e2 / 0.1905552153823211628134400000e28 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.268801e6 / 0.7560e4 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.392863e6 / 0.60540480e8 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.268801e6 / 0.1512e4 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.58435e5 / 0.84e2 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.4e1;
return retval;
}

double PHO_32_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.33e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.33e2 - 0.899e3 / 0.602611112794521600e18 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.20677e5 / 0.141777506304000e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.20677e5 / 0.157248e6 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.899e3 / 0.3264143527636992000000e22 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.392863e6 / 0.134730086400e12 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.899e3 / 0.40174074186301440000e20 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.899e3 / 0.327346965200166912000000e24 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.20677e5 / 0.5458433992704000e16 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.20677e5 / 0.4388351385600e13 * pow(a, 0.19e2) * pow(x, 0.38e2) + pow(a, 0.30e2) * pow(x, 0.60e2) / 0.502372840553392156508160000000e30 - pow(a, 0.31e2) * pow(x, 0.62e2) / 0.249176928914482509628047360000000e33 + 0.20677e5 / 0.161676103680e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.899e3 / 0.10916867985408000e17 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.385671e6 / 0.140e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.31e2 / 0.50237284055339215650816000000e29 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.29667e5 / 0.5e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.138446e6 / 0.15e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.9889e4 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.6820e4 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.899e3 / 0.41245717615221030912000000e26 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.392863e6 / 0.7044710400e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.2728e4 * a * a * pow(x, 0.4e1) - 0.528e3 * a * x * x + 0.20677e5 / 0.17280e5 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.392863e6 / 0.440294400e9 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.268801e6 / 0.30240e5 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.31e2 / 0.230976018645237773107200000e27 * pow(a, 0.28e2) * pow(x, 0.56e2) + pow(a, 0.32e2) * pow(x, 0.64e2) / 0.263130836933693530167218012160000000e36 + 0.268801e6 / 0.5040e4 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.392863e6 / 0.33022080e8 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.128557e6 / 0.504e3 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.642785e6 / 0.672e3 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.33e2;
return retval;
}

double PHO_33_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.34e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.34e2 - 0.899e3 / 0.177238562586624000e18 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.20677e5 / 0.54209046528000e14 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.351509e6 / 0.1572480e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.899e3 / 0.768033771208704000000e21 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.392863e6 / 0.63402393600e11 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.899e3 / 0.10634313755197440000e20 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.899e3 / 0.67394963423563776000000e23 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.20677e5 / 0.1926506115072000e16 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.20677e5 / 0.1806968217600e13 * pow(a, 0.19e2) * pow(x, 0.38e2) + pow(a, 0.30e2) * pow(x, 0.60e2) / 0.44327015342946366750720000000e29 - pow(a, 0.33e2) * pow(x, 0.66e2) / 0.8683317618811886495518194401280000000e37 - pow(a, 0.31e2) * pow(x, 0.62e2) / 0.14657466406734265272238080000000e32 + 0.20677e5 / 0.71327692800e11 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.899e3 / 0.3531927877632000e16 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.504339e6 / 0.140e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.31e2 / 0.5910268712392848900096000000e28 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.336226e6 / 0.45e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.168113e6 / 0.15e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.11594e5 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.23188e5 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.899e3 / 0.7278656049744887808000000e25 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.392863e6 / 0.3522355200e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.2992e4 * a * a * pow(x, 0.4e1) - 0.561e3 * a * x * x + 0.351509e6 / 0.181440e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.6678671e7 / 0.3962649600e10 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.4569617e7 / 0.332640e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.31e2 / 0.33967061565476143104000000e26 * pow(a, 0.28e2) * pow(x, 0.56e2) + pow(a, 0.32e2) * pow(x, 0.64e2) / 0.7739142262755692063741706240000000e34 + 0.198679e6 / 0.2520e4 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.351509e6 / 0.16511040e8 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.2185469e7 / 0.6048e4 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.2185469e7 / 0.1680e4 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.34e2;
return retval;
}

double PHO_34_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.35e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.35e2 - 0.899e3 / 0.55703548241510400e17 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.20677e5 / 0.21683618611200e14 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.351509e6 / 0.943488e6 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.899e3 / 0.197494398310809600000e21 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.392863e6 / 0.30795448320e11 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.899e3 / 0.3038375358627840000e19 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.899e3 / 0.15404563068243148800000e23 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.20677e5 / 0.715559414169600e15 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.20677e5 / 0.774414950400e12 * pow(a, 0.19e2) * pow(x, 0.38e2) + pow(a, 0.30e2) * pow(x, 0.60e2) / 0.5065944610622441914368000000e28 - pow(a, 0.33e2) * pow(x, 0.66e2) / 0.248094789108911042729091268608000000e36 + pow(a, 0.34e2) * pow(x, 0.68e2) / 0.295232799039604140847618609643520000000e39 - pow(a, 0.31e2) * pow(x, 0.62e2) / 0.1256354263434365594763264000000e31 + 0.20677e5 / 0.32606945280e11 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.899e3 / 0.1210946700902400e16 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.168113e6 / 0.36e2 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.31e2 / 0.844324101770406985728000000e27 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.168113e6 / 0.18e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.40579e5 / 0.3e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.40579e5 / 0.3e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.26180e5 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.899e3 / 0.1455731209948977561600000e25 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.392863e6 / 0.1811496960e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.6545e4 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.595e3 * a * x * x + 0.351509e6 / 0.114048e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.351509e6 / 0.113218560e9 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.198679e6 / 0.9504e4 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.31e2 / 0.5822924839795910246400000e25 * pow(a, 0.28e2) * pow(x, 0.56e2) + pow(a, 0.32e2) * pow(x, 0.64e2) / 0.442236700728896689356668928000000e33 + 0.198679e6 / 0.1728e4 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.351509e6 / 0.9434880e7 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.2185469e7 / 0.4320e4 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.168113e6 / 0.96e2 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.35e2;
return retval;
}

double PHO_35_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.36e2 - pow(a, 0.35e2) * pow(x, 0.70e2) / 0.10333147966386144929666651337523200000000e41 - 0.899e3 / 0.18567849413836800e17 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.20677e5 / 0.9034841088000e13 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.351509e6 / 0.576576e6 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.899e3 / 0.54859555086336000000e20 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.392863e6 / 0.15397724160e11 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.899e3 / 0.928392470691840000e18 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.899e3 / 0.3851140767060787200000e22 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.20677e5 / 0.278273105510400e15 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.20677e5 / 0.344184422400e12 * pow(a, 0.19e2) * pow(x, 0.38e2) + pow(a, 0.30e2) * pow(x, 0.60e2) / 0.703603418142005821440000000e27 - pow(a, 0.33e2) * pow(x, 0.66e2) / 0.13783043839383946818282848256000000e35 + pow(a, 0.34e2) * pow(x, 0.68e2) / 0.8200911084433448356878294712320000000e37 - pow(a, 0.31e2) * pow(x, 0.62e2) / 0.139594918159373954973696000000e30 + 0.20677e5 / 0.15397724160e11 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.899e3 / 0.437286308659200e15 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.168113e6 / 0.28e2 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.31e2 / 0.140720683628401164288000000e27 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.11594e5 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.81158e5 / 0.5e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.15708e5 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.19635e5 / 0.2e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.899e3 / 0.323495824433106124800000e24 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.20677e5 / 0.50319360e8 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.3570e4 * a * a * pow(x, 0.4e1) - 0.630e3 * a * x * x + 0.15283e5 / 0.3168e4 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.351509e6 / 0.62899200e8 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.198679e6 / 0.6336e4 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.31e2 / 0.1132235385515871436800000e25 * pow(a, 0.28e2) * pow(x, 0.56e2) + pow(a, 0.32e2) * pow(x, 0.64e2) / 0.36853058394074724113055744000000e32 + 0.198679e6 / 0.1200e4 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.351509e6 / 0.5503680e7 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.168113e6 / 0.240e3 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.168113e6 / 0.72e2 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.6e1;
return retval;
}

double PHO_36_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.37e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.37e2 - 0.37e2 / 0.10333147966386144929666651337523200000000e41 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.33263e5 / 0.241382042379878400e18 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.765049e6 / 0.144557457408000e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.565471e6 / 0.576576e6 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.33263e5 / 0.603455105949696000000e21 * pow(a, 0.25e2) * pow(x, 0.50e2) + pow(a, 0.36e2) * pow(x, 0.72e2) / 0.371993326789901217467999448150835200000000e42 - 0.765049e6 / 0.15397724160e11 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.33263e5 / 0.11140709648302080000e20 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.33263e5 / 0.38511407670607872000000e23 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.765049e6 / 0.4174096582656000e16 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.765049e6 / 0.5851135180800e13 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.37e2 / 0.4221620508852034928640000000e28 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.37e2 / 0.41349131518151840454848544768000000e35 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.37e2 / 0.16401822168866896713756589424640000000e38 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.37e2 / 0.697974590796869774868480000000e30 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.765049e6 / 0.277159034880e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.33263e5 / 0.6122008321228800e16 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.214489e6 / 0.28e2 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.1147e4 / 0.985044785398808150016000000e27 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.214489e6 / 0.15e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.96866e5 / 0.5e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.145299e6 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.22015e5 / 0.2e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.33263e5 / 0.2911462419897955123200000e25 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.765049e6 / 0.1006387200e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.3885e4 * a * a * pow(x, 0.4e1) - 0.666e3 * a * x * x + 0.565471e6 / 0.76032e5 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.13005833e8 / 0.1320883200e10 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.7351123e7 / 0.158400e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.1147e4 / 0.9057883084126971494400000e25 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.37e2 / 0.147412233576298896452222976000000e33 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.565471e6 / 0.2400e4 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.13005833e8 / 0.121080960e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.6220181e7 / 0.6480e4 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.6220181e7 / 0.2016e4 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.37e2;
return retval;
}

double PHO_37_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.38e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.38e2 - 0.37e2 / 0.543849892967691838403507965132800000000e39 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.33263e5 / 0.88930226139955200e17 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.765049e6 / 0.64670441472000e14 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.10743949e8 / 0.6918912e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.33263e5 / 0.190564770299904000000e21 * pow(a, 0.25e2) * pow(x, 0.50e2) + pow(a, 0.36e2) * pow(x, 0.72e2) / 0.9789298073418453091263143372390400000000e40 - 0.14535931e8 / 0.153977241600e12 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.33263e5 / 0.3811295405998080000e19 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.33263e5 / 0.11148039062544384000000e23 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.765049e6 / 0.1757514350592000e16 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.765049e6 / 0.2771590348800e13 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.37e2 / 0.777666935841164328960000000e27 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.37e2 / 0.4352540159805456889984057344000000e34 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.37e2 / 0.1294880697542123424770257059840000000e37 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.37e2 / 0.110206514336347859189760000000e30 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.765049e6 / 0.138579517440e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.33263e5 / 0.2416582232064000e16 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.4075291e7 / 0.420e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.1147e4 / 0.207377849557643821056000000e27 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.262922e6 / 0.15e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.920227e6 / 0.40e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.83657e5 / 0.4e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.24605e5 / 0.2e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.33263e5 / 0.766174321025777664000000e24 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.14535931e8 / 0.10567065600e11 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.4218e4 * a * a * pow(x, 0.4e1) - 0.703e3 * a * x * x + 0.10743949e8 / 0.950400e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.247110827e9 / 0.14529715200e11 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.10743949e8 / 0.158400e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.1147e4 / 0.2145288098872177459200000e25 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.37e2 / 0.19396346523197223217397760000000e32 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.10743949e8 / 0.32400e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - pow(a, 0.37e2) * pow(x, 0.74e2) / 0.13763753091226345046315979581580902400000000e44 + 0.10743949e8 / 0.60540480e8 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.118183439e9 / 0.90720e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.4075291e7 / 0.1008e4 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.38e2;
return retval;
}

double PHO_38_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.39e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.39e2 + pow(a, 0.38e2) * pow(x, 0.76e2) / 0.523022617466601111760007224100074291200000000e45 - 0.37e2 / 0.41834607151360910646423689625600000000e38 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.33263e5 / 0.34203933130752000e17 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.765049e6 / 0.29847896064000e14 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.10743949e8 / 0.4435200e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.33263e5 / 0.63521590099968000000e20 * pow(a, 0.25e2) * pow(x, 0.50e2) + pow(a, 0.36e2) * pow(x, 0.72e2) / 0.502015285816330927757084275507200000000e39 - 0.14535931e8 / 0.82910822400e11 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.33263e5 / 0.1368157325230080000e19 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.33263e5 / 0.3430165865398272000000e22 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.765049e6 / 0.766095998976000e15 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.765049e6 / 0.1350261964800e13 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.37e2 / 0.159521422736649093120000000e27 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.37e2 / 0.558017969205827806408212480000000e33 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.37e2 / 0.132808276670987017925154570240000000e36 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.37e2 / 0.19780656419344487546880000000e29 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.765049e6 / 0.71066419200e11 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.33263e5 / 0.991418351616000e15 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.1708993e7 / 0.140e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.1147e4 / 0.47856426820994727936000000e26 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.1708993e7 / 0.80e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.1087541e7 / 0.40e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.191919e6 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.27417e5 / 0.2e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.33263e5 / 0.216100449520091136000000e24 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.14535931e8 / 0.5960908800e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.9139e4 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.741e3 * a * x * x + 0.10743949e8 / 0.633600e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.10743949e8 / 0.372556800e9 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.139671337e9 / 0.1425600e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.1147e4 / 0.550073871505686528000000e24 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.37e2 / 0.2984053311261111264215040000000e31 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.139671337e9 / 0.302400e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - pow(a, 0.37e2) * pow(x, 0.74e2) / 0.352916745928880642213230245681561600000000e42 + 0.10743949e8 / 0.37255680e8 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.52978783e8 / 0.30240e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.52978783e8 / 0.10080e5 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.39e2;
return retval;
}

double PHO_39_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.10e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.40e2 + pow(a, 0.38e2) * pow(x, 0.76e2) / 0.13075565436665027794000180602501857280000000e44 - 0.37e2 / 0.4183460715136091064642368962560000000e37 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.33263e5 / 0.13681573252300800e17 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.765049e6 / 0.14177750630400e14 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.10743949e8 / 0.2882880e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.33263e5 / 0.22232556534988800000e20 * pow(a, 0.25e2) * pow(x, 0.50e2) + pow(a, 0.36e2) * pow(x, 0.72e2) / 0.37651146436224819581781320663040000000e38 - 0.14535931e8 / 0.45600952320e11 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.33263e5 / 0.513058996961280000e18 * pow(a, 0.24e2) * pow(x, 0.48e2) - pow(a, 0.39e2) * pow(x, 0.78e2) / 0.20397882081197443358640281739902897356800000000e47 + 0.33263e5 / 0.1114803906254438400000e22 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.765049e6 / 0.344743199539200e15 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.765049e6 / 0.675130982400e12 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.37e2 / 0.35892320115746045952000000e26 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.37e2 / 0.83702695380874170961231872000000e32 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.37e2 / 0.16601034583873377240644321280000000e35 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.37e2 / 0.3956131283868897509376000000e28 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.765049e6 / 0.37309870080e11 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.33263e5 / 0.421352799436800e15 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.1708993e7 / 0.112e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.1147e4 / 0.11964106705248681984000000e26 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.155363e6 / 0.6e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.63973e5 / 0.2e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.27417e5 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.45695e5 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.33263e5 / 0.64830134856027340800000e23 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.631997e6 / 0.149022720e9 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.4940e4 * a * a * pow(x, 0.4e1) - 0.780e3 * a * x * x + 0.10743949e8 / 0.427680e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.10743949e8 / 0.223534080e9 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.139671337e9 / 0.997920e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.1147e4 / 0.151270314664063795200000e24 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.37e2 / 0.522209329470694471237632000000e30 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.4816253e7 / 0.7560e4 * pow(a, 0.10e2) * pow(x, 0.20e2) - pow(a, 0.37e2) * pow(x, 0.74e2) / 0.17645837296444032110661512284078080000000e41 + 0.10743949e8 / 0.23284800e8 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.52978783e8 / 0.22680e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.1708993e7 / 0.252e3 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.20e2;
return retval;
}

double PHO_40_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.41e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.41e2 + 0.41e2 / 0.26151130873330055588000361205003714560000000e44 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.1517e4 / 0.20917303575680455323211844812800000000e38 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.1363783e7 / 0.232586745289113600e18 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.31367009e8 / 0.283555012608000e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.440501909e9 / 0.77837760e8 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.1363783e7 / 0.333488348024832000000e21 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.41e2 / 0.150604585744899278327125282652160000000e39 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.25911877e8 / 0.45600952320e11 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.1363783e7 / 0.8208943951380480000e19 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.41e2 / 0.20397882081197443358640281739902897356800000000e47 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.1363783e7 / 0.15607254687562137600000e23 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.31367009e8 / 0.6550120791244800e16 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.31367009e8 / 0.14177750630400e14 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.1517e4 / 0.358923201157460459520000000e27 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.1517e4 / 0.585918867666119196728623104000000e33 * pow(a, 0.33e2) * pow(x, 0.66e2) + pow(a, 0.40e2) * pow(x, 0.80e2) / 0.815915283247897734345611269596115894272000000000e48 + 0.1517e4 / 0.99606207503240263443865927680000000e35 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.1517e4 / 0.35605181554820077584384000000e29 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.31367009e8 / 0.820817141760e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.1363783e7 / 0.7584350389862400e16 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.6369883e7 / 0.336e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.47027e5 / 0.131605173757735501824000000e27 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.374699e6 / 0.12e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.374699e6 / 0.10e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.374699e6 / 0.12e2 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.50635e5 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.1363783e7 / 0.842791753128355430400000e24 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.25911877e8 / 0.3576545280e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.5330e4 * a * a * pow(x, 0.4e1) - 0.820e3 * a * x * x + 0.440501909e9 / 0.11975040e8 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.440501909e9 / 0.5588352000e10 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.197466373e9 / 0.997920e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.47027e5 / 0.1815243775968765542400000e25 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.1517e4 / 0.4177674635765555769901056000000e31 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.197466373e9 / 0.226800e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.41e2 / 0.52937511889332096331984536852234240000000e41 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.440501909e9 / 0.605404800e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.70068713e8 / 0.22680e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.70068713e8 / 0.8064e4 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.41e2;
return retval;
}

double PHO_41_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.42e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.42e2 + 0.41e2 / 0.1867937919523575399142882943214551040000000e43 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.1517e4 / 0.2988186225097207903315977830400000000e37 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.1363783e7 / 0.99680033695334400e17 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.31367009e8 / 0.141777506304000e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.440501909e9 / 0.51891840e8 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.1363783e7 / 0.127043180199936000000e21 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.41e2 / 0.17929117350583247419895866982400000000e38 * pow(a, 0.36e2) * pow(x, 0.72e2) - pow(a, 0.41e2) * pow(x, 0.82e2) / 0.33452526613163807108170062053440751665152000000000e50 - 0.25911877e8 / 0.26057687040e11 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.1363783e7 / 0.3322667789844480000e19 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.41e2 / 0.971327718152259207554299130471566540800000000e45 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.1363783e7 / 0.5574019531272192000000e22 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.31367009e8 / 0.3119105138688000e16 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.31367009e8 / 0.7426440806400e13 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.1517e4 / 0.94003695541239644160000000e26 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.1517e4 / 0.111603593841165561281642496000000e33 * pow(a, 0.33e2) * pow(x, 0.66e2) + pow(a, 0.40e2) * pow(x, 0.80e2) / 0.19426554363045184151085982609431330816000000000e47 + 0.1517e4 / 0.16601034583873377240644321280000000e35 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.1517e4 / 0.8477424179719066091520000000e28 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.1363783e7 / 0.19543265280e11 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.1363783e7 / 0.3431015652556800e16 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.374699e6 / 0.16e2 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.47027e5 / 0.37601478216495857664000000e26 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.374699e6 / 0.10e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.2622893e7 / 0.60e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.70889e5 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.18655e5 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.1363783e7 / 0.280930584376118476800000e24 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.25911877e8 / 0.2128896000e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.5740e4 * a * a * pow(x, 0.4e1) - 0.861e3 * a * x * x + 0.15189721e8 / 0.285120e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.440501909e9 / 0.3459456000e10 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.197466373e9 / 0.712800e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.47027e5 / 0.561861168752236953600000e24 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.1517e4 / 0.895215993378333379264512000000e30 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.6369883e7 / 0.5400e4 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.41e2 / 0.5041667798984009174474717795450880000000e40 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.440501909e9 / 0.389188800e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.70068713e8 / 0.17280e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.6369883e7 / 0.576e3 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.42e2;
return retval;
}

double PHO_42_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.43e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.43e2 + 0.1763e4 / 0.7471751678094301596571531772858204160000000e43 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.65231e5 / 0.20917303575680455323211844812800000000e38 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.58642669e8 / 0.1893920640211353600e19 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.1348781387e10 / 0.3119105138688000e16 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.653158003e9 / 0.51891840e8 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.58642669e8 / 0.2159734063398912000000e22 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.1763e4 / 0.107574704103499484519375201894400000000e39 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.43e2 / 0.33452526613163807108170062053440751665152000000000e50 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.1114210711e10 / 0.651442176000e12 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.58642669e8 / 0.59808020217200640000e20 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.1763e4 / 0.2913983154456777622662897391414699622400000000e46 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.58642669e8 / 0.89184312500355072000000e23 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.1348781387e10 / 0.65501207912448000e17 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.58642669e8 / 0.7426440806400e13 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.65231e5 / 0.1128044346494875729920000000e28 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.65231e5 / 0.1004432344570490051534782464000000e34 * pow(a, 0.33e2) * pow(x, 0.66e2) + pow(a, 0.42e2) * pow(x, 0.84e2) / 0.1405006117752879898543142606244511569936384000000000e52 + 0.43e2 / 0.38853108726090368302171965218862661632000000000e47 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.65231e5 / 0.132808276670987017925154570240000000e36 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.65231e5 / 0.93251665976909727006720000000e29 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.58642669e8 / 0.469038366720e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.58642669e8 / 0.68620313051136000e17 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.16112057e8 / 0.560e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.2022161e7 / 0.488819216814446149632000000e27 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.16112057e8 / 0.360e3 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.3048227e7 / 0.60e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.160433e6 / 0.4e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.61705e5 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.58642669e8 / 0.4213958765641777152000000e25 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.1114210711e10 / 0.55351296000e11 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.12341e5 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.903e3 * a * x * x + 0.653158003e9 / 0.8553600e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.18941582087e11 / 0.93405312000e11 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.273904969e9 / 0.712800e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.2022161e7 / 0.7866056362531317350400000e25 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.65231e5 / 0.8952159933783333792645120000000e31 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.273904969e9 / 0.172800e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.1763e4 / 0.25208338994920045872373588977254400000000e41 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.18941582087e11 / 0.10897286400e11 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.273904969e9 / 0.51840e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.16112057e8 / 0.1152e4 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.43e2;
return retval;
}

double PHO_43_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.11e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.44e2 + 0.1763e4 / 0.849062690692534272337674065097523200000000e42 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.65231e5 / 0.3803146104669173695129426329600000000e37 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.58642669e8 / 0.860873018277888000e18 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.58642669e8 / 0.70888753152000e14 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.653158003e9 / 0.35380800e8 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.58642669e8 / 0.883527571390464000000e21 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.1763e4 / 0.17114157471011281628082418483200000000e38 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.43e2 / 0.1520569391507445777644093729701852348416000000000e49 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.1114210711e10 / 0.384943104000e12 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.58642669e8 / 0.25826190548336640000e20 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.1763e4 / 0.264907559496070692969354308310427238400000000e45 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.58642669e8 / 0.34457575284228096000000e23 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.1348781387e10 / 0.32750603956224000e17 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.58642669e8 / 0.4050785894400e13 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.65231e5 / 0.333285829646213283840000000e27 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.65231e5 / 0.228280078311475011712450560000000e33 * pow(a, 0.33e2) * pow(x, 0.66e2) + pow(a, 0.42e2) * pow(x, 0.84e2) / 0.31931957221656361330525968323738899316736000000000e50 + 0.43e2 / 0.2649075594960706929693543083104272384000000000e46 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.65231e5 / 0.27165329319065526393781616640000000e35 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.65231e5 / 0.25432272539157198274560000000e29 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.58642669e8 / 0.266499072000e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.58642669e8 / 0.32750603956224000e17 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.177232627e9 / 0.5040e4 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.2022161e7 / 0.155533387168232865792000000e27 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.4790071e7 / 0.90e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.1764763e7 / 0.30e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.135751e6 / 0.3e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.135751e6 / 0.6e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.58642669e8 / 0.1532348642051555328000000e25 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.1114210711e10 / 0.33965568000e11 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.6622e4 * a * a * pow(x, 0.4e1) - 0.946e3 * a * x * x + 0.21069613e8 / 0.194400e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.18941582087e11 / 0.59439744000e11 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.273904969e9 / 0.518400e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.2022161e7 / 0.2681610123590221824000000e25 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.65231e5 / 0.2238039983445833448161280000000e31 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.273904969e9 / 0.129600e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.1763e4 / 0.3437500772034551709869125769625600000000e40 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.653158003e9 / 0.247665600e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.177232627e9 / 0.25920e5 * pow(a, 0.9e1) * pow(x, 0.18e2) - pow(a, 0.43e2) * pow(x, 0.86e2) / 0.60415263063373835637355132068513997507264512000000000e53 + 0.177232627e9 / 0.10080e5 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.22e2;
return retval;
}

double PHO_44_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.5e1) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.45e2 + 0.1763e4 / 0.113208358759004569645023208679669760000000e42 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.65231e5 / 0.760629220933834739025885265920000000e36 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.58642669e8 / 0.401740741863014400e18 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.58642669e8 / 0.37807335014400e14 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.21069613e8 / 0.786240e6 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.58642669e8 / 0.373044974587084800000e21 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.1763e4 / 0.3042516883735338956103541063680000000e37 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.43e2 / 0.101371292767163051842939581980123489894400000000e48 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.1114210711e10 / 0.230965862400e12 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.58642669e8 / 0.11478306910371840000e20 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.1763e4 / 0.29434173277341188107706034256714137600000000e44 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.58642669e8 / 0.13783030113691238400000e23 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.58642669e8 / 0.727791199027200e15 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.58642669e8 / 0.2250436608000e13 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.65231e5 / 0.103688924778821910528000000e27 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.65231e5 / 0.55801796920582780640821248000000e32 * pow(a, 0.33e2) * pow(x, 0.66e2) + pow(a, 0.42e2) * pow(x, 0.84e2) / 0.1419198098740282725801154147721728858521600000000e49 + 0.43e2 / 0.235473386218729504861648274053713100800000000e45 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.65231e5 / 0.6036739848681228087507025920000000e34 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.65231e5 / 0.7347100955756523945984000000e28 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.58642669e8 / 0.153977241600e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.58642669e8 / 0.16011406378598400e17 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.4790071e7 / 0.112e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.2022161e7 / 0.51844462389410955264000000e26 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.252109e6 / 0.4e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.135751e6 / 0.2e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.407253e6 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.49665e5 / 0.2e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.58642669e8 / 0.578887264775032012800000e24 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.1114210711e10 / 0.21134131200e11 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.7095e4 * a * a * pow(x, 0.4e1) - 0.990e3 * a * x * x + 0.21069613e8 / 0.138240e6 * pow(a, 0.12e2) * pow(x, 0.24e2) + pow(a, 0.44e2) * pow(x, 0.88e2) / 0.2658271574788448768043625811014615890319638528000000000e55 - 0.653158003e9 / 0.1320883200e10 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.273904969e9 / 0.380160e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.2022161e7 / 0.953461377276523315200000e24 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.65231e5 / 0.596810662252222252843008000000e30 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.16112057e8 / 0.5760e4 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.1763e4 / 0.534722342316485821535197341941760000000e39 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.653158003e9 / 0.165110400e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.177232627e9 / 0.20160e5 * pow(a, 0.9e1) * pow(x, 0.18e2) - pow(a, 0.43e2) * pow(x, 0.86e2) / 0.1342561401408307458607891823744755500161433600000000e52 + 0.177232627e9 / 0.8064e4 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.15e2;
return retval;
}

double PHO_45_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.46e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.46e2 + 0.1763e4 / 0.17227358941587651902503531755601920000000e41 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.65231e5 / 0.165354178463877117179540275200000000e36 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.58642669e8 / 0.192136876543180800e18 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.1348781387e10 / 0.472591687680000e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.484601099e9 / 0.12579840e8 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.58642669e8 / 0.162193467211776000000e21 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.1763e4 / 0.595275042469957621846344990720000000e36 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.43e2 / 0.8814895023231569725473007128706390425600000000e46 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.25626846353e11 / 0.3233522073600e13 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.58642669e8 / 0.5240096632995840000e19 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.1763e4 / 0.3839239992696676709700787076962713600000000e43 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.58642669e8 / 0.5692990699133337600000e22 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.1348781387e10 / 0.8733494388326400e16 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.1348781387e10 / 0.29255675904000e14 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.65231e5 / 0.33811605906137579520000000e26 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.65231e5 / 0.14556990501021594949779456000000e32 * pow(a, 0.33e2) * pow(x, 0.66e2) + pow(a, 0.42e2) * pow(x, 0.84e2) / 0.92556397743931482117466574851417099468800000000e47 + 0.43e2 / 0.25594933284644511398005247179751424000000000e44 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.65231e5 / 0.1443568224684641499186462720000000e34 * pow(a, 0.34e2) * pow(x, 0.68e2) - pow(a, 0.45e2) * pow(x, 0.90e2) / 0.119622220865480194561963161495657715064383733760000000000e57 - 0.65231e5 / 0.2236074203925898592256000000e28 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.1348781387e10 / 0.2078692761600e13 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.58642669e8 / 0.8005703189299200e16 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.5798507e7 / 0.112e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.2022161e7 / 0.18032856483273375744000000e26 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.446039e6 / 0.6e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.3122273e7 / 0.40e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.228459e6 / 0.4e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.54395e5 / 0.2e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.58642669e8 / 0.226521103607621222400000e24 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.883684357e9 / 0.10567065600e11 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.7590e4 * a * a * pow(x, 0.4e1) - 0.1035e4 * a * x * x + 0.484601099e9 / 0.2280960e7 * pow(a, 0.12e2) * pow(x, 0.24e2) + pow(a, 0.44e2) * pow(x, 0.88e2) / 0.57788512495401060174861430674230780224339968000000000e53 - 0.15022634069e11 / 0.19813248000e11 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.370577311e9 / 0.380160e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.2022161e7 / 0.352366161167410790400000e24 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.65231e5 / 0.168663882810410636673024000000e30 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.370577311e9 / 0.100800e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.1763e4 / 0.92995189968084490701773450772480000000e38 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.484601099e9 / 0.82555200e8 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.4076350421e10 / 0.362880e6 * pow(a, 0.9e1) * pow(x, 0.18e2) - pow(a, 0.43e2) * pow(x, 0.86e2) / 0.58372234843839454722082253206293717398323200000000e50 + 0.110171633e9 / 0.4032e4 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.46e2;
return retval;
}

double PHO_46_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.47e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.47e2 + 0.82861e5 / 0.137818871532701215220028254044815360000000e42 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.3065857e7 / 0.1818895963102648288974943027200000000e37 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.2756205443e10 / 0.4419148160493158400e19 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.63392725189e11 / 0.12287383879680000e17 * pow(a, 0.20e2) * pow(x, 0.40e2) + pow(a, 0.46e2) * pow(x, 0.92e2) / 0.5502622159812088949850305428800254892961651752960000000000e58 - 0.22776251653e11 / 0.415134720e9 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.2756205443e10 / 0.3406062811447296000000e22 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.82861e5 / 0.5952750424699576218463449907200000000e37 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.2021e4 / 0.44074475116157848627365035643531952128000000000e47 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.41533164779e11 / 0.3233522073600e13 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.2756205443e10 / 0.115282125925908480000e21 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.82861e5 / 0.26874679948876736967905509538738995200000000e44 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.2756205443e10 / 0.113859813982666752000000e24 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.63392725189e11 / 0.218337359708160000e18 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.63392725189e11 / 0.789903249408000e15 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.3065857e7 / 0.540985694498201272320000000e27 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.3065857e7 / 0.189240876513280734347132928000000e33 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.47e2 / 0.370225590975725928469866299405668397875200000000e48 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.2021e4 / 0.153569599707867068388031483078508544000000000e45 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.3065857e7 / 0.17322818696215697990237552640000000e35 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.47e2 / 0.119622220865480194561963161495657715064383733760000000000e57 * pow(a, 0.45e2) * pow(x, 0.90e2) - 0.3065857e7 / 0.33541113058888478883840000000e29 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.63392725189e11 / 0.58203397324800e14 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.2756205443e10 / 0.192136876543180800e18 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.20963833e8 / 0.336e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.95041567e8 / 0.306558560215647387648000000e27 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.20963833e8 / 0.240e3 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.3579191e7 / 0.40e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.511313e6 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.59455e5 / 0.2e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.2756205443e10 / 0.4303900968544803225600000e25 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.41533164779e11 / 0.317011968000e12 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.16215e5 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.1081e4 * a * x * x + 0.1339779509e10 / 0.4561920e7 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.47e2 / 0.115577024990802120349722861348461560448679936000000000e54 * pow(a, 0.44e2) * pow(x, 0.88e2) - 0.22776251653e11 / 0.19813248000e11 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.17417133617e11 / 0.13305600e8 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.95041567e8 / 0.6342590901013394227200000e25 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.3065857e7 / 0.2361294359345748913422336000000e31 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.17417133617e11 / 0.3628800e7 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.82861e5 / 0.836956709712760416315961056952320000000e39 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.22776251653e11 / 0.2641766400e10 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.5178066751e10 / 0.362880e6 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.47e2 / 0.175116704531518364166246759618881152194969600000000e51 * pow(a, 0.43e2) * pow(x, 0.86e2) + 0.272529829e9 / 0.8064e4 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.47e2;
return retval;
}

double PHO_47_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.3e1) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.48e2 + 0.82861e5 / 0.25841038412381477853755297633402880000000e41 * pow(a, 0.38e2) * pow(x, 0.76e2) - pow(a, 0.47e2) * pow(x, 0.94e2) / 0.258623241511168180642964355153611979969197632389120000000000e60 - 0.3065857e7 / 0.454723990775662072243735756800000000e36 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.2756205443e10 / 0.2209574080246579200e19 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.63392725189e11 / 0.6911653432320000e16 * pow(a, 0.20e2) * pow(x, 0.40e2) + pow(a, 0.46e2) * pow(x, 0.92e2) / 0.114637961662751853121881363100005310270034411520000000000e57 - 0.1339779509e10 / 0.17297280e8 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.2756205443e10 / 0.1561112121913344000000e22 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.82861e5 / 0.1364171972326986216731207270400000000e37 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.2021e4 / 0.5509309389519731078420629455441494016000000000e46 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.41533164779e11 / 0.2020951296000e13 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.2756205443e10 / 0.55239352006164480000e20 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.82861e5 / 0.4479113324812789494650918256456499200000000e43 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.2756205443e10 / 0.49813668617416704000000e23 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.63392725189e11 / 0.118266069841920000e18 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.63392725189e11 / 0.460776895488000e15 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.3065857e7 / 0.191599100134779617280000000e27 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.3065857e7 / 0.55195255649706880851247104000000e32 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.47e2 / 0.38565165726638117548944406188090458112000000000e47 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.2021e4 / 0.22395566624063947473254591282282496000000000e44 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.3065857e7 / 0.4691596730225084872356003840000000e34 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.47e2 / 0.4984259202728341440081798395652404794349322240000000000e55 * pow(a, 0.45e2) * pow(x, 0.90e2) - 0.3065857e7 / 0.11180371019629492961280000000e29 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.2185956041e10 / 0.1212570777600e13 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.2756205443e10 / 0.100071289866240000e18 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.20963833e8 / 0.280e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.95041567e8 / 0.114959460080867770368000000e27 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.511313e6 / 0.5e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.511313e6 / 0.5e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.71346e5 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.32430e5 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.2756205443e10 / 0.1793292070227001344000000e25 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.1339779509e10 / 0.6604416000e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.8648e4 * a * a * pow(x, 0.4e1) - 0.1128e4 * a * x * x + 0.1339779509e10 / 0.3326400e7 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.47e2 / 0.7223564061925132521857678834278847528042496000000000e52 * pow(a, 0.44e2) * pow(x, 0.88e2) - 0.22776251653e11 / 0.13208832000e11 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.17417133617e11 / 0.9979200e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.95041567e8 / 0.2510608898317801881600000e25 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.3065857e7 / 0.737904487295546535444480000000e30 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.470733341e9 / 0.75600e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.82861e5 / 0.174365981190158420065825220198400000000e39 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.22776251653e11 / 0.1816214400e10 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.272529829e9 / 0.15120e5 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.47e2 / 0.14593058710959863680520563301573429349580800000000e50 * pow(a, 0.43e2) * pow(x, 0.86e2) + 0.20963833e8 / 0.504e3 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.12e2;
return retval;
}

double PHO_48_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.49e2 + 0.82861e5 / 0.5273681308649281194643938292531200000000e40 * pow(a, 0.38e2) * pow(x, 0.76e2) - pow(a, 0.47e2) * pow(x, 0.94e2) / 0.5278025336962615931489068472522693468759135354880000000000e58 - 0.3065857e7 / 0.120641058777216468146297241600000000e36 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.2756205443e10 / 0.1127333714411520000e19 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.63392725189e11 / 0.3949516247040000e16 * pow(a, 0.20e2) * pow(x, 0.40e2) + pow(a, 0.46e2) * pow(x, 0.92e2) / 0.4679100476030687882525769922449196337552424960000000000e55 - 0.1339779509e10 / 0.12355200e8 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.2756205443e10 / 0.732766914367488000000e21 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.82861e5 / 0.334082931998445604097438515200000000e36 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.2021e4 / 0.787044198502818725488661350777356288000000000e45 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.1339779509e10 / 0.41243904000e11 * pow(a, 0.17e2) * pow(x, 0.34e2) + pow(a, 0.48e2) * pow(x, 0.96e2) / 0.12413915592536072670862289047373375038521486354677760000000000e62 + 0.2756205443e10 / 0.27056009145876480000e20 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.82861e5 / 0.822694284149287866364454373634867200000000e42 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.2756205443e10 / 0.22365320603738112000000e23 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.63392725189e11 / 0.65167018076160000e17 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.2185956041e10 / 0.9403610112000e13 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.3065857e7 / 0.70383342906653736960000000e26 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.3065857e7 / 0.16896506831542922709565440000000e32 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.47e2 / 0.4722265191016912352931968104664137728000000000e46 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.2021e4 / 0.3656419040663501628286463882821632000000000e43 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.3065857e7 / 0.1340456208635738534958858240000000e34 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.47e2 / 0.305158726697653557556028473203208456796897280000000000e54 * pow(a, 0.45e2) * pow(x, 0.90e2) - 0.3065857e7 / 0.3878904231300028170240000000e28 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.2185956041e10 / 0.742390272000e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.2756205443e10 / 0.53099051765760000e17 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.3579191e7 / 0.40e2 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.95041567e8 / 0.44576117174214033408000000e26 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.3579191e7 / 0.30e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.582659e6 / 0.5e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.158907e6 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.105938e6 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.2756205443e10 / 0.768553744383000576000000e24 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.1339779509e10 / 0.4313088000e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.9212e4 * a * a * pow(x, 0.4e1) - 0.1176e4 * a * x * x + 0.9378456563e10 / 0.17107200e8 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.47e2 / 0.589678698932663879335320721165620206370816000000000e51 * pow(a, 0.44e2) * pow(x, 0.88e2) - 0.22776251653e11 / 0.8895744000e10 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.3295133387e10 / 0.1425600e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.95041567e8 / 0.1024738325844000768000000e25 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.3065857e7 / 0.240948404014872338104320000000e30 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.173428073e9 / 0.21600e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.82861e5 / 0.39143383532484543280083212697600000000e38 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.1339779509e10 / 0.74131200e8 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.146746831e9 / 0.6480e4 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.47e2 / 0.1489087623567333028624547275670758096896000000000e49 * pow(a, 0.43e2) * pow(x, 0.86e2) + 0.146746831e9 / 0.2880e4 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.7e1;
return retval;
}

double PHO_49_1( const double a, const double x )
{
double retval = sqrt(a) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.50e2 + 0.82861e5 / 0.1160209887902841862821666424356864000000e40 * pow(a, 0.38e2) * pow(x, 0.76e2) - pow(a, 0.47e2) * pow(x, 0.94e2) / 0.211121013478504637259562738900907738750365414195200000000e57 - 0.3065857e7 / 0.33779496457620611080963227648000000e35 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.2756205443e10 / 0.586213531493990400e18 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.2185956041e10 / 0.78990324940800e14 * pow(a, 0.20e2) * pow(x, 0.40e2) + pow(a, 0.46e2) * pow(x, 0.92e2) / 0.280746028561841272951546195346951780253145497600000000e54 - 0.1339779509e10 / 0.8895744e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.2756205443e10 / 0.351728118896394240000e21 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.82861e5 / 0.86861562319595857065334013952000000e35 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.2021e4 / 0.125927071760450996078185816124377006080000000e45 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.1339779509e10 / 0.26396098560e11 * pow(a, 0.17e2) * pow(x, 0.34e2) - pow(a, 0.49e2) * pow(x, 0.98e2) / 0.608281864034267560872252163321295376887552831379210240000000000e63 + pow(a, 0.48e2) * pow(x, 0.96e2) / 0.248278311850721453417245780947467500770429727093555200000000e60 + 0.2756205443e10 / 0.13528004572938240000e20 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.82861e5 / 0.164538856829857573272890874726973440000000e42 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.2756205443e10 / 0.10288047477719531520000e23 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.63392725189e11 / 0.36493530122649600e17 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.2185956041e10 / 0.5642166067200e13 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.3065857e7 / 0.26745670304528420044800000e26 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.3065857e7 / 0.5406882186093735267060940800000e31 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.47e2 / 0.661117126742367729410475534652979281920000000e45 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.2021e4 / 0.658155427319430293091563498907893760000000e42 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.3065857e7 / 0.402136862590721560487657472000000e33 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.47e2 / 0.24412698135812284604482277856256676543751782400000000e53 * pow(a, 0.45e2) * pow(x, 0.90e2) - 0.3065857e7 / 0.1396405523268010141286400000e28 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.70514711e8 / 0.14847805440e11 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.2756205443e10 / 0.28673487953510400e17 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.2556565e7 / 0.24e2 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.95041567e8 / 0.17830446869685613363200000e26 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.416185e6 / 0.3e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.264845e6 / 0.2e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.264845e6 / 0.3e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.115150e6 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.2756205443e10 / 0.338163647528520253440000e24 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.1339779509e10 / 0.2846638080e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.9800e4 * a * a * pow(x, 0.4e1) - 0.1225e4 * a * x * x + 0.253471799e9 / 0.342144e6 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.47e2 / 0.58967869893266387933532072116562020637081600000000e50 * pow(a, 0.44e2) * pow(x, 0.88e2) - 0.1339779509e10 / 0.355829760e9 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.173428073e9 / 0.57024e5 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.95041567e8 / 0.430390096854480322560000e24 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.3065857e7 / 0.81922457365056594955468800000e29 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.13340621e8 / 0.1296e4 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.82861e5 / 0.9394412047796290387219971047424000000e37 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.1339779509e10 / 0.51891840e8 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.146746831e9 / 0.5184e4 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.47e2 / 0.178690514828079963434945673080490971627520000000e48 * pow(a, 0.43e2) * pow(x, 0.86e2) + 0.17895955e8 / 0.288e3 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.5e1;
return retval;
}

double PHO_50_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.51e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.51e2 + 0.82861e5 / 0.272990561859492203016862688083968000000e39 * pow(a, 0.38e2) * pow(x, 0.76e2) - pow(a, 0.47e2) * pow(x, 0.94e2) / 0.12418883145794390427033102288288690514727377305600000000e56 - 0.3065857e7 / 0.9935146016947238553224478720000000e34 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.2756205443e10 / 0.310348340202700800e18 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.2185956041e10 / 0.46464897024000e14 * pow(a, 0.20e2) * pow(x, 0.40e2) + pow(a, 0.46e2) * pow(x, 0.92e2) / 0.22019296357791472388356564340937394529658470400000000e53 - 0.615574369e9 / 0.2965248e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.2756205443e10 / 0.172415744557056000000e21 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.82861e5 / 0.23844350440673372527738748928000000e35 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.2021e4 / 0.22222424428314881660856320492537118720000000e44 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.1339779509e10 / 0.17079828480e11 * pow(a, 0.17e2) * pow(x, 0.34e2) - pow(a, 0.49e2) * pow(x, 0.98e2) / 0.11927095373220932566122591437672458370344173164298240000000000e62 + pow(a, 0.48e2) * pow(x, 0.96e2) / 0.9736404386302802094793952194018333363546263807590400000000e58 + 0.2756205443e10 / 0.6896629782282240000e19 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.82861e5 / 0.35488773041733986392192149450915840000000e41 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.2756205443e10 / 0.4841434107162132480000e22 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.2185956041e10 / 0.715559414169600e15 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.70514711e8 / 0.110630707200e12 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.3065857e7 / 0.10488498158638596096000000e26 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.3065857e7 / 0.1802294062031245089020313600000e31 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.47e2 / 0.103704647332136114417329495631839887360000000e45 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.2021e4 / 0.129050083788123586880698725276057600000000e42 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.3065857e7 / 0.126160584342187156231421952000000e33 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.47e2 / 0.2393401778020812216125713515319282014093312000000000e52 * pow(a, 0.45e2) * pow(x, 0.90e2) - 0.3065857e7 / 0.520229508668474366361600000e27 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.70514711e8 / 0.9316270080e10 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.2756205443e10 / 0.15742307111731200e17 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.1010735e7 / 0.8e1 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.95041567e8 / 0.7341948711047017267200000e25 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.643195e6 / 0.4e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.900473e6 / 0.6e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.195755e6 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.41650e5 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.2756205443e10 / 0.152505174375607173120000e24 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.1339779509e10 / 0.1897758720e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.20825e5 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.1275e4 * a * x * x + 0.226790557e9 / 0.228096e6 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.47e2 / 0.6937396458031339756886126131360237722009600000000e49 * pow(a, 0.44e2) * pow(x, 0.88e2) - 0.22776251653e11 / 0.4151347200e10 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.226790557e9 / 0.57024e5 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.95041567e8 / 0.185658473152913080320000e24 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.3065857e7 / 0.28913808481784680572518400000e29 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.226790557e9 / 0.17280e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.82861e5 / 0.2394654051399054412428620070912000000e37 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.22776251653e11 / 0.622702080e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.60846247e8 / 0.1728e4 * pow(a, 0.9e1) * pow(x, 0.18e2) + pow(a, 0.50e2) * pow(x, 0.100e3) / 0.30414093201713378043612608166064768844377641568960512000000000000e65 - 0.47e2 / 0.24526149094050191059698425716930133360640000000e47 * pow(a, 0.43e2) * pow(x, 0.86e2) + 0.43461605e8 / 0.576e3 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.51e2;
return retval;
}

double PHO_deriv_0_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * x * exp(-a * x * x / 0.2e1);
return retval;
}

double PHO_deriv_1_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * x * exp(-a * x * x / 0.2e1) * (a * x * x - 0.3e1);
return retval;
}

double PHO_deriv_2_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (a * a * pow(x, 0.4e1) - 0.8e1 * a * x * x + 0.10e2) / 0.2e1;
return retval;
}

double PHO_deriv_3_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.3e1) * pow(x, 0.6e1) - 0.15e2 * a * a * pow(x, 0.4e1) + 0.54e2 * a * x * x - 0.42e2) / 0.6e1;
return retval;
}

double PHO_deriv_4_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.4e1) * pow(x, 0.8e1) - 0.24e2 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.168e3 * a * a * pow(x, 0.4e1) - 0.384e3 * a * x * x + 0.216e3) / 0.24e2;
return retval;
}

double PHO_deriv_5_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.5e1) * pow(x, 0.10e2) - 0.35e2 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.400e3 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.1800e4 * a * a * pow(x, 0.4e1) + 0.3000e4 * a * x * x - 0.1320e4) / 0.120e3;
return retval;
}

double PHO_deriv_6_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.6e1) * pow(x, 0.12e2) - 0.48e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.810e3 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.6000e4 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.19800e5 * a * a * pow(x, 0.4e1) - 0.25920e5 * a * x * x + 0.9360e4) / 0.720e3;
return retval;
}

double PHO_deriv_7_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.7e1) * pow(x, 0.14e2) - 0.63e2 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.1470e4 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.16170e5 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.88200e5 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.229320e6 * a * a * pow(x, 0.4e1) + 0.246960e6 * a * x * x - 0.75600e5) / 0.5040e4;
return retval;
}

double PHO_deriv_8_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.8e1) * pow(x, 0.16e2) - 0.80e2 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.2464e4 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.37632e5 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.305760e6 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.1317120e7 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.2822400e7 * a * a * pow(x, 0.4e1) - 0.2580480e7 * a * x * x + 0.685440e6) / 0.40320e5;
return retval;
}

double PHO_deriv_9_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.9e1) * pow(x, 0.18e2) - 0.99e2 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.3888e4 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.78624e5 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.889056e6 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.5715360e7 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.20321280e8 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.37013760e8 * a * a * pow(x, 0.4e1) + 0.29393280e8 * a * x * x - 0.6894720e7) / 0.362880e6;
return retval;
}

double PHO_deriv_10_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.10e2) * pow(x, 0.20e2) - 0.120e3 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.5850e4 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.151200e6 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.2268000e7 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.20321280e8 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.107956800e9 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.326592000e9 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.517104000e9 * a * a * pow(x, 0.4e1) - 0.362880000e9 * a * x * x + 0.76204800e8) / 0.3628800e7;
return retval;
}

double PHO_deriv_11_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.11e2) * pow(x, 0.22e2) - 0.143e3 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.8470e4 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.272250e6 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.5227200e7 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.62203680e8 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.461039040e9 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.2085652800e10 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.5488560000e10 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.7683984000e10 * a * a * pow(x, 0.4e1) + 0.4829932800e10 * a * x * x - 0.918086400e9) / 0.39916800e8;
return retval;
}

double PHO_deriv_12_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.12e2) * pow(x, 0.24e2) - 0.168e3 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.11880e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.464640e6 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.11107800e8 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.169361280e9 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.1668522240e10 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.10538035200e11 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.41493513600e11 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.96598656000e11 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.121187404800e12 * a * a * pow(x, 0.4e1) - 0.68976230400e11 * a * x * x + 0.11975040000e11) / 0.479001600e9;
return retval;
}

double PHO_deriv_13_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.13e2) * pow(x, 0.26e2) - 0.195e3 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.16224e5 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.758472e6 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.22084920e8 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.419613480e9 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.5300380800e10 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.44523198720e11 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.244877592960e12 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.853361308800e12 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.1780927948800e13 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.2023781760000e13 * a * a * pow(x, 0.4e1) + 0.1052366515200e13 * a * x * x - 0.168129561600e12) / 0.6227020800e10;
return retval;
}

double PHO_deriv_14_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.14e2) * pow(x, 0.28e2) - 0.224e3 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.21658e5 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.1192464e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.41537496e8 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.961920960e9 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.15150255120e11 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.163251728640e12 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.1194705832320e13 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.5817697966080e13 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.18180306144000e14 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.34377306163200e14 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.35699510246400e14 * a * a * pow(x, 0.4e1) - 0.17086945075200e14 * a * x * x + 0.2528170444800e13) / 0.87178291200e11;
return retval;
}

double PHO_deriv_15_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.15e2) * pow(x, 0.30e2) - 0.255e3 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.28350e5 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.1815450e7 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.74529000e8 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.2065943880e10 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.39679239600e11 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.533350818000e12 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.5008859856000e13 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.32464832400000e14 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.141806387923200e15 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.401619490272000e15 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.694157143680000e15 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.663644741760000e15 * a * a * pow(x, 0.4e1) + 0.294226732800000e15 * a * x * x - 0.40537905408000e14) / 0.1307674368000e13;
return retval;
}

double PHO_deriv_16_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.16e2) * pow(x, 0.32e2) - 0.288e3 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.36480e5 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.2688000e7 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.128419200e9 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.4197473280e10 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.96541885440e11 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.1583047065600e13 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.18551332800000e14 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.154347088896000e15 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.897587686195200e15 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.3554084575641600e16 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.9202540419072000e16 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.14645952921600000e17 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.12972129730560000e17 * a * a * pow(x, 0.4e1) - 0.5356234211328000e16 * a * x * x + 0.690452066304000e15) / 0.20922789888000e14;
return retval;
}

double PHO_deriv_17_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.17e2) * pow(x, 0.34e2) - 0.323e3 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.46240e5 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.3884160e7 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.213628800e9 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.8129546880e10 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.220558141440e12 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.4332392064000e13 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.61953206515200e14 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.643360221504000e15 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.4803756320563200e16 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.25328896962969600e17 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.91708075210752000e17 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.218688487041024000e18 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.322489934807040000e18 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.266054196215808000e18 * a * a * pow(x, 0.4e1) + 0.102793666719744000e18 * a * x * x - 0.12449059983360000e17) / 0.355687428096000e15;
return retval;
}

double PHO_deriv_18_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.18e2) * pow(x, 0.36e2) - 0.360e3 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.57834e5 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.5493312e7 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.344580480e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.15101614080e11 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.477169056000e12 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.11059415377920e14 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.189498828879360e15 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.2401878160281600e16 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.22388935708339200e17 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.151599063103488000e18 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.731044370965708800e18 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.2438023907141222400e19 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.5387597473370112000e19 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.7401144003821568000e19 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.5714118532362240000e19 * a * a * pow(x, 0.4e1) - 0.2074369080655872000e19 * a * x * x + 0.236887827111936000e18) / 0.6402373705728000e16;
return retval;
}

double PHO_deriv_19_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.19e2) * pow(x, 0.38e2) - 0.399e3 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.71478e5 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.7622154e7 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.540841536e9 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.27042076800e11 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.984331595520e12 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.26576953079040e14 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.537445051153920e15 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.8164046253242880e16 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.92901215985177600e17 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.785437553329228800e18 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.4864645491587481600e19 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.21610252087629004800e20 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.66795324634489651200e20 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.137519786012184576000e21 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.176811153444237312000e21 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.128274758381113344000e21 * a * a * pow(x, 0.4e1) + 0.43913881247588352000e20 * a * x * x - 0.4744158915944448000e19) / 0.121645100408832000e18;
return retval;
}

double PHO_deriv_20_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.20e2) * pow(x, 0.40e2) - 0.440e3 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.87400e5 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.10396800e8 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.828495000e9 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.46872933120e11 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.1947029529600e13 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.60574252032000e14 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.1427280813504000e16 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.25592621483520000e17 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.349083357035212800e18 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.3603441104879616000e19 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.27870364795553280000e20 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.159036487224975360000e21 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.654856123867545600000e21 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.1885985636738531328000e22 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.3634451487464878080000e22 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.4391388124758835200000e22 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.3004633980098150400000e22 * a * a * pow(x, 0.4e1) - 0.973160803270656000000e21 * a * x * x + 0.99748982335242240000e20) / 0.2432902008176640000e19;
return retval;
}

double PHO_deriv_21_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.21e2) * pow(x, 0.42e2) - 0.483e3 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.105840e6 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.13965000e8 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.1241767800e10 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.78919119720e11 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.3710172936960e13 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.131748998169600e15 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.3577666760640000e16 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.74759984679744000e17 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.1203876914584780800e19 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.14897976817986662400e20 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.140703114392096256000e21 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.1002748439672179200000e22 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.5304334603327119360000e22 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.20352928329803317248000e23 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.54870394618861645824000e23 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.99378268891746324480000e23 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.113251588480622592000000e24 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.73315502016403046400000e23 * a * a * pow(x, 0.4e1) + 0.22531105497723863040000e23 * a * x * x - 0.2196910513383505920000e22) / 0.51090942171709440000e20;
return retval;
}

double PHO_deriv_22_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.22e2) * pow(x, 0.44e2) - 0.528e3 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.127050e6 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.18498480e8 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.1824946200e10 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.129449517120e12 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.6837708422160e13 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.274855668595200e15 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.8520525726451200e16 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.205225565884416000e18 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.3851827339693132800e19 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.56281245756838502400e20 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.637302341658318336000e21 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.5546631369158111232000e22 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.36647385831937520640000e23 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.180661707452578480128000e24 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.648955870191499014144000e24 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.1644413064738640035840000e25 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.2809205652261843394560000e25 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.3029181961360652697600000e25 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.1860783204835829514240000e25 * a * a * pow(x, 0.4e1) - 0.544016352244362117120000e24 * a * x * x + 0.50580032749992345600000e23) / 0.1124000727777607680000e22;
return retval;
}

double PHO_deriv_23_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.23e2) * pow(x, 0.46e2) - 0.575e3 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.151294e6 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.24195402e8 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.2634610440e10 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.207381478920e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.12228356170800e14 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.552372317315280e15 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.19386486491581440e17 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.533128378518489600e18 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.11534959462490956800e20 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.196464416513549184000e21 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.2627009912238314803200e22 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.27415206007204977561600e23 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.221226951950032444416000e24 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.1362292283060726105088000e25 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.6287502844895658946560000e25 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.21229568429235930796032000e26 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.50743846489393200439296000e26 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.82029526279846151086080000e26 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.83937189681703038320640000e26 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.49054201762034243174400000e26 * a * a * pow(x, 0.4e1) + 0.13675716854870152642560000e26 * a * x * x - 0.1215044786727593902080000e25) / 0.25852016738884976640000e23;
return retval;
}

double PHO_deriv_24_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.24e2) * pow(x, 0.48e2) - 0.624e3 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.178848e6 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.31282944e8 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.3742222176e10 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.325186202880e12 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.21281630388480e14 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.1073300290191360e16 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.42336665352938880e17 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.1318281081427537920e19 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.32569297305856819200e20 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.639542565278642995200e21 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.9969165820801810022400e22 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.122863232818530415411200e24 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.1188909628852997328076800e25 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.8942226268296048279552000e25 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.51557523328144403361792000e26 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.223687160034876148875264000e27 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.712485028259235140861952000e27 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.1611594041888698335756288000e28 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.2472331768806525855989760000e28 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.2406926166457146865090560000e28 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.1341409444547263667896320000e28 * a * a * pow(x, 0.4e1) - 0.357378279398345917071360000e27 * a * x * x + 0.30401971684928732528640000e26) / 0.620448401733239439360000e24;
return retval;
}

double PHO_deriv_25_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.25e2) * pow(x, 0.50e2) - 0.675e3 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.210000e6 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.40020000e8 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.5237100000e10 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.500038308000e12 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.36131800320000e14 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.2022735607200000e16 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.89092309244400000e17 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.3118230823554000000e19 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.87239189212116480000e20 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.1956272727786854400000e22 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.35160036864277248000000e23 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.505194213891983616000000e24 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.5773648158765527040000000e25 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.52078306392065053900800000e26 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.366770999285580105216000000e27 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.1987960458312598049280000000e28 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.8136768387512029224960000000e28 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.24527100881017121587200000000e29 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.52651509891250087673856000000e29 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.76851582760520314306560000000e29 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.71351566199322535526400000000e29 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.38002464606160915660800000000e29 * a * a * pow(x, 0.4e1) + 0.9694506277081866240000000000e28 * a * x * x - 0.791071712209880285184000000e27) / 0.15511210043330985984000000e26;
return retval;
}

double PHO_deriv_26_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.26e2) * pow(x, 0.52e2) - 0.728e3 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.245050e6 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.50700000e8 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.7229820000e10 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.755259648000e12 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.59972336424000e14 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.3707380797120000e16 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.181280016918000000e18 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.7085458946966400000e19 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.222837683882093280000e21 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.5659091647678909440000e22 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.116160302241830246400000e24 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.1924549386255175680000000e25 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.25644620571850215936000000e26 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.273209030872784739532800000e27 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.2307640564336199674982400000e28 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.15279042860994810433536000000e29 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.78131469175541644262400000000e29 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.302656638490519211458560000000e30 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.865861165768528874520576000000e30 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.1768567487527207913914368000000e31 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.2461926332069124652892160000000e31 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.2184495414435780526080000000000e31 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.1114092661362248068300800000000e31 * a * a * pow(x, 0.4e1) - 0.272625027721585409654784000000e30 * a * x * x + 0.21374447439710098685952000000e29) / 0.403291461126605635584000000e27;
return retval;
}

double PHO_deriv_27_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.27e2) * pow(x, 0.54e2) - 0.783e3 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.284310e6 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.63653850e8 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.9856080000e10 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.1122114708000e13 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.97499300184000e14 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.6624217159560000e16 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.357707726616240000e18 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.15522748877235600000e20 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.545226065969064480000e21 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.15566334620274678240000e23 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.361884018522624998400000e24 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.6847959119735826892800000e25 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.105224737693501730304000000e27 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.1307125074903721494220800000e28 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.13040852491481314442342400000e29 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.103559710961763379395072000000e30 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.646928564773484814492672000000e30 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.3131015822645126733757440000000e31 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.11511479450065487225389056000000e32 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.31336805169622715224670208000000e32 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.61045724356407886801305600000000e32 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.81217355013307884179128320000000e32 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.69008210142026306818867200000000e32 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.33760939731022100874461184000000e32 * a * a * pow(x, 0.4e1) + 0.7937985829354978725199872000000e31 * a * x * x - 0.598887819773009368842240000000e30) / 0.10888869450418352160768000000e29;
return retval;
}

double PHO_deriv_28_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.28e2) * pow(x, 0.56e2) - 0.840e3 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.328104e6 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.79252992e8 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.13281067800e11 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.1642022928000e13 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.155509230240000e15 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.11562269951232000e17 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.686268897730416000e18 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.32891446269601920000e20 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.1282766404514474880000e22 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.40904998633468569600000e23 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.1069154401782284737920000e25 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.22915609542140376821760000e26 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.402192330739606613606400000e27 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.5761638970595294743756800000e28 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.67028157910760602203648000000e29 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.628750406755056315573043200000e30 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.4711071888295132103641497600000e31 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.27854937928553524644151296000000e32 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.127958621109292753834070016000000e33 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.447668645280324503209574400000000e33 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.1162310591746006164696858624000000e34 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.2164097470053944981839675392000000e34 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.2757143411366804904747663360000000e34 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.2247331988132942865756585984000000e34 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.1056438114079588526637711360000000e34 * a * a * pow(x, 0.4e1) - 0.239032462175583666633179136000000e33 * a * x * x + 0.17378635642867690048585728000000e32) / 0.304888344611713860501504000000e30;
return retval;
}

double PHO_deriv_29_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.29e2) * pow(x, 0.58e2) - 0.899e3 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.376768e6 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.97912584e8 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.17704375416e11 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.2369262004200e13 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.243695520432000e15 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.19750941703584000e17 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.1283010496880112000e19 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.67594395125104848000e20 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.2911758559235285760000e22 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.103102723529285800320000e24 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.3010096586940368365440000e25 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.72540019946815690389120000e26 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.1442124516151977047470080000e28 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.23598401173395988049510400000e29 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.316611882409729506330931200000e30 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.3463296729070110226540646400000e31 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.30653860410492890515764019200000e32 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.217400404753364052473642188800000e33 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.1220104312391328865923502080000000e34 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.5333598851310666185322737664000000e34 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.17797677450362864703964643328000000e35 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.44166811599228246188433997824000000e35 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.78750258417491872920887033856000000e35 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.96250315843601178014417485824000000e35 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.75384862758624698864438870016000000e35 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.34102676009854030438674726912000000e35 * a * a * pow(x, 0.4e1) + 0.7435921836735089343771181056000000e34 * a * x * x - 0.521663957630642415318073344000000e33) / 0.8841761993739701954543616000000e31;
return retval;
}

double PHO_deriv_30_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.30e2) * pow(x, 0.60e2) - 0.960e3 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.430650e6 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.120094800e9 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.23365503000e11 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.3374245667520e13 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.375697260666000e15 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.33072963487200000e17 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.2342088019580400000e19 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.135053736513696000000e21 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.6395469692606074080000e22 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.250146530770667731200000e24 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.8109909350779187952000000e25 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.218314697514356386944000000e27 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.4880184066189427675680000000e28 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.90460537831351287523123200000e29 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.1386406068937014297908736000000e31 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.17490579693222908789637120000000e32 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.180533552898335533085629440000000e33 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.1512526007096688676764672000000000e34 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.10182325079774908171979771904000000e35 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.54381792209442086595447521280000000e35 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.226749255978180728199549542400000000e36 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.723216658936149853355085004800000000e36 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.1718755640064306750257455104000000000e37 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.2940009647586363255713115930624000000e37 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.3452895945997720581915816099840000000e37 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.2602572642857281270319913369600000000e37 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.1134619107846647253316809523200000000e37 * a * a * pow(x, 0.4e1) - 0.238727573830971952772677632000000000e36 * a * x * x + 0.16180424448543654576814817280000000e35) / 0.265252859812191058636308480000000e33;
return retval;
}

double PHO_deriv_31_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.31e2) * pow(x, 0.62e2) - 0.1023e4 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.490110e6 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.146312250e9 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.30549997800e11 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.4747469658120e13 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.570466218918960e15 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.54365859584946000e17 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.4181989198842000000e19 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.262907720967200400000e21 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.13627597282914494880000e23 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.585986683165323279840000e24 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.20986499815688322115200000e26 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.627393613371101937360000000e27 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.15666914802466945521504000000e29 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.326552998100115377522131200000e30 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.5669515881908386128894873600000e31 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.81707728886326741269367296000000e32 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.972711058170556443682944000000000e33 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.9503898991514847273963248640000000e34 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.75583949626635726555284189184000000e35 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.484235633322292621777260244992000000e36 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.2466860773528660526035099361280000000e37 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.9831691488701183255936990208000000000e37 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.30031348547305432490862079180800000000e38 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.68471474687856386079165540532224000000e38 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.112548253940363128534984653668352000000e39 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.127209712308073267884369627709440000000e39 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.92404149376324407664191012864000000000e38 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.38873469737626130120797598515200000000e38 * a * a * pow(x, 0.4e1) + 0.7902147946664983827834265927680000000e37 * a * x * x - 0.518038835213209137516710461440000000e36) / 0.8222838654177922817725562880000000e34;
return retval;
}

double PHO_deriv_32_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.32e2) * pow(x, 0.64e2) - 0.1088e4 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.555520e6 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.177131520e9 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.39596275200e11 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.6604230635520e13 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.854031298498560e15 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.87843219274137600e17 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.7315693105174272000e19 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.499608309621657600000e21 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.28235006755189678080000e23 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.1329015201686137405440000e25 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.52329973566391660339200000e26 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.1728230921884934833766400000e28 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.47928888610038720700416000000e29 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.1116029270102688849670963200000e31 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.21788727703020464338497945600000e32 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.355734329845232070832619520000000e33 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.4837986885895156163323625472000000e34 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.54520966763648199487609896960000000e35 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.505681966732837050247581794304000000e36 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.3827371866808103604030214766592000000e37 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.23389494741605077580184645795840000000e38 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.113896670046076899520899144744960000000e39 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.434739521827659594153432003379200000000e39 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.1274015609229688747498057576218624000000e40 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.2791344544360007706719882116595712000000e40 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.4415686284863289027579474534727680000000e40 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.4809943988868939833613356189614080000000e40 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.3371583123910393099875953462476800000000e40 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.1370385398750675905110871407329280000000e40 * a * a * pow(x, 0.4e1) - 0.269445977020102174891231244451840000000e39 * a * x * x + 0.17103504400690079460869170790400000000e38) / 0.263130836933693530167218012160000000e36;
return retval;
}

double PHO_deriv_33_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.33e2) * pow(x, 0.66e2) - 0.1155e4 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.627264e6 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.213176832e9 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.50903170560e11 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.9090234616320e13 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.1261755642470400e16 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.139676349621473280e18 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.12555541134876579840e20 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.928379298200530176000e21 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.56998170866265108480000e23 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.2925278025450465484800000e25 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.126090317259972286341120000e27 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.4578470148801067266908160000e28 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.140276532218585890730803200000e30 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.3627706985986207340843827200000e31 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.79124731454546103990343680000000e32 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.1452730069505466469262709964800000e34 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.22382804033862001896788420198400000e35 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.288167274605996623610474397696000000e36 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.3082846126445284633719603462144000000e37 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.27212777535905907569253289820160000000e38 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.196471755829482651673551024685056000000e39 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.1147712337625021328565060488921088000000e40 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.5352635024888622862752255788974080000000e40 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.19601718608385232690492743613415424000000e41 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.55201710813705479284829629993451520000000e41 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.116400644530628343973443219788660736000000e42 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.177463277727023540811970810497466368000000e42 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.186543712404935757583217370322698240000000e42 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.126336482475300407252126049742356480000000e42 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.49668576779603990754364071975321600000000e41 * a * a * pow(x, 0.4e1) + 0.9456132886886144393619313702993920000000e40 * a * x * x - 0.581782280460396395199719024885760000000e39) / 0.8683317618811886495518194401280000000e37;
return retval;
}

double PHO_deriv_34_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.34e2) * pow(x, 0.68e2) - 0.1224e4 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.705738e6 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.255133824e9 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.64938272256e11 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.12388224245760e14 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.1841199828526080e16 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.218788428404367360e18 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.21167780448122542080e20 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.1689484244138524753920e22 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.112312304866026929664000e24 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.6262261847075440926720000e25 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.294326306812545723555840000e27 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.11699831980136023786782720000e29 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.394138089830832301317242880000e30 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.11261088280880922894778368000000e32 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.272799863604340357126005964800000e33 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.5595701008465500474197105049600000e34 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.96956280935142613985607531724800000e35 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.1414194492924900411341214921523200000e37 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.17284599357971005027503737929728000000e38 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.175988648008432051189128968011776000000e39 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.1481904411071001703763006423826432000000e40 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.10227514196316112445192739986866176000000e41 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.57221178563872042904569726305828864000000e41 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.256040527811224056386549283809132544000000e42 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.901065703643346198437279210328293376000000e42 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.2442232726814752537840931630179418112000000e43 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.4963247154494497093031570732300107776000000e43 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.7302248687072363539172885675108204544000000e43 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.7416346322807869219472462013781770240000000e43 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.4858350940995725741788411840293765120000000e43 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.1849485869583600140339906780111831040000000e43 * a * a * pow(x, 0.4e1) - 0.341289115689782386819847112747909120000000e42 * a * x * x + 0.20371063133732685718485684065402880000000e41) / 0.295232799039604140847618609643520000000e39;
return retval;
}

double PHO_deriv_35_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.35e2) * pow(x, 0.70e2) - 0.1295e4 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.791350e6 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.303753450e9 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.82247088000e11 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.16725767815680e14 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.2655725572684800e16 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.337927529503872000e18 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.35097310389867264000e20 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.3015178028947687680000e22 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.216369175357286067916800e24 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.13063395863962627223040000e26 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.667067022840644794368000000e27 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.28914789797746410894336000000e29 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.1066390935689481334732800000000e31 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.33501737635620745611965644800000e32 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.896664154365143485496727552000000e33 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.20428524964834830088126801920000000e35 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.395465407809821427743737712640000000e36 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.6487020286003211139305171251200000000e37 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.89827539087637192794451244089344000000e38 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.1044932597550065303935453247569920000000e40 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.10149345325486280224827608098406400000000e41 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.81696904126740387596850716462284800000000e41 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.540030383210656799369013210513408000000000e42 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.2898883097074805699012862914035974144000000e43 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.12465562876450299411896421862374113280000000e44 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.42222067807331659298358848243525222400000000e44 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.110294381210988824289590460717780172800000000e45 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.216310101081896185567946808735301632000000000e45 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.307493128307187808407358232725259550720000000e45 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.302082692031988022922184774084932403200000000e45 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.191619618079992402599893326844919808000000000e45 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.70704564959997196681244061777002496000000000e44 * a * a * pow(x, 0.4e1) + 0.12658106258823027538841647888465920000000000e44 * a * x * x - 0.733653505613416290006332244964147200000000e42) / 0.10333147966386144929666651337523200000000e41;
return retval;
}

double PHO_deriv_36_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.36e2) * pow(x, 0.72e2) - 0.1368e4 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.884520e6 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.359856000e9 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.103463098200e12 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.22384367470080e14 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.3788998328586240e16 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.515102364138700800e18 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.57290504420540160000e20 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.5283740545965471744000e22 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.408134497998359004364800e24 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.26600580356968481646182400e26 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.1470882785363621771581440000e28 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.69272344679605420953600000000e29 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.2785935782028931158122496000000e31 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.95821623917314034813750476800000e32 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.2820058032739605115924872806400000e34 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.70986588437884843539596132352000000e35 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.1526357714353696738660040294400000000e37 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.27973974110336842046714920304640000000e38 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.435644693243299284802501464244224000000e39 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.5741629641275095670045332581384192000000e40 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.63715890063052785805518737736990720000000e41 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.591614012376171776823534337130496000000000e42 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.4561179698194624351593665424182476800000000e43 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.28928347567828463428599299660782239744000000e44 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.149235817849914083047290183609841876992000000e45 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.617648534781537416021706580019568967680000000e45 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.2016319156513389444044075609996918784000000000e46 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.5083049672016778057346125887907351756800000000e46 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.9632122408791389530890234510822416056320000000e46 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.13244748001689074867704626751520857128960000000e47 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.12599553475871500448597691808661844787200000000e47 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.7746761030399692853771088507741143040000000000e46 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.2773210251218713576223935885964476416000000000e46 * a * a * pow(x, 0.4e1) - 0.482103351519711977838527284803482419200000000e45 * a * x * x + 0.27155512855662788875163959715010969600000000e44) / 0.371993326789901217467999448150835200000000e42;
return retval;
}

double PHO_deriv_37_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.37e2) * pow(x, 0.74e2) - 0.1443e4 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.985680e6 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.424335240e9 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.129318751800e12 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.29710059520680e14 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.5350574440189440e16 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.775485853928755200e18 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.92153568975200409600e20 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.9101834385014359296000e22 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.754793823383658867916800e24 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.52955648472394430119526400e26 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.3161127995545994042849280000e28 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.161217527772845696185313280000e30 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.7044799532931072438349824000000e31 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.264234173250553147764567244800000e33 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.8514073761672304492357353062400000e34 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.235667335821452349837473138688000000e36 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.5598884584364201280987240628224000000e37 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.113977293324556954648668827074560000000e39 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.1983204903847291010886837591097344000000e40 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.29396372195450732274672385771487232000000e41 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.369606158882708744778623525262458880000000e42 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.3921039250755692770694962615827824640000000e43 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.34871537598933825050852741296501555200000000e44 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.257959387167338863247146794648830214144000000e45 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.1572323883686636880744513795954774638592000000e46 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.7807024839138509512030051139636554629120000000e46 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.31142307874805263218317676524044717916160000000e47 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.98112913524073007944856629801457496883200000000e47 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.238985484882518132785083611695490499870720000000e48 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.438064475135697374327117208534808013045760000000e48 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.583292371783944873424694109190369365196800000000e48 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.537841018138442675495497165617093830246400000000e48 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.320833084556486103029625484046650834944000000000e48 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.111527691298207073910298382549550052147200000000e48 * a * a * pow(x, 0.4e1) + 0.18842577981888866368406576047184255385600000000e47 * a * x * x - 0.1032281481841975878473698468618567680000000000e46) / 0.13763753091226345046315979581580902400000000e44;
return retval;
}

double PHO_deriv_38_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.38e2) * pow(x, 0.76e2) - 0.1520e4 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.1095274e7 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.498162672e9 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.160657461720e12 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.39125696258880e14 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.7482789409510800e16 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.1153917391607608320e19 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.146196316484546549760e21 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.15428377229007465676800e23 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.1370232752651225545420800e25 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.103212337212689716408320000e27 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.6632424789287441176398643200e28 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.365173506045473231829948825600e30 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.17280531982509001149095792640000e32 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.704263190230555518529187020800000e33 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.24747025990045909192761710592000000e35 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.749980458239508965653578429235200000e36 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.19593239471507171727699736463769600000e38 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.440712200854953557974852798021632000000e39 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.8517903054455223077410517010038784000000e40 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.141071324194851636439438102539141120000000e42 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.1994876770773561095286781531814854656000000e43 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.23978333472790687320681599253403926528000000e44 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.243650807868679564710151734349104414720000000e45 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.2079153560479398952193294799779024338944000000e46 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.14781482344033226925749205217179001159680000000e47 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.86718029751661597964395337274116806803456000000e47 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.415007713811523361686749114097559003987968000000e48 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.1597662223010908258063244144853186489876480000000e49 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.4863471767106735432633699088008964755947520000000e49 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.11459512719129474792180384947903311065907200000000e50 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.20340635076454817756120183282528377141985280000000e50 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.26252701865642069523904154607923948987351040000000e50 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.23485872992547439647610334391892748481331200000000e50 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.13604341302923761517989547906067032388403200000000e50 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.4596061250987757269591063481779402833920000000000e49 * a * a * pow(x, 0.4e1) - 0.755244659621772005381450431600507276492800000000e48 * a * x * x + 0.40272741544928285605520556255705720422400000000e47) / 0.523022617466601111760007224100074291200000000e45;
return retval;
}

double PHO_deriv_39_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.39e2) * pow(x, 0.78e2) - 0.1599e4 * pow(a, 0.38e2) * pow(x, 0.76e2) + 0.1213758e7 * pow(a, 0.37e2) * pow(x, 0.74e2) - 0.582391914e9 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.198446658696e12 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.51145116127560e14 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.10369198728972720e17 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.1698165607992693840e19 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.228927176430674641920e21 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.25758546740607020820480e23 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.2444433517220870343168000e25 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.197199118471072758411571200e27 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.13605450291376758416944742400e29 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.806424825850420053624470323200e30 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.41199396628487497833957440716800e32 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.1818368431442503762424664821760000e34 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.69428612836895598201669020467200000e35 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.2294644825945465443085413928550400000e37 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.65636682604139882869074783601459200000e38 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.1623525131055939135431252678229196800000e40 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.34671892629330225604125057196081152000000e41 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.637852754879265578971126052226318336000000e42 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.10078263647138559863266584807307640832000000e44 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.136247381900096183060345877920951402496000000e45 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.1568647105897403673752976880190424612864000000e46 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.15294309282499685819091524581856639975424000000e47 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.125431435890796239912786112842918952697856000000e48 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.858311408110196043488503849610860667338752000000e48 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.4853394145646566966591710467309173752201216000000e49 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.22416183508391953312229867614732228466049024000000e50 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.83383871021554608939212551030646453714288640000000e50 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.245540523422918871484593641053378266928250880000000e51 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.560247391472012072964847462685172947075727360000000e51 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.963927330108411344394064152970112376955207680000000e51 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.1207045182101910740683622637965797448661073920000000e52 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.1048591374412856821057201133367970756558848000000000e52 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.590318107076867543706276193599746499988684800000000e51 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.193973659651147087618989759205606602414489600000000e51 * a * a * pow(x, 0.4e1) + 0.31025178645501311348491868526392306879692800000000e50 * a * x * x - 0.1611432684414598025332582257452328891187200000000e49) / 0.20397882081197443358640281739902897356800000000e47;
return retval;
}

double PHO_deriv_40_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.40e2) * pow(x, 0.80e2) - 0.1680e4 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.1341600e7 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.678163200e9 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.243791964000e12 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.66389427636480e14 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.14244861973305600e17 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.2473150504301568000e19 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.354085594858051056000e21 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.42393921561236044800000e23 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.4289586559252107957043200e25 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.369776124786866204639232000e27 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.27324322297952565217812480000e29 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.1738921457359396342047375360000e31 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.95640680154766798812605644800000e32 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.4557365355447505933237761343488000e34 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.188449091985859480833101626982400000e36 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.6767831167294024698650089390080000000e37 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.211125215954436586576279800053760000000e39 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.5717896125224527001298710731161600000000e40 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.134284790500898016625500221521330176000000e42 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.2729723610182189190420004503056547840000000e43 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.47910251633256311743881897216403046400000000e44 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.723712620944592237025594869753367756800000000e45 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.9371513040747356506796277317314117632000000000e46 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.103530708989228642467696474092568024449024000000e48 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.970147902416548118228764162825462606725120000000e48 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.7658215614432452807245302512519406315110400000000e49 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.50510436809896398294845855542131672534220800000000e50 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.275649160401833417980867937291393235419136000000000e51 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.1230182824421896568246044908711874953499115520000000e52 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.4426646056075157119722251557018650446030438400000000e52 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.12622857894276815224207982955560995412508672000000000e53 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.27918051830928547743702836524378988608487424000000000e53 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.46604061085015858713653383705243144735948800000000000e53 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.56670538279379284195802514585575663998913740800000000e53 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.47846836047282948279350807270716295262240768000000000e53 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.26199039745089996249837577866731281365073920000000000e53 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.8379449958955909731729427738752110234173440000000000e52 * a * a * pow(x, 0.4e1) - 0.1305464453196636374952978031353785430835200000000000e52 * a * x * x + 0.66089137943079716481994512837285387436032000000000e50) / 0.815915283247897734345611269596115894272000000000e48;
return retval;
}

double PHO_deriv_41_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.41e2) * pow(x, 0.82e2) - 0.1763e4 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.1479280e7 * pow(a, 0.39e2) * pow(x, 0.78e2) - 0.786708000e9 * pow(a, 0.38e2) * pow(x, 0.76e2) + 0.297952543200e12 * pow(a, 0.37e2) * pow(x, 0.74e2) - 0.85605651998880e14 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.19408804844682240e17 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.3566367890210361600e19 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.541323697621215600000e21 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.68834721389513775696000e23 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.7411474943021530296115200e25 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.681233752804720239245721600e27 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.53791759537504796249874432000e29 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.3666575062492314103356825600000e31 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.216527923690455203776417628160000e33 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.11107882485320351953730224324608000e35 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.495908490430157291829034883334144000e36 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.19288124348880864241017736080998400000e38 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.653834723690876753932804612915200000000e39 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.19312212996595791279320523619368960000000e41 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.496608808302625544274461858185936896000000e42 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.11101609811410306522006518313640460288000000e44 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.215303947857654429517702173355451351040000000e45 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.3612776842448413321390790544755195904000000000e46 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.52274101851118965057969823189880949964800000000e47 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.649529476455540013102119584872084385562624000000e48 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.6896496668496939197667510816184886794125312000000e49 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.62203695441344941782883430891079371084267520000000e50 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.473288987053711513565417408953864779988992000000000e51 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.3012729207245349841523312196306325461585100800000000e52 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.15886842467502239164314480088691383842499461120000000e53 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.68586744631205903488949072640963339922188533760000000e53 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.238996618706342489041115347301986980722009702400000000e54 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.660617189298858231379004338365443128531353600000000000e54 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.1417606768566020487100357544915962666401398784000000000e55 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.2298015182728075315931105914916402638166478028800000000e55 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.2715836125042270827918579717628475845105837670400000000e55 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.2230260435325773341014218271233363739743879168000000000e55 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.1188679778987753945910309538298928042501734400000000000e55 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.370319469607723344687442586931589120933232640000000000e54 * a * a * pow(x, 0.4e1) + 0.56233697236728359748833874311833903549120512000000000e53 * a * x * x - 0.2776559708892595989978115150435582388207616000000000e52) / 0.33452526613163807108170062053440751665152000000000e50;
return retval;
}

double PHO_deriv_42_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.42e2) * pow(x, 0.84e2) - 0.1848e4 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.1627290e7 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.909353760e9 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.362357704800e12 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.109687990164480e15 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.26239043036082240e17 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.5094811271729088000e19 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.818481430803277987200e21 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.110343422523108587904000e24 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.12618619161075337092883200e26 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.1234243806245557499802009600e28 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.103920280970304964798144512000e30 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.7569466060046828764597714944000e31 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.478788038160359998005613117440000e33 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.26373101105497443819967667109888000e35 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.1267614010462939638088187310096384000e37 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.53232205504186458181729261716111360000e38 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.1954311989112030617505152988003532800000e40 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.62726838649670007740458749916938240000000e41 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.1759184307162035636437252812186648576000000e43 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.43060789571530885903540434671090270208000000e44 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.918405902580307175911448333219347169280000000e45 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.17028904093328504960712607221966758215680000000e47 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.273709531702110944633676123656107111219200000000e48 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.3800232160754801270687028018953090733441024000000e49 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.45383541765937145944166238457112872028209152000000e50 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.463823207312637283294109060774787484389212160000000e51 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.4032422169697622095577356324286927925506211840000000e52 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.29611570279663936903899770579513526096966451200000000e53 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.182138575340562530419079792555285512835322347520000000e54 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.929124044954243858222650077445079964724242677760000000e54 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.3884429073077286400508545509588805595764359168000000000e55 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.13120738202394389619495531499055521123470724300800000000e56 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.35188357485523653275195059322157415396924194816000000000e56 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.73327575376141312353801652375968847817857617100800000000e56 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.115527490549875059064536506449888241718732940902400000000e57 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.132799304908511870837099781618756240908293767168000000000e57 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.106152075963053896754655417543940021515511136256000000000e57 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.55109023291993792553857196825597225478138101760000000000e56 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.16734325365495676031598100011675255053727301632000000000e56 * a * a * pow(x, 0.4e1) - 0.2478430791716080141030103557415318409367781376000000000e55 * a * x * x + 0.119425520008994791376167121530783483444592640000000000e54) / 0.1405006117752879898543142606244511569936384000000000e52;
return retval;
}

double PHO_deriv_43_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.43e2) * pow(x, 0.86e2) - 0.1935e4 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.1786134e7 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.1047528762e10 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.438624809280e12 * pow(a, 0.39e2) * pow(x, 0.78e2) - 0.139702001755680e15 * pow(a, 0.38e2) * pow(x, 0.76e2) + 0.35210606564952000e17 * pow(a, 0.37e2) * pow(x, 0.74e2) - 0.7213747869561280320e19 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.1224639785385520882560e22 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.174746677068472402857600e24 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.21187210317773653976659200e26 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.2201115738568707385352928000e28 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.197219970175756181727622348800e30 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.15318140101123568048910272102400e32 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.1035414131647375013230852227072000e34 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.61089433767195125780620281397248000e35 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.3152836030866256915287945031434240000e37 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.142545280783753239122959679480020992000e39 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.5650401457952710363923221393158864896000e40 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.196421001445809413754376838751999590400000e42 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.5986163853586572609657198895299035136000000e43 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.159809195734141536632812720508429598720000000e45 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.3732159371145028501670918611258402013184000000e46 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.76103597611609494229724383855660458442752000000e47 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.1351690763549482061692119653555760381296640000000e49 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.20847842247216129210333751362489433645645824000000e50 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.278203647379238647321845043265327224903434240000000e51 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.3198017165588009974452066354488094861509001216000000e52 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.31504008134243253188968444409605055215187263488000000e53 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.264343976298822699171804188724272302380306923520000000e54 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.1875755886613563810561569448755795241547931320320000000e55 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.11161319900730229299984927190722146925514063872000000000e56 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.55136920309607332741925540322167405812039475527680000000e56 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.223449624412619190585698242358257381448791558717440000000e57 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.732313895133793985953128693443028392983434520166400000000e57 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.1907235089524276644735071432373601419088725069004800000000e58 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.3862754611694737508324195306073116798154379886592000000000e58 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.5919410445488962614107618212279614120414955123507200000000e58 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.6623277964348273958085327200484402544090027760025600000000e58 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.5156961266800250830404147820264591099056963452928000000000e58 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.2609546665127837769602098897001359351330029699072000000000e58 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.772862252738209792390865526986465313111681269760000000000e57 * a * a * pow(x, 0.4e1) + 0.111707821404178222093469639194682381390932082688000000000e57 * a * x * x - 0.5256127886513523700449896489960717783132012544000000000e55) / 0.60415263063373835637355132068513997507264512000000000e53;
return retval;
}

double PHO_deriv_44_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.44e2) * pow(x, 0.88e2) - 0.2024e4 * pow(a, 0.43e2) * pow(x, 0.86e2) + 0.1956328e7 * pow(a, 0.42e2) * pow(x, 0.84e2) - 0.1202767104e10 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.528578555736e12 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.176912006409600e15 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.46917064099825920e17 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.10127777668876707840e20 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.1814186866176332968320e22 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.273565687443042510996480e24 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.35107596555190455577881600e26 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.3867058238740317288776908800e28 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.368026551488687874831009561600e30 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.30419554960295755678339640524800e32 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.2192605557532253680223968572211200e34 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.138245638542711587973443442180096000e36 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.7642391705689274972656920288018432000e37 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.371020798487194656917492762757955584000e39 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.15834210206405113906511062100928233472000e41 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.594318626694543824220324977502509334528000e42 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.19617157795190997322897445546469546393600000e44 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.569113149223123438818123694974501126144000000e45 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.14495923354592284615185596924887706370048000000e47 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.323670169230896384840561985069134458650624000000e48 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.6322277974719678281830536127471733010333696000000e49 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.107753607221309299412068267911692145219600384000000e51 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.1597358419137870823152528499042557185727922176000000e52 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.20518181383855467474860647762349466949068521472000000e53 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.227348777655041385145554141723890075748161028096000000e54 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.2161585355049916391218570507613821183117139902464000000e55 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.17526367743647970739610031142814766349598431641600000000e56 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.120310034059622199141581117006160718683695040430080000000e57 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.693266783434023642586397110906388286033430220636160000000e57 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.3319822991273199402987516743608395381524903158087680000000e58 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.13053964612743937923964488914912649712873940472299520000000e59 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.41546071823561176756198011736430856229038219224678400000000e59 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.105163494303389228664126217207840604829752992412467200000000e60 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.207168925714784786797798193658688999304258147214950400000000e60 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.309024764673401697380027600810521973288251562341171200000000e60 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.336805489579166261463310897639642113611662499826892800000000e60 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.255611309055617252003405591958656961223136718618624000000000e60 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.126155366305785272150891712530527969384159298715648000000000e60 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.36463511191373151751254415249687486167514481688576000000000e59 * a * a * pow(x, 0.4e1) - 0.5146413768790436814932459570124296363658820190208000000000e58 * a * x * x + 0.236586170156171940355882697180300814238447828992000000000e57) / 0.2658271574788448768043625811014615890319638528000000000e55;
return retval;
}

double PHO_deriv_45_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.45e2) * pow(x, 0.90e2) - 0.2115e4 * pow(a, 0.44e2) * pow(x, 0.88e2) + 0.2138400e7 * pow(a, 0.43e2) * pow(x, 0.86e2) - 0.1376713800e10 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.634271715000e12 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.222812042218920e15 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.62096114249769600e17 * pow(a, 0.39e2) * pow(x, 0.78e2) - 0.14104688808161952000e20 * pow(a, 0.38e2) * pow(x, 0.76e2) + 0.2662193480989586544000e22 * pow(a, 0.37e2) * pow(x, 0.74e2) - 0.423595518281738122320000e24 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.57448794363038927309260800e26 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.6698007160963402206738816000e28 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.675872009136979561855428480000e30 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.59338693979906860790060549760000e32 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.4551694492211741767140722073600000e34 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.306035707903018797570243749019648000e36 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.18079937415663999864651900172615680000e38 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.940191052896151643815531924536115200000e39 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.43086286275932282738805611158988390400000e41 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.1741167851644171360020483332526882816000000e43 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.62055222232598267271130025971258103562240000e44 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.1949859255576951327314366977668319199232000000e46 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.53971680887068937689569995039937193574400000000e47 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.1314369169838031776675410467443176361164800000000e49 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.28112896132646790778890723886979049947136000000000e50 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.526948125110331446359527728537535312209117184000000e51 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.8632129633443349370483271132705887237921832960000000e52 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.123176582320842855729015401862788740730427801600000000e54 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.1525123750183899702930490112692493860276745011200000000e55 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.16310153805554752181852165930238925486184202240000000000e56 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.149850444208190149823665766271066252289066590535680000000e57 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.1175397372227230037666104991803609652929520625254400000000e58 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.7813721167646926954939447956876268715497381429248000000000e58 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.43646341471805561677591057779318955552222746771456000000000e59 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.202794617113973719187020253568838631903104944046080000000000e60 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.774385730779502501981293053985008090109999307764531200000000e60 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.2395390703577199097349541614178591554455484827172864000000000e61 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.5897682450798179715623294613682952838425336736645120000000000e61 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.11309189430065754889058239005565789082687519525437440000000000e62 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.16432155582146823343076073768770804650058789054054400000000000e62 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.17456748812563037033879640721411807763533042959777792000000000e62 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.12921756778442860651850783404108002910612944448389120000000000e62 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.6223944151630934523058943292619070914799885667532800000000000e61 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.1756652313409576657142429026563733545720475130265600000000000e61 * a * a * pow(x, 0.4e1) + 0.242234997252597393987975402028706873005377060864000000000000e60 * a * x * x - 0.10885622098758697705138647696104852070858919772160000000000e59) / 0.119622220865480194561963161495657715064383733760000000000e57;
return retval;
}

double PHO_deriv_46_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.46e2) * pow(x, 0.92e2) - 0.2208e4 * pow(a, 0.45e2) * pow(x, 0.90e2) + 0.2332890e7 * pow(a, 0.44e2) * pow(x, 0.88e2) - 0.1571130000e10 * pow(a, 0.43e2) * pow(x, 0.86e2) + 0.758007379800e12 * pow(a, 0.42e2) * pow(x, 0.84e2) - 0.279160741379520e15 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.81659885329305360e17 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.19492720875372729600e20 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.3871470951636528240000e22 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.649093166097411619584000e24 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.92892186638176360744108800e26 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.11445739666537404985082726400e29 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.1222523400589641791079094656000e31 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.113804655543807593067858355200000e33 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.9272640755630094386607573269760000e34 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.663495448691380917683028455866368000e36 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.41800213267556997814030792719581184000e38 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.2323014653300646601205520805480366080000e40 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.114033401600826011543552258289856512000000e42 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.4948403286308880656390326013174081126400000e43 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.189883729740998047732941510014616331223040000e45 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.6442281252961110736730416433587580090449920000e46 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.193139247456755224961470038132622304182272000000e48 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.5111435660481234687071040706723463626752000000000e49 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.119242491908083660628385849629705944321228800000000e51 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.2447460543772002210711748323216589838597750784000000e52 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.44093511911994950084649799117950165008839606272000000e53 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.695294951915171511228267760824906711554913730560000000e54 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.9563661259450959493245960995902433049862471680000000000e55 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.114289049864666362826873111818618868888287523635200000000e57 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.1181087102154065281108238710820306047695539750830080000000e58 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.10497672375073585674064680556666783874280926415421440000000e59 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.79741934387578198870299015766988069814249344886374400000000e59 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.513872074304301396632536810466206203636129265090560000000000e60 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.2785111073306621760719432963195886711030815303663616000000000e61 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.12566892715957074272706520799012974535275551804044083200000000e62 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.46640540852312230938947371908531893295555198362163609600000000e62 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.140331682668630743691264642277705859345792912037249024000000000e63 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.336321231959594357530756426511419117793018727156940800000000000e63 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.628205450465703849722607479022234442646869369096765440000000000e63 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.889714231008403824374576638894280873423124292511465472000000000e63 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.921890607739574021555490680502736783900159065074958336000000000e63 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.665976169552127337000313884454087449408394129802526720000000000e63 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.313236766447303163470228636534454509781842026037248000000000000e63 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.86377411353650266290275169468592001182265528392089600000000000e62 * a * a * pow(x, 0.4e1) - 0.11643548490162380217883246287341339353506855109263360000000000e62 * a * x * x + 0.511743860862524272336078404878423705045433613025280000000000e60) / 0.5502622159812088949850305428800254892961651752960000000000e58;
return retval;
}

double PHO_deriv_47_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.47e2) * pow(x, 0.94e2) - 0.2303e4 * pow(a, 0.46e2) * pow(x, 0.92e2) + 0.2540350e7 * pow(a, 0.45e2) * pow(x, 0.90e2) - 0.1787898330e10 * pow(a, 0.44e2) * pow(x, 0.88e2) + 0.902362804200e12 * pow(a, 0.43e2) * pow(x, 0.86e2) - 0.348020509822920e15 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.106730667295504560e18 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.26741961639040309200e20 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.5581776720294231811200e22 * pow(a, 0.39e2) * pow(x, 0.78e2) - 0.984784892794768040976000e24 * pow(a, 0.38e2) * pow(x, 0.76e2) + 0.148505561833451020579180800e27 * pow(a, 0.37e2) * pow(x, 0.74e2) - 0.19308981781084789907720006400e29 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.2179624045119062725176529536000e31 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.214776800138270719303933410432000e33 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.18555307159486667061175886442240000e35 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.1410323055780080159017503988232448000e37 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.94558802978016803042697410258632704000e38 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.5603999647079525239148096519739555840000e40 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.293994443023710477930692448189413621760000e42 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.13665818248685872215773574804594035097600000e44 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.563113298820476955422502765977958389514240000e45 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.20570197562795069959845542216018362346373120000e47 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.665889004107872027553893244067946196113817600000e48 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.19087439465576580168703213176233364565622784000000e50 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.483906916028702032445996953763662763635507200000000e51 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.10833062826829209499691051804922530401920221184000000e53 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.213716124598415658854811245407544377433878167552000000e54 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.3706338196864415705364969796482188527569508761600000000e55 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.56336340592339118721547540906529265619056533176320000000e56 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.747913487174157265786062181000474733218509147340800000000e57 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.8636943802535852477103460926566521204907770569031680000000e58 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.86348006403019726129652218543763061872390589634314240000000e59 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.743248662709536883141310235566568127509184822168780800000000e60 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.5473012879952044321313284461899274393476724599606476800000000e61 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.34221235218872259699714872343466051218471023095578624000000000e62 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.180120550249576430321913889066340825681610897171362611200000000e63 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.789926268564407477556345248435518801784414055064770969600000000e63 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.2851664328601239349479470298406216523816321009596760064000000000e64 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.8351933296770193265038943969945141893282475774236950528000000000e64 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.19497804923586944921065870985292325886822237719819714560000000000e65 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.35499451722944506614906137518049476097386694882982100992000000000e65 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.49038045284688309581123112358635972524771421091126050816000000000e65 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.49589034557549975980911012497497050867746380878666792960000000000e65 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.34981411974705797009789939048621950612131167906656419840000000000e65 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.16075374134230436188315056905460636644935401835226726400000000000e65 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.4333361723140378450763189252776345530373890929495900160000000000e64 * a * a * pow(x, 0.4e1) + 0.571298740498170511040308260534328863751957569947566080000000000e63 * a * x * x - 0.24569207943560977161081613739593138097073775076966400000000000e62) / 0.258623241511168180642964355153611979969197632389120000000000e60;
return retval;
}

double PHO_deriv_48_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.48e2) * pow(x, 0.96e2) - 0.2400e4 * pow(a, 0.47e2) * pow(x, 0.94e2) + 0.2761344e7 * pow(a, 0.46e2) * pow(x, 0.92e2) - 0.2029028352e10 * pow(a, 0.45e2) * pow(x, 0.90e2) + 0.1070214906240e13 * pow(a, 0.44e2) * pow(x, 0.88e2) - 0.431801425566720e15 * pow(a, 0.43e2) * pow(x, 0.86e2) + 0.138682889952076800e18 * pow(a, 0.42e2) * pow(x, 0.84e2) - 0.36430734436865556480e20 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.7981746223027013015040e22 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.1479968227552299177369600e25 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.234855647696402786698444800e27 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.32177756846169700759977984000e29 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.3832996518984153549139266355200e31 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.399172994355343425853867809177600e33 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.36505014161206406848248878678016000e35 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.2942033733880931159325539259383808000e37 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.209533711144469052196886306823106560000e39 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.13215983286809877884085238045559488512000e41 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.739383091897753976168216550050560475136000e42 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.36731018642273339711608809603454394695680000e44 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.1621296359629168075652850618011299495280640000e46 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.63598678455018573788894430039863535756902400000e47 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.2216703029059465562787465861571243600836034560000e49 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.68610555971084891246497045013629477379458990080000e50 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.1884010926405079912989748139986527026420908032000000e52 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.45835663086238656513284831460494136971555241984000000e53 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.986276742084345311668395022070923737329722982400000000e54 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.18730004144985473237293727885807132465556457783296000000e56 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.313111450871105838789232648406815286809072100179968000000e57 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.4593610000240675001672754841830393549424631438376960000000e58 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.58931697524455155363340213825533510407575827256442880000000e59 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.658379438247894263267042976834053427828205240398643200000000e60 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.6374450295473557503647237196800331352402302768953425920000000e61 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.53189577025904312218985401585272948179566390182842204160000000e62 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.380034567559545874964917216491620203635926288537380454400000000e63 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.2307679783735073746774919001346705814849480113528189747200000000e64 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.11805491486237298565677247668926434839854979284484489216000000000e65 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.50360087052260603356796805954313847316850366321349414092800000000e65 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.176969167597356416447201505379235074230939292176981845606400000000e66 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.504881091170766316300887289145592548940610771669078769664000000000e66 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.1148891346669840395900598632402328499151787579849238904832000000000e67 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.2040234564653484726071767371325592949987279670436576624640000000000e67 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.2750538450125438667741197493194503088130999259403384782848000000000e67 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.2716095213719574498377712014746629167528285494079907692544000000000e67 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.1872012264396643490729697757199381269121520881542228869120000000000e67 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.840951746013306992251333759506532087442881542962817269760000000000e66 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.221712532482694257901600482386088478187993746294544793600000000000e66 * a * a * pow(x, 0.4e1) - 0.28601661525203111433666713965148256088753504561177559040000000000e65 * a * x * x + 0.1204149812475999049073642037595217378736584176403742720000000000e64) / 0.12413915592536072670862289047373375038521486354677760000000000e62;
return retval;
}

double PHO_deriv_49_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.49e2) * pow(x, 0.98e2) - 0.2499e4 * pow(a, 0.48e2) * pow(x, 0.96e2) + 0.2996448e7 * pow(a, 0.47e2) * pow(x, 0.94e2) - 0.2296662144e10 * pow(a, 0.46e2) * pow(x, 0.92e2) + 0.1264767509376e13 * pow(a, 0.45e2) * pow(x, 0.90e2) - 0.533310299786880e15 * pow(a, 0.44e2) * pow(x, 0.88e2) + 0.179192260728391680e18 * pow(a, 0.43e2) * pow(x, 0.86e2) - 0.49297985117328245760e20 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.11324266107609427822080e23 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.2204066643679890130014720e25 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.367593487691696930158387200e27 * pow(a, 0.39e2) * pow(x, 0.78e2) - 0.53000297407184666475563827200e29 * pow(a, 0.38e2) * pow(x, 0.76e2) + 0.6652840610603491659072003686400e31 * pow(a, 0.37e2) * pow(x, 0.74e2) - 0.731135627302774297986699680563200e33 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.70666496549100797454387952798924800e35 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.6028735486845161782827472223158272000e37 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.455285466477710583099297758083510272000e39 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.30504126254006609067652949791595188224000e41 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.1816285487601746752844131856247816978432000e43 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.96223768618703066361203666638119641284608000e44 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.4539251693534470739213303404450426556252160000e46 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.190741208918111739837554932852314862843330560000e48 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.7139240741477903174047894746656681268420280320000e49 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.237922957754035338387291796665754182271484559360000e51 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.7054578658337116300538261560041437363378470256640000e52 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.185897680861586172784454189757848687278216445952000000e54 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.4347145767840168963574928745106615456352138428416000000e55 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.90044387775964201572996477281682058166077627564032000000e56 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.1648363588470201812468935512687118493366767998468096000000e58 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.26596805593273839854770649134418413249734879932841984000000e59 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.377068636259072159966368696589223073920291968668139520000000e60 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.4679908316150903662808398581054954119059107578873118720000000e61 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.50634008031688249351774201314469573038153400054752215040000000e62 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.475241144120036273849357414998114640067634905613672120320000000e63 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.3847735528297161156949014251551000459342778994848044154880000000e64 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.26698573053490505986993160112802860330133568535680306380800000000e65 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.157573931158836123570292964587326685477847139789015141580800000000e66 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.784106104955691760091772093424176850363366314085250079129600000000e66 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.3255961466676266328656941106632516576463488433079949511884800000000e67 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.11145406559007219355787221480395922127125018097850596406067200000000e68 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.30994248577014458320868958611213378949027437968741827084288000000000e68 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.68792112695324773346318908137083353277109679394036738162688000000000e68 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.119225262818898822251704983647315576166293698667215948087296000000000e69 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.156957828301523019789403325286961456186566628579085100515328000000000e69 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.151434385663346256629658926743138765646276893849029319852032000000000e69 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.102030259844098541700834028656724700258129822096863726141440000000000e69 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.44827940251869382166041495428126184095105093461322277847040000000000e68 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.11564654799019494867303258129064467705386154430181545082880000000000e68 * a * a * pow(x, 0.4e1) + 0.1460484755546276413654277444134430199907014348141483786240000000000e67 * a * x * x - 0.60219904539392488526352964168808242311867730306541813760000000000e65) / 0.608281864034267560872252163321295376887552831379210240000000000e63;
return retval;
}

double PHO_deriv_50_0( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.50e2) * pow(x, 0.100e3) - 0.2600e4 * pow(a, 0.49e2) * pow(x, 0.98e2) + 0.3246250e7 * pow(a, 0.48e2) * pow(x, 0.96e2) - 0.2593080000e10 * pow(a, 0.47e2) * pow(x, 0.94e2) + 0.1489580400000e13 * pow(a, 0.46e2) * pow(x, 0.92e2) - 0.655805375232000e15 * pow(a, 0.45e2) * pow(x, 0.90e2) + 0.230293083998880000e18 * pow(a, 0.44e2) * pow(x, 0.88e2) - 0.66282851544940800000e20 * pow(a, 0.43e2) * pow(x, 0.86e2) + 0.15946168431591921600000e23 * pow(a, 0.42e2) * pow(x, 0.84e2) - 0.3254099456209605696000000e25 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.569695191798615669198720000e27 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.86328773624565188143257600000e29 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.11403752515890143401504512000000e32 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.1320663148506896607259951104000000e34 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.134704693238889822474873807360000000e36 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.12145804094376699562472929387315200000e38 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.970974225044773652522693843633664000000e39 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.68982646436016755015045114861137920000000e41 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.4363152387078059754701603514966973440000000e43 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.246013901184447122095760893841616076800000000e45 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.12376607920159271216749022339323359657984000000e47 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.555826737983812743577139192381684884439040000000e48 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.22285704627116128374106130118788388264345600000000e50 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.797560106988775414975157323750897363923763200000000e51 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.25462645307580836728092015910290473273917440000000000e53 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.724524294640028160595821457517769242725356404736000000e54 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.18351437726079660646670477706864549897977777356800000000e56 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.413105957470191495076564866128552638396036546560000000000e57 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.8248500271685032379715586392918463120501081374720000000000e58 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.145743907026543042658614987859161670501040495001600000000000e60 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.2272511870311372392654454198193978347287473918312448000000000e61 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.31168980013350722900445799516447875061959618377809920000000000e62 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.374645438117790320228681599370718742170048156873523200000000000e63 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.3929468472525695625969173051012051122694831489836646400000000000e64 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.35786230731930442307933540286002608438827929639583744000000000000e65 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.281382019926493077804094579620226224067584178194669895680000000000e66 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.1897692692527511454957847164880595464641846783173355110400000000000e67 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.10894489269309851409636848588690091390674535120547872768000000000000e68 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.52771811358935697707325859282177661586766184175428960256000000000000e68 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.213459012238391586231879880242516383946469958462409277440000000000000e69 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.712241570835433259393705867075863001101388094736238955724800000000000e69 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.1931890832713638323522997420211132021213092339515073232896000000000000e70 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.4184763527384356306389101554649890014894819586371936583680000000000000e70 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.7082390485955819825366701505844074923933017994639976693760000000000000e70 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.9109844628937369794717323987207562523047305544362832691200000000000000e70 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.8592021881608298248491286623724185284895142913420103254016000000000000e70 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.5661862245353294362117220125687812314095304773109714780160000000000000e70 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.2434141259243794022757129073557383666511690580235806310400000000000000e70 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.614744858839631653706519842556584140266983080212614348800000000000000e69 * a * a * pow(x, 0.4e1) - 0.76035233004283445109031520415161922110944103922401280000000000000000e68 * a * x * x + 0.3071823413373051182404873424772541653282141798465011712000000000000e67) / 0.30414093201713378043612608166064768844377641568960512000000000000e65;
return retval;
}

double PHO_deriv_0_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (a * x * x - 0.1e1) * pow(a * x * x, -0.1e1 / 0.2e1);
return retval;
}

double PHO_deriv_1_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = pow(a, 0.3e1 / 0.2e1) * x * exp(-a * x * x / 0.2e1) * (a * a * pow(x, 0.4e1) - 0.5e1 * a * x * x + 0.2e1) * pow(a * x * x, -0.1e1 / 0.2e1);
return retval;
}

double PHO_deriv_2_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * sqrt(0.3e1) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.3e1) * pow(x, 0.6e1) - 0.11e2 * a * a * pow(x, 0.4e1) + 0.24e2 * a * x * x - 0.6e1) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.6e1;
return retval;
}

double PHO_deriv_3_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.4e1) * pow(x, 0.8e1) - 0.19e2 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.96e2 * a * a * pow(x, 0.4e1) - 0.132e3 * a * x * x + 0.24e2) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.12e2;
return retval;
}

double PHO_deriv_4_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * sqrt(0.5e1) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.5e1) * pow(x, 0.10e2) - 0.29e2 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.260e3 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.840e3 * a * a * pow(x, 0.4e1) + 0.840e3 * a * x * x - 0.120e3) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.120e3;
return retval;
}

double PHO_deriv_5_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * sqrt(0.6e1) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.6e1) * pow(x, 0.12e2) - 0.41e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.570e3 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.3300e4 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.7800e4 * a * a * pow(x, 0.4e1) - 0.6120e4 * a * x * x + 0.720e3) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.720e3;
return retval;
}

double PHO_deriv_6_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * sqrt(0.7e1) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.7e1) * pow(x, 0.14e2) - 0.55e2 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.1092e4 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.9870e4 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.42000e5 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.78120e5 * a * a * pow(x, 0.4e1) + 0.50400e5 * a * x * x - 0.5040e4) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.5040e4;
return retval;
}

double PHO_deriv_7_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = pow(a, 0.3e1 / 0.2e1) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.8e1) * pow(x, 0.16e2) - 0.71e2 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.1904e4 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.24696e5 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.164640e6 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.552720e6 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.846720e6 * a * a * pow(x, 0.4e1) - 0.463680e6 * a * x * x + 0.40320e5) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.10080e5;
return retval;
}

double PHO_deriv_8_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.9e1) * pow(x, 0.18e2) - 0.89e2 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.3096e4 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.54432e5 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.522144e6 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.2751840e7 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.7620480e7 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.9918720e7 * a * a * pow(x, 0.4e1) + 0.4717440e7 * a * x * x - 0.362880e6) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.120960e6;
return retval;
}

double PHO_deriv_9_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * sqrt(0.10e2) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.10e2) * pow(x, 0.20e2) - 0.109e3 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.4770e4 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.109080e6 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.1421280e7 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.10795680e8 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.46992960e8 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.110678400e9 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.125193600e9 * a * a * pow(x, 0.4e1) - 0.52617600e8 * a * x * x + 0.3628800e7) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.3628800e7;
return retval;
}

double PHO_deriv_10_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * sqrt(0.11e2) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.11e2) * pow(x, 0.22e2) - 0.131e3 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.7040e4 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.202950e6 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.3445200e7 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.35592480e8 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.223534080e9 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.828273600e9 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.1696464000e10 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.1696464000e10 * a * a * pow(x, 0.4e1) + 0.638668800e9 * a * x * x - 0.39916800e8) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.39916800e8;
return retval;
}

double PHO_deriv_11_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * sqrt(0.3e1) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.12e2) * pow(x, 0.24e2) - 0.155e3 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.10032e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.355740e6 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.7623000e7 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.102714480e9 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.878169600e9 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.4698207360e10 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.15148425600e11 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.27442800000e11 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.24588748800e11 * a * a * pow(x, 0.4e1) - 0.8382528000e10 * a * x * x + 0.479001600e9) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.239500800e9;
return retval;
}

double PHO_deriv_12_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * sqrt(0.13e2) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.13e2) * pow(x, 0.26e2) - 0.181e3 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.13884e5 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.593736e6 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.15667080e8 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.266717880e9 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.2976367680e10 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.21690789120e11 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.101033412480e12 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.288259171200e12 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.468064396800e12 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.379848268800e12 * a * a * pow(x, 0.4e1) + 0.118313395200e12 * a * x * x - 0.6227020800e10) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.6227020800e10;
return retval;
}

double PHO_deriv_13_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * sqrt(0.14e2) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.14e2) * pow(x, 0.28e2) - 0.209e3 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.18746e5 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.951132e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.30294264e8 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.635554920e9 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.8966477520e10 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.85336130880e11 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.541698917760e12 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.2233580469120e13 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.5713810502400e13 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.8405440243200e13 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.6233247820800e13 * a * a * pow(x, 0.4e1) - 0.1787154969600e13 * a * x * x + 0.87178291200e11) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.87178291200e11;
return retval;
}

double PHO_deriv_14_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * sqrt(0.15e2) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.15e2) * pow(x, 0.30e2) - 0.239e3 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.24780e5 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.1471470e7 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.55648320e8 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.1410088680e10 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.24528984480e11 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.295275380400e12 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.2448775929600e13 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.13765088937600e14 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.50904857203200e14 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.118006714425600e15 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.158664489984000e15 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.108319026816000e15 * a * a * pow(x, 0.4e1) + 0.28768836096000e14 * a * x * x - 0.1307674368000e13) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.1307674368000e13;
return retval;
}

double PHO_deriv_15_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.16e2) * pow(x, 0.32e2) - 0.271e3 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.32160e5 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.2209200e7 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.97843200e8 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.2945386080e10 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.61912730880e11 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.919321603200e12 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.9646693056000e13 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.70866091296000e14 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.357372875059200e15 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.1197916899379200e16 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.2538631839744000e16 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.3142777397760000e16 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.1987665039360000e16 * a * a * pow(x, 0.4e1) - 0.491685562368000e15 * a * x * x + 0.20922789888000e14) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.5230697472000e13;
return retval;
}

double PHO_deriv_16_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * sqrt(0.17e2) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.17e2) * pow(x, 0.34e2) - 0.305e3 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.41072e5 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.3231360e7 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.165648000e9 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.5842462080e10 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.145957593600e12 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.2619822965760e13 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.33920081395200e14 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.315372657600000e15 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.2078936558899200e16 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.9504758495232000e16 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.29130800361062400e17 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.56850707257344000e17 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.65209361817600000e17 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.38414242234368000e17 * a * a * pow(x, 0.4e1) + 0.8892185702400000e16 * a * x * x - 0.355687428096000e15) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.355687428096000e15;
return retval;
}

double PHO_deriv_17_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = pow(a, 0.3e1 / 0.2e1) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.18e2) * pow(x, 0.36e2) - 0.341e3 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.51714e5 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.4619376e7 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.271336320e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.11081508480e11 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.324474958080e12 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.6923950225920e13 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.108396449441280e15 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.1243829761574400e16 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.10379544906931200e17 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.62043320270131200e17 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.259402841310412800e18 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.732253708221235200e18 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.1324224294801408000e19 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.1414924588965888000e19 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.780022529814528000e18 * a * a * pow(x, 0.4e1) - 0.169662903201792000e18 * a * x * x + 0.6402373705728000e16) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.1067062284288000e16;
return retval;
}

double PHO_deriv_18_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * sqrt(0.19e2) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.19e2) * pow(x, 0.38e2) - 0.379e3 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.64296e5 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.6470982e7 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.431724384e9 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.20210394240e11 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.685445483520e12 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.17148092532480e14 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.319234278504960e15 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.4430217476805120e16 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.45635685045350400e17 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.345379161820492800e18 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.1888250552655667200e19 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.7272349586108006400e19 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.19025293703941324800e20 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.32053483957727232000e20 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.32053483957727232000e20 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.16604556205805568000e20 * a * a * pow(x, 0.4e1) + 0.3406062811447296000e19 * a * x * x - 0.121645100408832000e18) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.121645100408832000e18;
return retval;
}

double PHO_deriv_19_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * sqrt(0.5e1) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.20e2) * pow(x, 0.40e2) - 0.419e3 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.79040e5 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.8902260e7 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.669423960e9 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.35605401120e11 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.1384554332160e13 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.40130441971200e14 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.876055120012800e15 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.14459831138188800e17 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.180172055243980800e18 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.1683482641185945600e19 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.11654879823595008000e20 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.58703173960983552000e20 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.209553959637614592000e21 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.510787776616685568000e21 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.805473032357081088000e21 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.756936637293957120000e21 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.369801105242849280000e21 * a * a * pow(x, 0.4e1) - 0.71770609241210880000e20 * a * x * x + 0.2432902008176640000e19) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.1216451004088320000e19;
return retval;
}

double PHO_deriv_20_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * sqrt(0.21e2) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.21e2) * pow(x, 0.42e2) - 0.461e3 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.96180e5 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.12049800e8 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.1014337800e10 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.60824788920e11 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.2687982433920e13 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.89347021747200e14 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.2260176778944000e16 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.43753539420864000e17 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.648517028392396800e18 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.7330750497739468800e19 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.62666092964547072000e20 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.399735092277480960000e21 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.1866339953022504960000e22 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.6208036054264332288000e22 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.14164537959255011328000e23 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.20991990864801116160000e23 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.18605618107530854400000e23 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.8600308598904422400000e22 * a * a * pow(x, 0.4e1) + 0.1583819207322992640000e22 * a * x * x - 0.51090942171709440000e20) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.51090942171709440000e20;
return retval;
}

double PHO_deriv_21_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * sqrt(0.22e2) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.22e2) * pow(x, 0.44e2) - 0.505e3 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.115962e6 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.16072980e8 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.1505427000e10 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.101079898920e12 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.5037183320400e13 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.190316728103040e15 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.5522100250867200e16 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.123893274859200000e18 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.2154052203740236800e19 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.28968288257196288000e20 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.299614867117287321600e21 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.2360119660866519552000e22 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.13956621139927065600000e23 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.60724808366237503488000e23 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.189089705766753792000000e24 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.405497312554869190656000e24 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.566824200345516072960000e24 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.475358641122613248000000e24 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.208502135002746224640000e24 * a * a * pow(x, 0.4e1) - 0.36530023652772249600000e23 * a * x * x + 0.1124000727777607680000e22) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.1124000727777607680000e22;
return retval;
}

double PHO_deriv_22_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * sqrt(0.23e2) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.23e2) * pow(x, 0.46e2) - 0.551e3 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.138644e6 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.21156366e8 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.2192781360e10 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.163853132520e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.9144683745120e13 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.389682013477680e15 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.12854083434635520e17 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.330834606432422400e18 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.6667265571669964800e19 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.105187780766881612800e21 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.1294468652407285555200e22 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.12338453467402475212800e23 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.90110749306878203904000e23 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.496621601517120887808000e24 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.2022935697922951139328000e25 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.5920865850359543795712000e25 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.11976808488179761594368000e26 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.15841900424115889643520000e26 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.12607166829662906941440000e26 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.5260885406363092746240000e25 * a * a * pow(x, 0.4e1) + 0.878968569122089205760000e24 * a * x * x - 0.25852016738884976640000e23) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.25852016738884976640000e23;
return retval;
}

double PHO_deriv_23_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * sqrt(0.6e1) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.24e2) * pow(x, 0.48e2) - 0.599e3 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.164496e6 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.27512232e8 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.3140025504e10 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.259697314800e12 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.16132848842880e14 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.770037057155520e15 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.28652086652999040e17 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.838465540760897280e18 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.19386486491581440000e20 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.354561213852395827200e21 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.5119301367438767308800e22 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.58063654983318650265600e23 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.513161848351080043315200e24 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.3493057136053143859200000e25 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.18024174822034222313472000e26 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.69014590050442938789888000e26 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.190548321511190793486336000e27 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.364745242435036839247872000e27 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.457839216445652936294400000e27 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.346649692451708651765760000e27 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.137946361318690235351040000e27 * a * a * pow(x, 0.4e1) - 0.22025918261530000097280000e26 * a * x * x + 0.620448401733239439360000e24) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.310224200866619719680000e24;
return retval;
}

double PHO_deriv_24_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.25e2) * pow(x, 0.50e2) - 0.649e3 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.193800e6 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.35383200e8 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.4427095200e10 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.403256700000e12 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.27731156745600e14 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.1473532242336000e16 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.61421286137904000e17 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.2027740958402544000e19 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.53312837851848960000e20 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.1118776511350536192000e22 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.18727345950867671040000e23 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.249229145520045250560000e24 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.2621236264079549276160000e25 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.21593444113783071129600000e26 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.137626451160493868052480000e27 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.667584860884509670502400000e27 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.2411442267571746843033600000e28 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.6300739692990176123289600000e28 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.11445980411141323407360000000e29 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.13669770891020209097932800000e29 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.9870299990906284081152000000e28 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.3753712830486098608128000000e28 * a * a * pow(x, 0.4e1) + 0.573914771603246481408000000e27 * a * x * x - 0.15511210043330985984000000e26) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.3102242008666197196800000e25;
return retval;
}

double PHO_deriv_25_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * sqrt(0.26e2) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.26e2) * pow(x, 0.52e2) - 0.701e3 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.226850e6 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.45045000e8 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.6153420000e10 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.614556228000e12 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.46551953448000e14 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.2738596901040000e16 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.127095220652400000e18 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.4700929493660400000e19 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.139447282429334880000e21 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.3327866647066241280000e22 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.63922533186332620800000e23 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.986331560455777536000000e24 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.12172774868063986176000000e26 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.119341307441683443916800000e27 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.920579330674369458892800000e27 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.5515948165726273347072000000e28 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.25242474656713454300160000000e29 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.86292570004403888885760000000e29 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.213985329019718265225216000000e30 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.369868681285738193534976000000e30 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.421271538768500136837120000000e30 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.290705928228761562316800000000e30 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.105864008545733979340800000000e30 * a * a * pow(x, 0.4e1) - 0.15526721253374316969984000000e29 * a * x * x + 0.403291461126605635584000000e27) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.403291461126605635584000000e27;
return retval;
}

double PHO_deriv_26_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * sqrt(0.3e1) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.27e2) * pow(x, 0.54e2) - 0.755e3 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.263952e6 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.56809350e8 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.8441550000e10 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.920612628000e12 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.76470039360000e14 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.4955895800856000e16 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.254664348578640000e18 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.10488343835970000000e20 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.348604580190746880000e21 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.9387105872625280800000e22 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.205067610496154165760000e24 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.3631212288423604684800000e25 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.51962833428889743360000000e26 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.597832398599376497356800000e27 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.5488574280926479142400000000e28 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.39804432114521397676953600000e29 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.225018631225559935475712000000e30 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.974587273400177352115200000000e30 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.3162103923011815935369216000000e31 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.7461144088005408386826240000000e31 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.12299582981439218674040832000000e32 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.13388772395076898844344320000000e32 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.8847206428464911130624000000000e31 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.3090624112343742288297984000000e31 * a * a * pow(x, 0.4e1) + 0.435554778016734086430720000000e30 * a * x * x - 0.10888869450418352160768000000e29) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.3629623150139450720256000000e28;
return retval;
}

double PHO_deriv_27_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * sqrt(0.7e1) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.28e2) * pow(x, 0.56e2) - 0.811e3 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.305424e6 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.71026956e8 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.11441266200e11 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.1357428618000e13 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.123137921088000e15 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.8751996004752000e16 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.495491443535088000e18 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.22597412803645680000e20 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.836382490855591680000e21 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.25236923264041769280000e23 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.622121202430806798720000e24 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.12529538210541039367680000e26 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.205772820378403383705600000e27 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.2745196490048245141708800000e28 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.29577504601891186369228800000e29 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.255307812680818674724147200000e30 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.1746962827878438044511436800000e31 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.9347155510251219951273984000000e31 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.38424892053227853192155136000000e32 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.118632190999285993350537216000000e33 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.266973301185357158277709824000000e33 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.420631582434935734794387456000000e33 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.438467550594720995633725440000000e33 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.277943837156653648079683584000000e33 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.93295833451184441313460224000000e32 * a * a * pow(x, 0.4e1) - 0.12652866301386125210812416000000e32 * a * x * x + 0.304888344611713860501504000000e30) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.152444172305856930250752000000e30;
return retval;
}

double PHO_deriv_28_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * sqrt(0.29e2) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.29e2) * pow(x, 0.58e2) - 0.869e3 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.351596e6 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.88090632e8 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.15334215624e11 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.1972439796600e13 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.194676306552000e15 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.15112323521568000e17 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.938390617500336000e18 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.47154710657566512000e20 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.1932805250526870720000e22 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.64948645856547573120000e23 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.1794195502560515134080000e25 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.40778311132893182808960000e26 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.761749156650809192785920000e27 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.11663577591448591794585600000e29 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.145726908395482696317235200000e30 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.1476284225671118152325836800000e31 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.12023712488598504469545369600000e32 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.77872488402155033574302515200000e32 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.395482087464775563437273088000000e33 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.1547068226647921429008420864000000e34 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.4555638922970865899025432576000000e34 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.9798882729562024691122962432000000e34 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.14784531273781999130741243904000000e35 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.14784531273781999130741243904000000e35 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.9005334590623886440702672896000000e34 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.2908939695940361943044849664000000e34 * a * a * pow(x, 0.4e1) + 0.380195765730807184045375488000000e33 * a * x * x - 0.8841761993739701954543616000000e31) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.8841761993739701954543616000000e31;
return retval;
}

double PHO_deriv_29_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * sqrt(0.30e2) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.30e2) * pow(x, 0.60e2) - 0.929e3 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.402810e6 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.108438540e9 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.20339114040e11 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.2827492897320e13 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.302588604536400e15 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.25559018273880000e17 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.1733545491415920000e19 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.95550518583439920000e20 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.4315642150295155680000e22 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.160609955074182694080000e24 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.4941386627684063356800000e25 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.125861730915473644291200000e27 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.2653374151542992528851200000e28 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.46213535631233809930291200000e29 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.662721766286203997723750400000e30 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.7785737210663808704275968000000e31 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.74424036092783219761830912000000e32 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.573751532025343904719398912000000e33 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.3527210648549477994215215104000000e34 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.17046600250267423298188357632000000e35 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.63603879349854468413206978560000000e35 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.179018444588516105676166103040000000e36 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.368751210050160357327963095040000000e36 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.533751751496333805352678785024000000e36 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.512886298411357326202700169216000000e36 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.300642012192134215709369303040000000e36 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.93590050703734745188844175360000000e35 * a * a * pow(x, 0.4e1) - 0.11803752261642502109315727360000000e35 * a * x * x + 0.265252859812191058636308480000000e33) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.265252859812191058636308480000000e33;
return retval;
}

double PHO_deriv_30_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * sqrt(0.31e2) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.31e2) * pow(x, 0.62e2) - 0.991e3 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.459420e6 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.132557550e9 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.26717560800e11 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.4002443905320e13 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.462959002789920e15 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.42404471123742000e17 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.3129746755262400000e19 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.188441332652336400000e21 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.9336264805191804480000e22 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.382891523658662098080000e24 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.13047325398609748646400000e26 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.370139744662664440464000000e27 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.8745346551727691889984000000e28 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.171905387469312624955027200000e30 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.2804276672771889913216819200000e31 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.37814702703810203497277952000000e32 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.419207088295439809277552640000000e33 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.3793143746771580411050480640000000e34 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.27757877282238430595985260544000000e35 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.162394299428230818380566278144000000e36 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.748605300449557674567401717760000000e36 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.2669837630069588180351217868800000000e37 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.7196452186451071380298747084800000000e37 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.14221296666917540289221139431424000000e38 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.19780449524557702234179727785984000000e38 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.18292047204496046721481253191680000000e38 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.10333367242083589674275124019200000000e38 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.3104121591952165863691399987200000000e37 * a * a * pow(x, 0.4e1) + 0.378250578092184449615375892480000000e36 * a * x * x - 0.8222838654177922817725562880000000e34) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.8222838654177922817725562880000000e34;
return retval;
}

double PHO_deriv_31_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = pow(a, 0.3e1 / 0.2e1) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.32e2) * pow(x, 0.64e2) - 0.1055e4 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.521792e6 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.160986720e9 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.34780512000e11 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.5599475152320e13 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.698006349734400e15 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.69107907663325440e17 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.5531377713668352000e19 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.362439063899640000000e21 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.19616763414216084480000e23 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.882549157369700620800000e24 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.33142316592048051548160000e26 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.1041400018826044291814400000e28 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.27406146412655119549440000000e29 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.603789273082900022185267200000e30 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.11116697807663502213519360000000e32 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.170530144369558123955386982400000e33 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.2169979412055915632078979072000000e34 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.22771677824961237165798604800000000e35 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.195593968264587915661800505344000000e36 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.1362172278985522984073253519360000000e37 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.7601585791021650213560009883648000000e37 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.33495281871809445339014424821760000000e38 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.114405137323068314250903158784000000000e39 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.295851685117454660652835568615424000000e39 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.561817228208052398598281358213120000000e39 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.752046570390778912509629256695808000000e39 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.670238096809606370257598813306880000000e39 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.365368130867305703867605843968000000000e39 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.106041727284278492657388858900480000000e39 * a * a * pow(x, 0.4e1) - 0.12498714754350442682942855577600000000e38 * a * x * x + 0.263130836933693530167218012160000000e36) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.32891354616711691270902251520000000e35;
return retval;
}

double PHO_deriv_32_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * sqrt(0.33e2) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.33e2) * pow(x, 0.66e2) - 0.1121e4 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.590304e6 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.194320896e9 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.44895459840e11 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.7748241937920e13 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.1038080778577920e16 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.110770674903060480e18 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.9584244242928875520e19 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.681073184937809664000e21 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.40118547262619105280000e23 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.1971854076414758215680000e25 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.81236054203065148907520000e26 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.2813205707161455258132480000e28 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.82005093961117761879244800000e29 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.2012401463469157690004275200000e31 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.41528495417961773367053107200000e32 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.719028014199675323170432204800000e33 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.10408786491271490392562447155200000e35 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.125383245268818427997467705344000000e36 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.1249054378952578847107493658624000000e37 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.10210414050662216559042143453184000000e38 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.67829534750654724982535472807936000000e38 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.361825314307090721870856390180864000000e39 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.1526927232805218434202054159237120000000e40 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.5003623085961715792077500552577024000000e40 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.12434324759046789778300007564181504000000e41 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.22725014058885712459792938587652096000000e41 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.29317002869860193936679439857352704000000e41 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.25213459925823447754152997143183360000000e41 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.13279687078369645080479158637690880000000e41 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.3728037697676569935409144796282880000000e40 * a * a * pow(x, 0.4e1) + 0.425482563321782438280391525662720000000e39 * a * x * x - 0.8683317618811886495518194401280000000e37) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.8683317618811886495518194401280000000e37;
return retval;
}

double PHO_deriv_33_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * sqrt(0.34e2) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.34e2) * pow(x, 0.68e2) - 0.1189e4 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.665346e6 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.233214432e9 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.57494367744e11 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.10611971504640e14 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.1524207031649280e16 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.174816244264273920e18 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.16302955393013667840e20 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.1252431836062582855680e22 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.80013341375143368192000e23 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.4280279996498495109120000e25 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.192656643883556212039680000e27 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.7319564002278725665628160000e28 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.235158019983101625155665920000e30 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.6392323641794170937330073600000e31 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.146940641641553571831424204800000e33 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.2851655321621841587811986227200000e34 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.46594971858953109717833586278400000e35 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.638544245443759499456354667724800000e36 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.7302049996148178594506926718976000000e37 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.69230828444493490725135292563456000000e38 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.539847530555277194456492536233984000000e39 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.3428188074931516392633063454015488000000e40 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.17514358742880076940880265180348416000000e41 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.70913185398696858754117816349097984000000e41 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.223311365319517813884648753186471936000000e42 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.534093589687666470561987420072443904000000e42 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.940746192681963501293565694357536768000000e42 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.1171178672696808306604474770502189056000000e43 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.973185716567548449614033476921589760000000e42 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.495794280520508553863434185128017920000000e42 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.134773772761579290296937895302266880000000e42 * a * a * pow(x, 0.4e1) - 0.14909256351500009112804739786997760000000e41 * a * x * x + 0.295232799039604140847618609643520000000e39) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.295232799039604140847618609643520000000e39;
return retval;
}

double PHO_deriv_34_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * sqrt(0.35e2) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.35e2) * pow(x, 0.70e2) - 0.1259e4 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.747320e6 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.278385030e9 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.73082412480e11 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.14394650350080e14 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.2211298027868160e16 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.271913779554278400e18 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.27257391705377433600e20 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.2257076124526554777600e22 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.155893318890963875020800e24 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.9045111178755885961728000e25 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.443123093744142613401600000e27 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.18394189894659670137446400000e29 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.648365688899204651517542400000e30 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.19425377284519591993492684800000e32 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.494643302737694538153139814400000e33 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.10693314146013272245590902784000000e35 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.195849535296292516596898676736000000e36 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.3029522720580200942459921534976000000e37 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.39414124293555094797565341794304000000e38 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.428972329520553124773501859528704000000e39 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.3879749740185888401214888612986880000000e40 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.28920308434211730427747154350571520000000e41 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.175895610531471071794478588567224320000000e42 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.862197080394614341392584520099692544000000e42 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.3354787428500910072141709846832480256000000e43 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.10167763267888032239196620597420359680000000e44 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.23437556007335125161537972902528286720000000e44 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.39839091144314066704602071586853355520000000e44 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.47921007008912385725822062242897592320000000e44 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.38517153482969901430163431748995645440000000e44 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.19000936918856389501502027367815577600000000e44 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.5006410189714087218423492573029990400000000e43 * a * a * pow(x, 0.4e1) + 0.537323694252079536342665869551206400000000e42 * a * x * x - 0.10333147966386144929666651337523200000000e41) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.10333147966386144929666651337523200000000e41;
return retval;
}

double PHO_deriv_35_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.36e2) * pow(x, 0.72e2) - 0.1331e4 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.836640e6 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.330617700e9 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.92247586200e11 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.19349449922880e14 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.3172184647188480e16 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.417219907316889600e18 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.44842197287188224000e20 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.3991521390702177024000e22 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.297175946533084097740800e24 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.18641957646000481061068800e26 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.990594528918357519636480000e27 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.44757631590211724760576000000e29 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.1723759830274981370167296000000e31 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.56663748758796280202362060800000e32 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.1590347192467408335815075020800000e34 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.38085911389256117187139282944000000e35 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.777054836398245612408747786240000000e36 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.13473575823976723029444537507840000000e38 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.197865913305436127405424641654784000000e39 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.2450091958992389962648654851538944000000e40 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.25438359121218814671883187194429440000000e41 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.219937987008363859624675033664716800000000e42 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.1570242191181755924319130719800524800000000e43 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.9163235542318424571693416155991506944000000e43 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.43165210101209717142426084853640331264000000e44 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.161650202462355495599431018989496565760000000e45 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.472197819559545903989809159947996364800000000e45 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.1050411358989999169257974667913514188800000000e46 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.1725156252320845886129594240744313323520000000e46 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.2007271858099120414999353155561371729920000000e46 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.1562263474463938058843836182394463846400000000e46 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.747009099359970382327926391817895936000000000e45 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.190956574418815958300239716717428736000000000e45 * a * a * pow(x, 0.4e1) - 0.19901642983259715134537970476069683200000000e44 * a * x * x + 0.371993326789901217467999448150835200000000e42) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.61998887798316869577999908025139200000000e41;
return retval;
}

double PHO_deriv_36_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * sqrt(0.37e2) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.37e2) * pow(x, 0.74e2) - 0.1405e4 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.933732e6 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.390768840e9 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.115671213000e12 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.25788555749880e14 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.4502633281977600e16 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.632032614883676160e18 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.72661627241315481600e20 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.6934980195597484800000e22 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.555045457961181577420800e24 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.37533374675690481358848000e26 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.2156401908312997017338265600e28 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.105684198121362017054177280000e30 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.4430461244722763851560960000000e31 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.159133380218716607603240140800000e33 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.4900492905867442525631109120000000e34 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.129356468851381953203173216665600000e36 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.2923741853417985417967275270144000000e37 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.56475235431086779330421490892800000000e38 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.929685057441926727377520324624384000000e39 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.12994731639308271481932593801871360000000e41 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.153503098418854712921572473104498688000000e42 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.1523593895840825236995782992503767040000000e43 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.12616990500050163379340791314776064000000000e44 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.86429121140150858942952229352525266944000000e44 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.484711332386505457324111094192139141120000000e45 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.2197653145986183342887461381095196459008000000e46 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.7932234028717802506876983946746852802560000000e46 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.22361353828600746062462281499727101952000000000e47 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.48063058565403090297795034784546181611520000000e47 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.76356714232426686868612282725416986214400000000e47 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.86029994602882989053371872475181890928640000000e47 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.64901257232541426772772212219497047654400000000e47 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.30108209887057629788816205334708224000000000000e47 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.7473717928535905360149576912798430003200000000e46 * a * a * pow(x, 0.4e1) + 0.757006420017448977547378876986949632000000000e45 * a * x * x - 0.13763753091226345046315979581580902400000000e44) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.13763753091226345046315979581580902400000000e44;
return retval;
}

double PHO_deriv_37_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * sqrt(0.38e2) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.38e2) * pow(x, 0.76e2) - 0.1481e4 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.1039034e7 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.459770436e9 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.144139436280e12 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.34094581010280e14 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.6327551746288080e16 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.945974612227518720e18 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.116072999314158458880e21 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.11850414746622510643200e23 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.1017004116092370410188800e25 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.73932626813931949490380800e26 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.4579042501582351028906803200e28 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.242648184938110502729110732800e30 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.11034143063310116920425615360000e32 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.431412685243571289859253452800000e33 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.14516676489854681660442993868800000e35 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.420454270056266069560488282931200000e36 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.10475056005542615355806230297804800000e38 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.224155343538295344142382026579968000000e39 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.4110781045905687497661989029822464000000e40 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.64410196704754628742743449448792064000000e41 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.858881370678176865011306285052297216000000e42 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.9699215534622039480734110394097598464000000e43 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.92208701724738381632162686432869089280000000e44 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.732662253836696094584561531007657836544000000e45 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.4823431080684526681033951176132095115264000000e46 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.26036154865630455848161757961487223095296000000e47 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.113776663095225179284112679355890096144384000000e48 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.396324104082814316338444077728673583595520000000e48 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.1079534923133531663536541902830365174661120000000e49 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.2244513581453555025084955096938956791480320000000e49 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.3452932121948223325538563359302445044858880000000e49 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.3770947307455165688192373085129426883051520000000e49 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.2760055730198437391896528122479104543948800000000e49 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.1243355517372477492931477173491901608755200000000e49 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.299953471117095737594364143021392606003200000000e48 * a * a * pow(x, 0.4e1) - 0.29550777886862962814440408161654197452800000000e47 * a * x * x + 0.523022617466601111760007224100074291200000000e45) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.523022617466601111760007224100074291200000000e45;
return retval;
}

double PHO_deriv_38_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * sqrt(0.39e2) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.39e2) * pow(x, 0.78e2) - 0.1559e4 * pow(a, 0.38e2) * pow(x, 0.76e2) + 0.1152996e7 * pow(a, 0.37e2) * pow(x, 0.74e2) - 0.538634382e9 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.178555734864e12 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.44733762538920e14 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.8808616980465120e16 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.1399851736866863280e19 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.182946076891180162560e21 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.19935578560626783774720e23 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.1830191248791010615910400e25 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.142669447702299496910131200e27 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.9499663517055961498221772800e28 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.542688404817578275080618393600e30 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.26683749763179936868716974899200e32 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.1131711820967712131858707476480000e34 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.41453713891626309548981869363200000e35 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.1311962921177096976231021638860800000e37 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.35865136913667946607505054169497600000e38 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.845982890976128215289905241719603200000e39 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.17187775833343188761019259122843648000000e41 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.300024057465278765392471648777322496000000e42 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.4484785642812692478442864041630695424000000e43 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.57171774822547482594715750971306835968000000e44 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.618408955209553371383385116228917395456000000e45 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.5641096323131047826765513011454026973184000000e46 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.43077462831182547040754826632921660522496000000e47 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.272964707286480257228835323010572221415424000000e48 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.1420148513205782792637695068865731082846208000000e49 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.5989311015434342040688693725378101920137216000000e49 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.20158738049167048314974462886529911886970880000000e50 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.53116205680869773932564677136501835279892480000000e50 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.106941809768161848685597663817397685054341120000000e51 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.159469537225522213983001129627299940128522240000000e51 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.168969595831313908259245857844137965786234880000000e51 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.120095080488310097454414488778895796050329600000000e51 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.52578940711299943164121766231556368420044800000000e50 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.12337319012110920324750930405684602417971200000000e50 * a * a * pow(x, 0.4e1) + 0.1183077160709451714801136340914368046694400000000e49 * a * x * x - 0.20397882081197443358640281739902897356800000000e47) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.20397882081197443358640281739902897356800000000e47;
return retval;
}

double PHO_deriv_39_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * sqrt(0.10e2) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.40e2) * pow(x, 0.80e2) - 0.1639e4 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.1276080e7 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.628456920e9 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.219954527520e12 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.58271155235280e14 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.12153595002756480e17 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.2049365860595726400e19 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.284713723212392073600e21 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.33046061856983496921600e23 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.3238217304533454046003200e25 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.270043237284254694637977600e27 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.19281691583838225266909184000e29 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.1184237714710959268125782016000e31 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.62775064610674207947910250496000e32 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.2878871418731348614076532277248000e34 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.114391904959837509417988005150720000e36 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.3941094787506132486153564985344000000e37 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.117729145845779045734908566470656000000e39 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.3047162143400904181108771260481536000000e40 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.68243090254554729760500112576413696000000e41 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.1319733309922760015852252177082580992000000e43 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.21977877336525514434891854437365841920000000e44 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.314079969480250771615404648553121710080000000e45 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.3835111490521225893550476563700854292480000000e46 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.39804420312146618221481788334832024551424000000e47 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.348963648481176263422585318270054460030976000000e48 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.2564939126745575186544290657685727629803520000000e49 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.15665555764228738021879729110168373800468480000000e50 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.78658456843237464630969100677079712535674880000000e50 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.320540595095846288909180715650277276615966720000000e51 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.1043643288914941557045628058060994323907870720000000e52 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.2662904268107711704832916952269031908940185600000000e52 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.5196907621230280340128467204369196865971814400000000e52 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.7518788521715891872469412571112560684066406400000000e52 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.7736274140112632546466461695070362026167500800000000e52 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.5343932337748485132498921331534547263055462400000000e52 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.2275621721448522110162174231373133733953536000000000e52 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.519738035428910856778154378732725824651264000000000e51 * a * a * pow(x, 0.4e1) - 0.48546959353249915193563870540968895709184000000000e50 * a * x * x + 0.815915283247897734345611269596115894272000000000e48) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.407957641623948867172805634798057947136000000000e48;
return retval;
}

double PHO_deriv_40_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * sqrt(0.41e2) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.41e2) * pow(x, 0.82e2) - 0.1721e4 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.1408760e7 * pow(a, 0.39e2) * pow(x, 0.78e2) - 0.730423200e9 * pow(a, 0.38e2) * pow(x, 0.76e2) + 0.269515927200e12 * pow(a, 0.37e2) * pow(x, 0.74e2) - 0.75388059907680e14 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.16627665126084480e17 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.2969902180349395200e19 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.437812044222427056000e21 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.54020936298513680496000e23 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.5638561143330638902579200e25 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.501912212719906628178739200e27 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.38339384169007483506008064000e29 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.2525140164989163548786319360000e31 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.143911851721095226900180008960000e33 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.7115318819223177952389450498048000e34 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.305719868364428338865166164410368000e36 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.11426160476207638882752548906188800000e38 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.371569489317010447966691401973760000000e39 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.10509365009343011567834959074754560000000e41 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.258267838149516510436993932542017536000000e42 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.5505676410536818681645509082374537216000000e43 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.101580140033451289536171985752305172480000000e45 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.1617276837914055194153550889265646796800000000e46 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.22138255994598053938075911816557120716800000000e47 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.259386179713042371449954563015899734605824000000e48 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.2587423068596771305868083326301790382587904000000e49 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.21833958845265297698976050503655643508899840000000e50 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.154684693329749616628697397072726537850060800000000e51 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.911787850080093854476825161437950096755916800000000e51 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.4423775239934566596567243439330730866712248320000000e52 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.17438861565101133496521966013956933404873195520000000e53 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.54983401403107138217105640216475580930772172800000000e53 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.135990465309325938361921868678154634263527424000000000e54 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.257498533699732861264057243396160099224387584000000000e54 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.361771791515949772574519999909234118203591884800000000e54 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.361771791515949772574519999909234118203591884800000000e54 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.243063270660697125464037990041796048203022336000000000e54 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.100747859316644999074105503550945730431549440000000000e54 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.22413192830819750762473941575805303615651840000000000e53 * a * a * pow(x, 0.4e1) + 0.2040604123402992233598373785259885851574272000000000e52 * a * x * x - 0.33452526613163807108170062053440751665152000000000e50) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.33452526613163807108170062053440751665152000000000e50;
return retval;
}

double PHO_deriv_41_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * sqrt(0.42e2) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.42e2) * pow(x, 0.84e2) - 0.1805e4 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.1551522e7 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.845811960e9 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.328581708000e12 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.96901939723680e14 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.22567106984385600e17 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.4262658764013336960e19 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.665637092651405347200e21 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.87153115317015711600000e23 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.9670873445100864816019200e25 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.916975667338520452895232000e27 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.74768617737076559088535142400e29 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.5268374124275790258353086464000e31 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.321991955487961402167517593600000e33 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.17116532367730483858525813506048000e35 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.792898190563985649328769302118400000e36 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.32044942757877324230826702390214656000e38 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.1130480237261525907549819175730380800000e40 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.34808095948069570347527992945459200000000e41 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.934774427766372677562652098992603136000000e42 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.21866807204293027997891626981413027840000000e44 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.444737217293467430972503551837354196992000000e45 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.7844845067525433201598123889773286522880000000e46 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.119638494667233994989133486885931679744000000000e48 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.1571454545466183578669951012039075684941824000000e49 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.17696136023295022400589320033311782398853120000000e50 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.169910746352282433369984849814437456016048128000000e51 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.1382003842196837619611018834145285157567856640000000e52 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.9449459431175826426012988958078886469435392000000000e52 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.53821770795352137168847453377393566415134392320000000e53 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.252609336546440173808925133668305202764473958400000000e54 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.964324931792519988951645266189982849488167895040000000e54 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.2947233487191972856258864688227696944087878860800000000e55 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.7072489908964246947704634681324155846629785600000000000e55 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.13004676829529335310610122109413278565987568844800000000e56 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.17757390048353309259467636615263111294922784768000000000e56 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.17271814358636811772563275168867999189560826265600000000e56 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.11295429599831131871012716387685563723872731136000000000e56 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.4560415690539556004021283709435310470751846400000000000e55 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.988890139211735301924615204361762059973558272000000000e54 * a * a * pow(x, 0.4e1) - 0.87812882359554993658946412890281973121024000000000000e53 * a * x * x + 0.1405006117752879898543142606244511569936384000000000e52) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.1405006117752879898543142606244511569936384000000000e52;
return retval;
}

double PHO_deriv_42_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * sqrt(0.43e2) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.43e2) * pow(x, 0.86e2) - 0.1891e4 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.1704864e7 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.976000326e9 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.398672549520e12 * pow(a, 0.39e2) * pow(x, 0.78e2) - 0.123789101698080e15 * pow(a, 0.38e2) * pow(x, 0.76e2) + 0.30395760830023680e17 * pow(a, 0.37e2) * pow(x, 0.74e2) - 0.6062442920018896320e19 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.1001181363007483082880e22 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.138861883357175744438400e24 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.16351197626808952595251200e26 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.1648277367021218088566611200e28 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.143164662735557228264071372800e30 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.10768321254278216135566054195200e32 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.704114822483539704266048667648000e33 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.40140357150143584815251875872768000e35 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.1999240211820618726128324833886208000e37 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.87114024055034861728594878462246912000e38 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.3323266873994692367078623835136196608000e40 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.111007956151175419881118840948435353600000e42 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.3245405693877604045642638354573459456000000e43 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.82963557427634837085585423061800124416000000e44 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.1851613951575828093852238690856881618944000000e46 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.36004582972795467072236839706791115882496000000e47 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.608353298505854443634346601942332647669760000000e48 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.8902668057709078432589438145019923299303424000000e49 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.112390576482775480114074276614829868931088384000000e51 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.1218242372610172158626843488460417400568283136000000e52 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.11274690249593515676155373516098966788897767424000000e53 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.88507651828627797651980312949732459318796615680000000e53 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.584773676782104116931828061962837485737130065920000000e54 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.3222074055063517357608051849476687996171656888320000000e55 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.14644689972074407839654641676756826268314034503680000000e56 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.54192101601731564494205886020441158956019215237120000000e56 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.160698576868954196082737840898649045091177044377600000000e57 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.374485076453545046228523004237030364007117933772800000000e57 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.669244694351762661325936163494063259215119305932800000000e57 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.888846300026048649778433627626252708865065038643200000000e57 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.841528226893938381515095458257802705545187871948800000000e57 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.536069663766571324763221866438263742715083620352000000000e57 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.210960029406790871739704561994572793629116465152000000000e57 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.44616671772301577618186765032597587159114842112000000000e56 * a * a * pow(x, 0.4e1) + 0.3866576836055925480790728452384895840464928768000000000e55 * a * x * x - 0.60415263063373835637355132068513997507264512000000000e53) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.60415263063373835637355132068513997507264512000000000e53;
return retval;
}

double PHO_deriv_43_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * sqrt(0.11e2) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.44e2) * pow(x, 0.88e2) - 0.1979e4 * pow(a, 0.43e2) * pow(x, 0.86e2) + 0.1869296e7 * pow(a, 0.42e2) * pow(x, 0.84e2) - 0.1122468732e10 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.481506624984e12 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.157210442059440e15 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.40644729327121920e17 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.8547525646241662080e19 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.1490558334302681804160e22 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.218645303221522612955520e24 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.27273670051139692762982400e26 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.2917557331906757240193292800e28 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.269416566400809783967198387200e30 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.21586917724567246682395411046400e32 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.1506782863881949370385038494924800e34 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.91901930167598044277800470085632000e35 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.4908898398140204937727470408548352000e37 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.229983933373110764240278688351797248000e39 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.9459398305125132983110504631723360256000e40 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.341691000219625870530080304892245245952000e42 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.10837450809930690828733553833364294860800000e44 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.301606452015973475324067619340825493504000000e45 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.7356140209793099655467317842480328605696000000e46 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.156967050653085111765927620432925835395072000000e48 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.2923741197795266241004635284245821194502144000000e49 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.47404590189894188540049513967643784666415104000000e50 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.666759084044745055502848003441579567922282496000000e51 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.8102350035102016985811448974336863369092399104000000e52 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.84654152576410179524932364103914237420548128768000000e53 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.756156547727842373955144904229773442128508092416000000e54 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.5735902170648426787508737464921196259868577628160000000e55 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.36661460737665975157078695642726606560611616686080000000e56 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.195620733460131818864402490562723495114509826129920000000e57 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.861877122734388306544836077667564185588196012195840000000e57 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.3094495638924339715001938684087463568299230998036480000000e58 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.8911160291701331946286789449149231946853368043929600000000e58 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.20182892846105003480993920474232035270356634907443200000000e59 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.35083207763784230801955292773131645946480523267276800000000e59 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.45355222854584696001011717972190519628286647703961600000000e59 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.41827305118191913964193642320507502745604190319411200000000e59 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.25971202524367528278420889022537338306094105100288000000000e59 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.9968407644141066694798261640229350646369881161728000000000e58 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.2057502198886259346465766377725312699107400220672000000000e58 * a * a * pow(x, 0.4e1) - 0.174116788148643394306857490621457340815936323584000000000e57 * a * x * x + 0.2658271574788448768043625811014615890319638528000000000e55) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.1329135787394224384021812905507307945159819264000000000e55;
return retval;
}

double PHO_deriv_44_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * sqrt(0.5e1) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.45e2) * pow(x, 0.90e2) - 0.2069e4 * pow(a, 0.44e2) * pow(x, 0.88e2) + 0.2045340e7 * pow(a, 0.43e2) * pow(x, 0.86e2) - 0.1286805960e10 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.579019601160e12 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.198540577924920e15 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.53975853155568960e17 * pow(a, 0.39e2) * pow(x, 0.78e2) - 0.11952023514169939200e20 * pow(a, 0.38e2) * pow(x, 0.76e2) + 0.2197679062907452924800e22 * pow(a, 0.37e2) * pow(x, 0.74e2) - 0.340416761964596818300800e24 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.44910367021899478888588800e26 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.5089440918798312242079513600e28 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.498746930880391814610557568000e30 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.42486951885424837047798532992000e32 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.3159213140149927433933967839232000e34 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.205696131541373290170163831308288000e36 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.11755199452334944714866862692876288000e38 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.590645596193314313098928521198878720000e39 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.26121061054783946410400901765136711680000e41 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.1017318242208509010008549065055877857280000e43 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.34893003746949194054810485983838731632640000e44 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.1053506045550531911175822158083479925555200000e46 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.27973557479376253325378435337692937584640000000e47 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.652316550956652807683351861619946786652160000000e48 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.13333545022912477912273886186395777974927360000000e50 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.238322391481824394362916296631217066085187584000000e51 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.3713947132413589204461012333022224323970072576000000e52 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.50283043193987905489378890075494581832421212160000000e53 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.588981724545493999389973058535299430725493719040000000e54 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.5939312304304234201924833163929967236302336163840000000e55 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.51264625650170314413359341092733191572575412551680000000e56 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.376195003116882571939887571691256307387832142397440000000e57 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.2328533430586520112497624661792757001826285178060800000000e58 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.12044180304877990437613734931508268747322226324275200000000e59 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.51487300011714438704704586600532919322066088571699200000000e59 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.179521520578512925699366976849748103194224805229363200000000e60 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.502447806116192981395269704437460667519930963748454400000000e60 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.1106901043643781520924211385325769729514367082299392000000000e61 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.1872897508788667344060967623673064541206980746805248000000000e61 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.2358497624731661703359154117400044902714320311287808000000000e61 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.2120070269226001913675305203892390090144839842660352000000000e61 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.1283924236734169295931022923166797734924249141870592000000000e61 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.480941138989663122236372890793291843416354801582080000000000e60 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.96933872974660784326710815198647968440505618923520000000000e59 * a * a * pow(x, 0.4e1) + 0.8014688797987173035651531820209066909313710161920000000000e58 * a * x * x - 0.119622220865480194561963161495657715064383733760000000000e57) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.39874073621826731520654387165219238354794577920000000000e56;
return retval;
}

double PHO_deriv_45_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * sqrt(0.46e2) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.46e2) * pow(x, 0.92e2) - 0.2161e4 * pow(a, 0.45e2) * pow(x, 0.90e2) + 0.2233530e7 * pow(a, 0.44e2) * pow(x, 0.88e2) - 0.1470714300e10 * pow(a, 0.43e2) * pow(x, 0.86e2) + 0.693386119800e12 * pow(a, 0.42e2) * pow(x, 0.84e2) - 0.249400712511720e15 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.71209563662880720e17 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.16581368441893147200e20 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.3210413461080409584000e22 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.524364471525121731504000e24 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.73052512909198953415084800e26 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.8755905044753689495709836800e28 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.909009661897530263226828672000e30 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.82178506702466859776899167360000e32 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.6496796766061570051343723823360000e34 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.450627869605611794373080686891008000e36 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.27491789678386348458779396453941248000e38 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.1477923385065255123660985213541007360000e40 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.70098124462313782346839147403597414400000e41 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.2935465849355169322186751366840092262400000e43 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.108557797470356443901830934667668389232640000e45 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.3544490420826749225675526432929739557437440000e46 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.102107012360565616725061979831928237686784000000e48 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.2592228084958340448443170644124042267852800000000e49 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.57905263982308844383533361149024380800204800000000e50 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.1135793132783081943799503977289824451064233984000000e52 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.19512495146284840924892674654340067064662196224000000e53 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.292702017066521966977117421052318248430726021120000000e54 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.3819920352325629617882009928218421084843619123200000000e55 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.43185307457444011811870532240387736213223060275200000000e56 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.420816466097806432738169749592102267699540137082880000000e57 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.3513852988423460533598573397033669853124691367034880000000e58 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.24971469821976882309961551993074414818001033153740800000000e59 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.149832808621879184398563042834304145788469212348416000000000e60 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.751965040189603191434178626133940427079173428740096000000000e60 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.3121733423873748301571052489044315254388439035097907200000000e61 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.10579022623913669982485181789625096803025354054906675200000000e62 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.28799954543536278402477448583390462334682655084249088000000000e62 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.61759244129664641613064735098516349507771725344931840000000000e62 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.101789609137643116196206115786969736536057448329379840000000000e63 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.124942378267546963842706664432430247592152886654533632000000000e63 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.109542831601466181909138097164480334252958624086228992000000000e63 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.64743164504579062072819962387085199038725174318858240000000000e62 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.23681910120291277817918251989199096995583708731801600000000000e62 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.4663472280440745384998133850908216021784999860633600000000000e61 * a * a * pow(x, 0.4e1) - 0.376929617947128093064745921872817460167873145077760000000000e60 * a * x * x + 0.5502622159812088949850305428800254892961651752960000000000e58) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.5502622159812088949850305428800254892961651752960000000000e58;
return retval;
}

double PHO_deriv_46_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * sqrt(0.47e2) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.47e2) * pow(x, 0.94e2) - 0.2255e4 * pow(a, 0.46e2) * pow(x, 0.92e2) + 0.2434412e7 * pow(a, 0.45e2) * pow(x, 0.90e2) - 0.1676014830e10 * pow(a, 0.44e2) * pow(x, 0.88e2) + 0.827042832000e12 * pow(a, 0.43e2) * pow(x, 0.86e2) - 0.311695607151720e15 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.93357794088266400e17 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.22831531658553950640e20 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.4648652952463889107200e22 * pow(a, 0.39e2) * pow(x, 0.78e2) - 0.799517410163725453200000e24 * pow(a, 0.38e2) * pow(x, 0.76e2) + 0.117453408405326632563724800e27 * pow(a, 0.37e2) * pow(x, 0.74e2) - 0.14866453697301127462308768000e29 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.1632399284855127828217315737600e31 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.156344325737206484543881767552000e33 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.13117341368751727572416721369600000e35 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.967364446568504830450709422526208000e36 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.62871544533255853086899873842176000000e38 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.3608205337415851438757546924493520896000e40 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.183106790432562425326272665990311772160000e42 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.8223793452289529326418203955130421248000000e43 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.327014481417648695013818877864546549104640000e45 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.11512460245597610847092093469649499740569600000e47 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.358649031999741408153647060330820869153095680000e48 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.9878336217276222340830221502953257598091264000000e49 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.240237476042618030292338913216002790457344000000000e51 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.5149730536449560097346576943698235816243625984000000e52 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.97087831186169275730477794060931603319588126720000000e53 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.1605554163577861782153846490561220391942876561408000000e55 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.23215871599082637950201002299667155372690710200320000000e56 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.292428180257372901654401211968961521830392496128000000000e57 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.3194679704374963436702753141414130592977342305402880000000e58 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.30115989305658644044680749532500179134054891887001600000000e59 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.243532540547380170220769736760109556673222260880834560000000e60 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.1677700559733132577612976876027437146621312741723340800000000e61 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.9767347882916316987464026875405463502936721693081600000000000e61 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.47604277699900871484720128076748882665403956673590067200000000e62 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.192079335821132517338928935789791805905024694240673792000000000e63 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.633147999867158774214841090034121165613285791116977766400000000e63 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.1677825293660909681150821994951869177967681921989214208000000000e64 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.3504741163814234413544488915184607367770688364897894400000000000e64 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.5630473967662378225188207498027189632467522205811474432000000000e64 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.6740826210541663401660480422236596749161742081615462400000000000e64 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.5767802601019997206290358900418096696674047137660534784000000000e64 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.3328836725205812341123335326815322398676031175592509440000000000e64 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.1189666910951373630957636033706615107858309108989952000000000000e64 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.229010880358139423959344936488523408262724503480565760000000000e63 * a * a * pow(x, 0.4e1) + 0.18103626905781772645007504860752838597843834267238400000000000e62 * a * x * x - 0.258623241511168180642964355153611979969197632389120000000000e60) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.258623241511168180642964355153611979969197632389120000000000e60;
return retval;
}

double PHO_deriv_47_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * sqrt(0.3e1) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.48e2) * pow(x, 0.96e2) - 0.2351e4 * pow(a, 0.47e2) * pow(x, 0.94e2) + 0.2648544e7 * pow(a, 0.46e2) * pow(x, 0.92e2) - 0.1904652816e10 * pow(a, 0.45e2) * pow(x, 0.90e2) + 0.982713058560e12 * pow(a, 0.44e2) * pow(x, 0.88e2) - 0.387655060684320e15 * pow(a, 0.43e2) * pow(x, 0.86e2) + 0.121662717094321920e18 * pow(a, 0.42e2) * pow(x, 0.84e2) - 0.31212790702418666880e20 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.6674793625104461176320e22 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.1207258564932209566022400e25 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.186756680300953063433932800e27 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.24926588723543264720663500800e29 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.2890456391365099397711577907200e31 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.292807340953533164865253167820800e33 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.26026723059378641919584848687104000e35 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.2037013591134355656212702475491328000e37 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.140763672615002286347651826635010048000e39 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.8606241641631558735753739295451144192000e40 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.466252770637016499897121630442331045888000e42 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.22405471236754356423349613946224785489920000e44 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.955546646737963793379940943948688591421440000e45 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.36171748371291813842433707085172385961738240000e47 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.1215023843392923025612378588443392912664821760000e49 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.36191274171090207390730356788150039717231984640000e50 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.954909647629972010693433988760294520240734208000000e51 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.22285526506175157600912979710662549141293891584000000e53 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.459166616592600761765619460275241162156837699584000000e54 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.8333003488846333076789397028142811401205628010496000000e55 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.132835160975620658880280517505921636828091194015744000000e57 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.1853884805118498912266969168270759789845250561802240000000e58 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.22565618355883144933430904661042894807964161702625280000000e59 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.238491093386151281303243953327127166174227471196487680000000e60 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.2177281376643231575319838219483240749997494361412075520000000e61 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.17067692018220819698317724136737737182620007825439457280000000e62 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.114086682430024313869990208565255462738094337623169433600000000e63 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.645028550662060543803406179195867423942302601177150259200000000e63 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.3055538972908477275822346455486841958550700520690103091200000000e64 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.11992239721989383018345751030302934087321683646774824140800000000e65 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.38478928203639757216010289004871994109600784793270956851200000000e65 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.99326748760157861942717172651512170494708227096828706816000000000e65 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.202239300724653552836434965254342469888142382969716211712000000000e66 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.316897544648724132220869422722100201259598300662718267392000000000e66 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.370264791363039820657468893314644646479172977227378720768000000000e66 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.309374069859815664104164208201438965413661142101946007552000000000e66 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.174452755821909429243627747982738039416342447742286561280000000000e66 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.60946635848038871113959694006789891975581175653555240960000000000e65 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.11474595979367509838767042509455456327273360553840476160000000000e65 * a * a * pow(x, 0.4e1) - 0.887594964866329195966653666887196315254286274359459840000000000e63 * a * x * x + 0.12413915592536072670862289047373375038521486354677760000000000e62) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.3103478898134018167715572261843343759630371588669440000000000e61;
return retval;
}

double PHO_deriv_48_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.49e2) * pow(x, 0.98e2) - 0.2449e4 * pow(a, 0.48e2) * pow(x, 0.96e2) + 0.2876496e7 * pow(a, 0.47e2) * pow(x, 0.94e2) - 0.2158703232e10 * pow(a, 0.46e2) * pow(x, 0.92e2) + 0.1163433151104e13 * pow(a, 0.45e2) * pow(x, 0.90e2) - 0.479880325411200e15 * pow(a, 0.44e2) * pow(x, 0.88e2) + 0.157642171063534080e18 * pow(a, 0.43e2) * pow(x, 0.86e2) - 0.42378969662264632320e20 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.9507283227570758192640e22 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.1806099577612473095124480e25 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.293824726556288362541568000e27 * pow(a, 0.39e2) * pow(x, 0.78e2) - 0.41297321064346968290929459200e29 * pow(a, 0.38e2) * pow(x, 0.76e2) + 0.5049852023716804399545767116800e31 * pow(a, 0.37e2) * pow(x, 0.74e2) - 0.540239833455661863850878513561600e33 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.50791544394666198170341341074227200e35 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.4211597004153998419714639151185920000e37 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.308873318940042368373487718378237952000e39 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.20079018225680256532195560310580932608000e41 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.1158890440168461463549407060739153330176000e43 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.59453254257459540262808180895306693476352000e44 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.2712963840159086010316988915196319078809600000e46 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.110146331910458892018869749956970554599669760000e48 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.3978386422263480056739841573675463541302231040000e49 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.127774672028376260844838563431622528415857377280000e51 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.3645968120718079411806040309850428466346181263360000e52 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.92316535393848915736497658859339824294624493568000000e53 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.2070847634841154602948959074602345816210712559616000000e55 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.41072459942336175697621769785787124861865782411264000000e56 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.718517461640857200306971890145667035570129640357888000000e57 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.11055091759126222765777828586225581740848210232999936000000e59 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.149096016888153532639763132579922388922564426386636800000000e60 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.1755702565570344054905947464648734362126231087161016320000000e61 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.17970158151614595215438031626290097350026567565474529280000000e62 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.159036930697656594223991994544488326808962652210525634560000000e63 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.1209662238487980208234213907071670212436724008584394833920000000e64 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.7852521486320737054997988268471429508862814275200090112000000000e64 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.43151475215305383626036564103885855491560417493242399948800000000e65 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.198831503508586158259255367814106304302791223440336696115200000000e66 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.759623663143859908772931992873912726327056902522826810982400000000e66 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.2374245056940542715323625029875673390529498237308691598540800000000e67 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.5973948138426823032367032838896002745277397340913957601280000000000e67 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.11863901023257400920233065789956738880936834145327259844608000000000e68 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.18142974776788951212215975772417587677479475884141557317632000000000e68 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.20700385079924365787454772547172226282230972959409731272704000000000e68 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.16899104262040811095884647925743231772076926495527805124608000000000e68 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.9315329846131445805124481671129537617552131985213122150400000000000e67 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.3182936233869977390190871486605898275460268115663614115840000000000e67 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.586383716929033928680851085441728743319600929449558671360000000000e66 * a * a * pow(x, 0.4e1) + 0.44404576074501531943674407922454562512791356690682347520000000000e65 * a * x * x - 0.608281864034267560872252163321295376887552831379210240000000000e63) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.86897409147752508696036023331613625269650404482744320000000000e62;
return retval;
}

double PHO_deriv_49_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = pow(a, 0.3e1 / 0.2e1) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.50e2) * pow(x, 0.100e3) - 0.2549e4 * pow(a, 0.49e2) * pow(x, 0.98e2) + 0.3118850e7 * pow(a, 0.48e2) * pow(x, 0.96e2) - 0.2440376400e10 * pow(a, 0.47e2) * pow(x, 0.94e2) + 0.1372580630400e13 * pow(a, 0.46e2) * pow(x, 0.92e2) - 0.591395918736000e15 * pow(a, 0.45e2) * pow(x, 0.90e2) + 0.203142741464275200e18 * pow(a, 0.44e2) * pow(x, 0.88e2) - 0.57163245418585152000e20 * pow(a, 0.43e2) * pow(x, 0.86e2) + 0.13438025329131361728000e23 * pow(a, 0.42e2) * pow(x, 0.84e2) - 0.2678123852460505487808000e25 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.457624006526756849028480000e27 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.67642771333570594193539584000e29 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.8710294778803709531434874880000e31 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.982655923935912756839357368320000e33 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.97567645502875889878723982315520000e35 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.8557271066492674691742291159244800000e37 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.664899961866480823548376023073320960000e39 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.45873459879951142085005001382656716800000e41 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.2815181801053843772163991137483038515200000e43 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.153864122769358500076463027605513597747200000e45 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.7495692120659840314369126205505696694272000000e46 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.325621830668850298945607376870270394800537600000e48 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.12614319386197786635863908171347071275106304000000e50 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.435640263844409490179673770621773938510790656000000e51 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.13403536489910552453667637175176905131390140416000000e53 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.367028754521593212933409554137290997959555547136000000e54 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.8932621895759294558924798759133549742548144095232000000e55 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.192888704757235567316519133646178039620303218278400000000e57 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.3687810501214118274070310270859241992608837900697600000000e58 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.62269084277090514975893253562826823721569551489433600000000e59 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.925838169386114678488851710375324511857859744497664000000000e60 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.12079880302735194802148384251618456944744837463985356800000000e62 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.137761190016324826185293523045714891699155057202167808000000000e63 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.1366893675800009835604990911316334926251702096821747712000000000e64 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.11737883680073185077002201213808855567935560921783468032000000000e65 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.86704924744791471648936120464372034160360240955334328320000000000e65 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.547058996880344681498193182703509589117442727838939611136000000000e66 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.2924179960694303298813890496191590439178778631219781304320000000000e67 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.13115870418647838576247730419345728924710876336634703380480000000000e68 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.48810960798512209385023199282122079795759463835070921441280000000000e68 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.148709778526079471741542983235619747482707404395478463283200000000000e69 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.364959376875685152856844512644233418790038531095347530301440000000000e69 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.707360028499807324047706198269852376711253375244804764467200000000000e69 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.1056331006522346744166395267148233302484477790264388013260800000000000e70 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.1177567284666851590306618300662198608242325390366058794188800000000000e70 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.939752393300907620928734474469832765535406256155323793408000000000000e69 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.506649116388315413022448151453301143158219025057652827750400000000000e69 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.169396361102476277910241023282258740873568670991920398336000000000000e69 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.30550956621121088244808864902812060304177340956020834304000000000000e68 * a * a * pow(x, 0.4e1) - 0.2265849943527646664249139308371825278906134296887558144000000000000e67 * a * x * x + 0.30414093201713378043612608166064768844377641568960512000000000000e65) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.3041409320171337804361260816606476884437764156896051200000000000e64;
return retval;
}

double PHO_deriv_50_1( const double a, const double x )
{
if ( x <= 0 ) return 0;
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.2e1) * sqrt(0.51e2) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.51e2) * pow(x, 0.102e3) - 0.2651e4 * pow(a, 0.50e2) * pow(x, 0.100e3) + 0.3376200e7 * pow(a, 0.49e2) * pow(x, 0.98e2) - 0.2752023750e10 * pow(a, 0.48e2) * pow(x, 0.96e2) + 0.1613904180000e13 * pow(a, 0.47e2) * pow(x, 0.94e2) - 0.725707320912000e15 * pow(a, 0.46e2) * pow(x, 0.92e2) + 0.260401577208192000e18 * pow(a, 0.45e2) * pow(x, 0.90e2) - 0.76621798947627360000e20 * pow(a, 0.44e2) * pow(x, 0.88e2) + 0.18854614245072513600000e23 * pow(a, 0.43e2) * pow(x, 0.86e2) - 0.3937622506438350945600000e25 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.705879254040987667576320000e27 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.109592883833915214896929920000e30 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.14841587065552263555144883200000e32 * pow(a, 0.39e2) * pow(x, 0.78e2) - 0.1763237353290252172604054784000000e34 * pow(a, 0.38e2) * pow(x, 0.76e2) + 0.184621633180111430177402271744000000e36 * pow(a, 0.37e2) * pow(x, 0.74e2) - 0.17100864425671862109202518208819200000e38 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.1405462762420885586871157272170803200000e40 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.102734869870782095861692188918194688000000e42 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.6691316704293625236459376141530378240000000e43 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.388859716291828817543165565440317424640000000e45 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.20182277556311514904958807271069492609024000000e47 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.936015215080536272080373244805124988862464000000e48 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.38798390634718565297876973625794276706222080000000e50 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.1437129301424505400506011331954481931236147200000000e52 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.47546437999743010042741980185501131364184883200000000e53 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.1403867671446284884501316442004319069673473703936000000e55 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.36950739026641436190386894333406231378993176641536000000e56 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.865695311260130138817178335808238096269540432281600000000e57 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.18020045034922254282488178418651535144099638149120000000000e59 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.332535894191663586042300861997530411293147261829120000000000e60 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.5426045658598197478180235997996588992753737628909568000000000e61 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.78050058226811257074835836123634761707853061803737088000000000e62 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.986241643501708773238648567931263022349231400408842240000000000e63 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.10903290182067696165165716075442899998028860434048614400000000000e65 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.104972943480329297436605051505607651420561926942778982400000000000e66 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.875433450076538420115791348367869524152127810211760046080000000000e66 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.6285289073009223284437973109889006702718944259441405460480000000000e67 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.38574627508590449528504757235051880409415955440628190412800000000000e68 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.200714023595586520826826246367230607176039700869232459776000000000000e69 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.876960775279392100102639841329671477380080746016398114816000000000000e69 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.3181250812392829273475783148547635842082223947618106264780800000000000e70 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.9453474893953763183713671467023267670206872109202168138956800000000000e70 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.22642720505159226810483826906449727478441647482390951493632000000000000e71 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.42855369026499510831596118021399586341582282200722660392960000000000000e71 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.62529151592157329966898083217457021257818685950743082434560000000000000e71 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.68141637824451526064485583424312567672393845471833988530176000000000000e71 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.53186483277999194049084649263162212171171564012964660903936000000000000e71 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.28058445648007672630689702632082637335458482285340597944320000000000000e71 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.9183915618422375917494372193345332762170383592267238604800000000000000e70 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.1622211696146387301401187488057479608236992457184431308800000000000000e70 * a * a * pow(x, 0.4e1) + 0.117885025249841053297042469251667044040807738721290944512000000000000e69 * a * x * x - 0.1551118753287382280224243016469303211063259720016986112000000000000e67) * pow(a * x * x, -0.1e1 / 0.2e1) / 0.1551118753287382280224243016469303211063259720016986112000000000000e67;
return retval;
}

TEF EF_PHO[] = {&PHO_0_0, &PHO_1_0, &PHO_2_0, &PHO_3_0, &PHO_4_0, &PHO_5_0, &PHO_6_0, &PHO_7_0, &PHO_8_0, &PHO_9_0, &PHO_10_0, &PHO_11_0, &PHO_12_0, &PHO_13_0, &PHO_14_0, &PHO_15_0, &PHO_16_0, &PHO_17_0, &PHO_18_0, &PHO_19_0, &PHO_20_0, &PHO_21_0, &PHO_22_0, &PHO_23_0, &PHO_24_0, &PHO_25_0, &PHO_26_0, &PHO_27_0, &PHO_28_0, &PHO_29_0, &PHO_30_0, &PHO_31_0, &PHO_32_0, &PHO_33_0, &PHO_34_0, &PHO_35_0, &PHO_36_0, &PHO_37_0, &PHO_38_0, &PHO_39_0, &PHO_40_0, &PHO_41_0, &PHO_42_0, &PHO_43_0, &PHO_44_0, &PHO_45_0, &PHO_46_0, &PHO_47_0, &PHO_48_0, &PHO_49_0, &PHO_50_0, &PHO_0_1, &PHO_1_1, &PHO_2_1, &PHO_3_1, &PHO_4_1, &PHO_5_1, &PHO_6_1, &PHO_7_1, &PHO_8_1, &PHO_9_1, &PHO_10_1, &PHO_11_1, &PHO_12_1, &PHO_13_1, &PHO_14_1, &PHO_15_1, &PHO_16_1, &PHO_17_1, &PHO_18_1, &PHO_19_1, &PHO_20_1, &PHO_21_1, &PHO_22_1, &PHO_23_1, &PHO_24_1, &PHO_25_1, &PHO_26_1, &PHO_27_1, &PHO_28_1, &PHO_29_1, &PHO_30_1, &PHO_31_1, &PHO_32_1, &PHO_33_1, &PHO_34_1, &PHO_35_1, &PHO_36_1, &PHO_37_1, &PHO_38_1, &PHO_39_1, &PHO_40_1, &PHO_41_1, &PHO_42_1, &PHO_43_1, &PHO_44_1, &PHO_45_1, &PHO_46_1, &PHO_47_1, &PHO_48_1, &PHO_49_1, &PHO_50_1, &PHO_50_1};

TEF EF_PHO_DERIV[] = {&PHO_deriv_0_0, &PHO_deriv_1_0, &PHO_deriv_2_0, &PHO_deriv_3_0, &PHO_deriv_4_0, &PHO_deriv_5_0, &PHO_deriv_6_0, &PHO_deriv_7_0, &PHO_deriv_8_0, &PHO_deriv_9_0, &PHO_deriv_10_0, &PHO_deriv_11_0, &PHO_deriv_12_0, &PHO_deriv_13_0, &PHO_deriv_14_0, &PHO_deriv_15_0, &PHO_deriv_16_0, &PHO_deriv_17_0, &PHO_deriv_18_0, &PHO_deriv_19_0, &PHO_deriv_20_0, &PHO_deriv_21_0, &PHO_deriv_22_0, &PHO_deriv_23_0, &PHO_deriv_24_0, &PHO_deriv_25_0, &PHO_deriv_26_0, &PHO_deriv_27_0, &PHO_deriv_28_0, &PHO_deriv_29_0, &PHO_deriv_30_0, &PHO_deriv_31_0, &PHO_deriv_32_0, &PHO_deriv_33_0, &PHO_deriv_34_0, &PHO_deriv_35_0, &PHO_deriv_36_0, &PHO_deriv_37_0, &PHO_deriv_38_0, &PHO_deriv_39_0, &PHO_deriv_40_0, &PHO_deriv_41_0, &PHO_deriv_42_0, &PHO_deriv_43_0, &PHO_deriv_44_0, &PHO_deriv_45_0, &PHO_deriv_46_0, &PHO_deriv_47_0, &PHO_deriv_48_0, &PHO_deriv_49_0, &PHO_deriv_50_0, &PHO_deriv_0_1, &PHO_deriv_1_1, &PHO_deriv_2_1, &PHO_deriv_3_1, &PHO_deriv_4_1, &PHO_deriv_5_1, &PHO_deriv_6_1, &PHO_deriv_7_1, &PHO_deriv_8_1, &PHO_deriv_9_1, &PHO_deriv_10_1, &PHO_deriv_11_1, &PHO_deriv_12_1, &PHO_deriv_13_1, &PHO_deriv_14_1, &PHO_deriv_15_1, &PHO_deriv_16_1, &PHO_deriv_17_1, &PHO_deriv_18_1, &PHO_deriv_19_1, &PHO_deriv_20_1, &PHO_deriv_21_1, &PHO_deriv_22_1, &PHO_deriv_23_1, &PHO_deriv_24_1, &PHO_deriv_25_1, &PHO_deriv_26_1, &PHO_deriv_27_1, &PHO_deriv_28_1, &PHO_deriv_29_1, &PHO_deriv_30_1, &PHO_deriv_31_1, &PHO_deriv_32_1, &PHO_deriv_33_1, &PHO_deriv_34_1, &PHO_deriv_35_1, &PHO_deriv_36_1, &PHO_deriv_37_1, &PHO_deriv_38_1, &PHO_deriv_39_1, &PHO_deriv_40_1, &PHO_deriv_41_1, &PHO_deriv_42_1, &PHO_deriv_43_1, &PHO_deriv_44_1, &PHO_deriv_45_1, &PHO_deriv_46_1, &PHO_deriv_47_1, &PHO_deriv_48_1, &PHO_deriv_49_1, &PHO_deriv_50_1, &PHO_deriv_50_1};
#endif
