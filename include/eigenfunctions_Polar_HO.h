/* * atus-pro testing - atus-pro testing playgroung
 * Copyright (C) 2017 Želimir Marojević <zelimir.marojevic@gmail.com>
 *
 * This file is part of atus-pro testing.
 *
 * atus-pro testing is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * atus-pro testing is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with atus-pro testing.  If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

#include "math.h"

#include <iostream>

typedef double (*TEF)(const double, const double);

inline double PHO_0_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1);
  return retval;
}

inline double PHO_1_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (-a * x * x + 0.1e1);
  return retval;
}

inline double PHO_2_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.2e1 * a * x * x + a * a * pow(x, 0.4e1) / 0.2e1);
  return retval;
}

inline double PHO_3_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.3e1 * a * x * x + 0.3e1 / 0.2e1 * a * a * pow(x, 0.4e1) - pow(a, 0.3e1) * pow(x, 0.6e1) / 0.6e1);
  return retval;
}

inline double PHO_4_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.4e1 * a * x * x + 0.3e1 * a * a * pow(x, 0.4e1) - 0.2e1 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + pow(a, 0.4e1) * pow(x, 0.8e1) / 0.24e2);
  return retval;
}

inline double PHO_5_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.5e1 * a * x * x + 0.5e1 * a * a * pow(x, 0.4e1) - 0.5e1 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.5e1 / 0.24e2 * pow(a, 0.4e1) * pow(x, 0.8e1) - pow(a, 0.5e1) * pow(x, 0.10e2) / 0.120e3);
  return retval;
}

inline double PHO_6_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (pow(a, 0.6e1) * pow(x, 0.12e2) - 0.36e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.450e3 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.2400e4 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.5400e4 * a * a * pow(x, 0.4e1) - 0.4320e4 * a * x * x + 0.720e3) / 0.720e3;
  return retval;
}

inline double PHO_7_0(const double a, const double x)
{
  double retval = -sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (pow(a, 0.7e1) * pow(x, 0.14e2) - 0.49e2 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.882e3 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.7350e4 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.29400e5 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.52920e5 * a * a * pow(x, 0.4e1) + 0.35280e5 * a * x * x - 0.5040e4) / 0.5040e4;
  return retval;
}

inline double PHO_8_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.8e1 * a * x * x + 0.14e2 * a * a * pow(x, 0.4e1) - 0.28e2 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.35e2 / 0.12e2 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.7e1 / 0.15e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.7e1 / 0.180e3 * pow(a, 0.6e1) * pow(x, 0.12e2) - pow(a, 0.7e1) * pow(x, 0.14e2) / 0.630e3 + pow(a, 0.8e1) * pow(x, 0.16e2) / 0.40320e5);
  return retval;
}

inline double PHO_9_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.9e1 * a * x * x + 0.18e2 * a * a * pow(x, 0.4e1) - 0.14e2 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.21e2 / 0.4e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.21e2 / 0.20e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.7e1 / 0.60e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - pow(a, 0.7e1) * pow(x, 0.14e2) / 0.140e3 + pow(a, 0.8e1) * pow(x, 0.16e2) / 0.4480e4 - pow(a, 0.9e1) * pow(x, 0.18e2) / 0.362880e6);
  return retval;
}

inline double PHO_10_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.10e2 * a * x * x + 0.45e2 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.20e2 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.35e2 / 0.4e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.21e2 / 0.10e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.7e1 / 0.24e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - pow(a, 0.7e1) * pow(x, 0.14e2) / 0.42e2 + pow(a, 0.8e1) * pow(x, 0.16e2) / 0.896e3 - pow(a, 0.9e1) * pow(x, 0.18e2) / 0.36288e5 + pow(a, 0.10e2) * pow(x, 0.20e2) / 0.3628800e7);
  return retval;
}

inline double PHO_11_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.11e2 * a * x * x + 0.55e2 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.55e2 / 0.2e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.55e2 / 0.4e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.77e2 / 0.20e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.77e2 / 0.120e3 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.11e2 / 0.168e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.11e2 / 0.2688e4 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.11e2 / 0.72576e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.11e2 / 0.3628800e7 * pow(a, 0.10e2) * pow(x, 0.20e2) - pow(a, 0.11e2) * pow(x, 0.22e2) / 0.39916800e8);
  return retval;
}

inline double PHO_12_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.12e2 * a * x * x + 0.33e2 * a * a * pow(x, 0.4e1) - 0.110e3 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.165e3 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.33e2 / 0.5e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.77e2 / 0.60e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.11e2 / 0.70e2 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.11e2 / 0.896e3 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.11e2 / 0.18144e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.11e2 / 0.604800e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - pow(a, 0.11e2) * pow(x, 0.22e2) / 0.3326400e7 + pow(a, 0.12e2) * pow(x, 0.24e2) / 0.479001600e9);
  return retval;
}

inline double PHO_13_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.13e2 * a * x * x + 0.39e2 * a * a * pow(x, 0.4e1) - 0.143e3 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.715e3 / 0.24e2 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.429e3 / 0.40e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.143e3 / 0.60e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.143e3 / 0.420e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.143e3 / 0.4480e4 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.143e3 / 0.72576e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.143e3 / 0.1814400e7 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.13e2 / 0.6652800e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.13e2 / 0.479001600e9 * pow(a, 0.12e2) * pow(x, 0.24e2) - pow(a, 0.13e2) * pow(x, 0.26e2) / 0.6227020800e10);
  return retval;
}

inline double PHO_14_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.14e2 * a * x * x + 0.91e2 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.182e3 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.1001e4 / 0.24e2 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.1001e4 / 0.60e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.1001e4 / 0.240e3 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.143e3 / 0.210e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.143e3 / 0.1920e4 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.143e3 / 0.25920e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.143e3 / 0.518400e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.13e2 / 0.1425600e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.13e2 / 0.68428800e8 * pow(a, 0.12e2) * pow(x, 0.24e2) - pow(a, 0.13e2) * pow(x, 0.26e2) / 0.444787200e9 + pow(a, 0.14e2) * pow(x, 0.28e2) / 0.87178291200e11);
  return retval;
}

inline double PHO_15_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.15e2 * a * x * x + 0.105e3 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.455e3 / 0.6e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.455e3 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.1001e4 / 0.40e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.1001e4 / 0.144e3 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.143e3 / 0.112e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.143e3 / 0.896e3 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.143e3 / 0.10368e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.143e3 / 0.172800e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.13e2 / 0.380160e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.13e2 / 0.13685760e8 * pow(a, 0.12e2) * pow(x, 0.24e2) - pow(a, 0.13e2) * pow(x, 0.26e2) / 0.59304960e8 + pow(a, 0.14e2) * pow(x, 0.28e2) / 0.5811886080e10 - pow(a, 0.15e2) * pow(x, 0.30e2) / 0.1307674368000e13);
  return retval;
}

inline double PHO_16_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.16e2 * a * x * x + 0.60e2 * a * a * pow(x, 0.4e1) - 0.280e3 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.455e3 / 0.6e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.182e3 / 0.5e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.1001e4 / 0.90e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.143e3 / 0.63e2 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.143e3 / 0.448e3 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.143e3 / 0.4536e4 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.143e3 / 0.64800e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.13e2 / 0.118800e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.13e2 / 0.3421440e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - pow(a, 0.13e2) * pow(x, 0.26e2) / 0.11119680e8 + pow(a, 0.14e2) * pow(x, 0.28e2) / 0.726485760e9 - pow(a, 0.15e2) * pow(x, 0.30e2) / 0.81729648000e11 + pow(a, 0.16e2) * pow(x, 0.32e2) / 0.20922789888000e14);
  return retval;
}

inline double PHO_17_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.17e2 * a * x * x + 0.68e2 * a * a * pow(x, 0.4e1) - 0.340e3 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.595e3 / 0.6e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.1547e4 / 0.30e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.1547e4 / 0.90e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.2431e4 / 0.630e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.2431e4 / 0.4032e4 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.2431e4 / 0.36288e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.2431e4 / 0.453600e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.221e3 / 0.712800e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.221e3 / 0.17107200e8 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.17e2 / 0.44478720e8 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.17e2 / 0.2179457280e10 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.17e2 / 0.163459296000e12 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.17e2 / 0.20922789888000e14 * pow(a, 0.16e2) * pow(x, 0.32e2) - pow(a, 0.17e2) * pow(x, 0.34e2) / 0.355687428096000e15);
  return retval;
}

inline double PHO_18_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.18e2 * a * x * x + 0.153e3 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.136e3 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.255e3 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.357e3 / 0.5e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.1547e4 / 0.60e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.221e3 / 0.35e2 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.2431e4 / 0.2240e4 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.2431e4 / 0.18144e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.2431e4 / 0.201600e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.221e3 / 0.277200e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.221e3 / 0.5702400e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.17e2 / 0.12355200e8 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.17e2 / 0.484323840e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.17e2 / 0.27243216000e11 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.17e2 / 0.2324754432000e13 * pow(a, 0.16e2) * pow(x, 0.32e2) - pow(a, 0.17e2) * pow(x, 0.34e2) / 0.19760412672000e14 + pow(a, 0.18e2) * pow(x, 0.36e2) / 0.6402373705728000e16);
  return retval;
}

inline double PHO_19_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.19e2 * a * x * x + 0.171e3 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.323e3 / 0.2e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.323e3 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.969e3 / 0.10e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.2261e4 / 0.60e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.4199e4 / 0.420e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.4199e4 / 0.2240e4 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.46189e5 / 0.181440e6 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.46189e5 / 0.1814400e7 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.4199e4 / 0.2217600e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.4199e4 / 0.39916800e8 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.323e3 / 0.74131200e8 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.323e3 / 0.2421619200e10 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.323e3 / 0.108972864000e12 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.323e3 / 0.6974263296000e13 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.19e2 / 0.39520825344000e14 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.19e2 / 0.6402373705728000e16 * pow(a, 0.18e2) * pow(x, 0.36e2) - pow(a, 0.19e2) * pow(x, 0.38e2) / 0.121645100408832000e18);
  return retval;
}

inline double PHO_20_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.20e2 * a * x * x + 0.95e2 * a * a * pow(x, 0.4e1) - 0.190e3 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.1615e4 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.646e3 / 0.5e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.323e3 / 0.6e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.323e3 / 0.21e2 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.4199e4 / 0.1344e4 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.4199e4 / 0.9072e4 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.46189e5 / 0.907200e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.4199e4 / 0.997920e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.4199e4 / 0.15966720e8 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.323e3 / 0.25945920e8 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.323e3 / 0.726485760e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.323e3 / 0.27243216000e11 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.323e3 / 0.1394852659200e13 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.19e2 / 0.5928123801600e13 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.19e2 / 0.640237370572800e15 * pow(a, 0.18e2) * pow(x, 0.36e2) - pow(a, 0.19e2) * pow(x, 0.38e2) / 0.6082255020441600e16 + pow(a, 0.20e2) * pow(x, 0.40e2) / 0.2432902008176640000e19);
  return retval;
}

inline double PHO_21_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.21e2 * a * x * x + 0.105e3 * a * a * pow(x, 0.4e1) - 0.665e3 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.1995e4 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.6783e4 / 0.40e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.2261e4 / 0.30e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.323e3 / 0.14e2 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.323e3 / 0.64e2 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.4199e4 / 0.5184e4 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.4199e4 / 0.43200e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.4199e4 / 0.475200e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.4199e4 / 0.6842880e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.323e3 / 0.9884160e7 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.323e3 / 0.242161920e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.323e3 / 0.7783776000e10 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.323e3 / 0.332107776000e12 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.19e2 / 0.1129166438400e13 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.19e2 / 0.91462481510400e14 * pow(a, 0.18e2) * pow(x, 0.36e2) - pow(a, 0.19e2) * pow(x, 0.38e2) / 0.579262382899200e15 + pow(a, 0.20e2) * pow(x, 0.40e2) / 0.115852476579840000e18 - pow(a, 0.21e2) * pow(x, 0.42e2) / 0.51090942171709440000e20);
  return retval;
}

inline double PHO_22_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.22e2 * a * x * x + 0.231e3 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.770e3 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.7315e4 / 0.24e2 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.4389e4 / 0.20e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.24871e5 / 0.240e3 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.3553e4 / 0.105e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.3553e4 / 0.448e3 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.3553e4 / 0.2592e4 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.46189e5 / 0.259200e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.4199e4 / 0.237600e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.4199e4 / 0.3110400e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.323e3 / 0.4043520e7 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.323e3 / 0.88058880e8 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.323e3 / 0.2476656000e10 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.323e3 / 0.90574848000e11 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.19e2 / 0.256628736000e12 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.19e2 / 0.16629542092800e14 * pow(a, 0.18e2) * pow(x, 0.36e2) - pow(a, 0.19e2) * pow(x, 0.38e2) / 0.78990324940800e14 + pow(a, 0.20e2) * pow(x, 0.40e2) / 0.10532043325440000e17 - pow(a, 0.21e2) * pow(x, 0.42e2) / 0.2322315553259520000e19 + pow(a, 0.22e2) * pow(x, 0.44e2) / 0.1124000727777607680000e22);
  return retval;
}

inline double PHO_23_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.23e2 * a * x * x + 0.253e3 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.1771e4 / 0.6e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.8855e4 / 0.24e2 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.33649e5 / 0.120e3 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.33649e5 / 0.240e3 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.81719e5 / 0.1680e4 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.81719e5 / 0.6720e4 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.81719e5 / 0.36288e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.81719e5 / 0.259200e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.96577e5 / 0.2851200e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.96577e5 / 0.34214400e8 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.7429e4 / 0.40435200e8 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.7429e4 / 0.792529920e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.7429e4 / 0.19813248000e11 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.7429e4 / 0.634023936000e12 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.437e3 / 0.1539772416000e13 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.437e3 / 0.83147710464000e14 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.23e2 / 0.315961299763200e15 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.23e2 / 0.31596129976320000e17 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.23e2 / 0.4644631106519040000e19 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.23e2 / 0.1124000727777607680000e22 * pow(a, 0.22e2) * pow(x, 0.44e2) - pow(a, 0.23e2) * pow(x, 0.46e2) / 0.25852016738884976640000e23);
  return retval;
}

inline double PHO_24_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 + pow(a, 0.24e2) * pow(x, 0.48e2) / 0.620448401733239439360000e24 - pow(a, 0.23e2) * pow(x, 0.46e2) / 0.1077167364120207360000e22 + 0.23e2 / 0.93666727314800640000e20 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.23e2 / 0.580578888314880000e18 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.437e3 / 0.449100288000e12 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.7429e4 / 0.211341312000e12 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.23e2 / 0.5266021662720000e16 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.7429e4 / 0.7429968000e10 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.7429e4 / 0.330220800e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.4807e4 / 0.70e2 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.33649e5 / 0.180e3 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.7429e4 / 0.18532800e8 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.1771e4 / 0.5e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.1771e4 / 0.4e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.1012e4 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.138e3 * a * a * pow(x, 0.4e1) - 0.23e2 / 0.65825270784000e14 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.24e2 * a * x * x + 0.96577e5 / 0.17107200e8 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.7429e4 / 0.118800e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.437e3 / 0.20786927616000e14 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.81719e5 / 0.151200e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.81719e5 / 0.22680e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.81719e5 / 0.4480e4 * pow(a, 0.8e1) * pow(x, 0.16e2));
  return retval;
}

inline double PHO_25_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - pow(a, 0.25e2) * pow(x, 0.50e2) / 0.15511210043330985984000000e26 + pow(a, 0.24e2) * pow(x, 0.48e2) / 0.24817936069329577574400e23 - pow(a, 0.23e2) * pow(x, 0.46e2) / 0.86173389129616588800e20 + 0.23e2 / 0.11240007277776076800e20 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.23e2 / 0.92892622130380800e17 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.437e3 / 0.143712092160e12 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.7429e4 / 0.76082872320e11 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.23e2 / 0.1053204332544000e16 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.7429e4 / 0.2971987200e10 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.7429e4 / 0.145297152e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.24035e5 / 0.252e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.8855e4 / 0.36e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.7429e4 / 0.8895744e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.1771e4 / 0.4e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.6325e4 / 0.12e2 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.1150e4 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.150e3 * a * a * pow(x, 0.4e1) - 0.23e2 / 0.15798064988160e14 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.25e2 * a * x * x + 0.7429e4 / 0.684288e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.7429e4 / 0.66528e5 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.437e3 / 0.5820339732480e13 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.81719e5 / 0.90720e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.408595e6 / 0.72576e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.24035e5 / 0.896e3 * pow(a, 0.8e1) * pow(x, 0.16e2));
  return retval;
}

inline double PHO_26_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - pow(a, 0.25e2) * pow(x, 0.50e2) / 0.596585001666576384000000e24 + pow(a, 0.24e2) * pow(x, 0.48e2) / 0.1909072005333044428800e22 - pow(a, 0.23e2) * pow(x, 0.46e2) / 0.9943083361109606400e19 + 0.23e2 / 0.1729231888888627200e19 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.23e2 / 0.17863965794304000e17 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.437e3 / 0.49746493440e11 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.7429e4 / 0.29262643200e11 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.23e2 / 0.243047153664000e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.7429e4 / 0.1257379200e10 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.7429e4 / 0.67060224e8 * pow(a, 0.14e2) * pow(x, 0.28e2) + pow(a, 0.26e2) * pow(x, 0.52e2) / 0.403291461126605635584000000e27 - 0.16445e5 / 0.126e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.23023e5 / 0.72e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.7429e4 / 0.4447872e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.3289e4 / 0.6e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.7475e4 / 0.12e2 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.1300e4 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.325e3 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.23e2 / 0.4253325189120e13 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.26e2 * a * x * x + 0.96577e5 / 0.4790016e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.96577e5 / 0.498960e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.437e3 / 0.1790873763840e13 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.1062347e7 / 0.725760e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.312455e6 / 0.36288e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.312455e6 / 0.8064e4 * pow(a, 0.8e1) * pow(x, 0.16e2));
  return retval;
}

inline double PHO_27_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - pow(a, 0.25e2) * pow(x, 0.50e2) / 0.44191481604931584000000e23 + pow(a, 0.24e2) * pow(x, 0.48e2) / 0.212119111703671603200e21 - pow(a, 0.23e2) * pow(x, 0.46e2) / 0.1473049386831052800e19 + 0.23e2 / 0.320228127571968000e18 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.23e2 / 0.3969770176512000e16 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.437e3 / 0.18424627200e11 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.7429e4 / 0.11921817600e11 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.23e2 / 0.63012225024000e14 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.7429e4 / 0.558835200e9 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.7429e4 / 0.32288256e8 * pow(a, 0.14e2) * pow(x, 0.28e2) + pow(a, 0.26e2) * pow(x, 0.52e2) / 0.14936720782466875392000000e26 - 0.9867e4 / 0.56e2 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.3289e4 / 0.8e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.7429e4 / 0.2306304e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.2691e4 / 0.4e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.2925e4 / 0.4e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.975e3 / 0.2e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.351e3 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.23e2 / 0.1260244500480e13 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.27e2 * a * x * x + 0.96577e5 / 0.2661120e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.96577e5 / 0.295680e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.437e3 / 0.596957921280e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.62491e5 / 0.26880e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.312455e6 / 0.24192e5 * pow(a, 0.9e1) * pow(x, 0.18e2) - pow(a, 0.27e2) * pow(x, 0.54e2) / 0.10888869450418352160768000000e29 + 0.49335e5 / 0.896e3 * pow(a, 0.8e1) * pow(x, 0.16e2));
  return retval;
}

inline double PHO_28_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - pow(a, 0.25e2) * pow(x, 0.50e2) / 0.4734801600528384000000e22 + pow(a, 0.24e2) * pow(x, 0.48e2) / 0.30302730243381657600e20 - pow(a, 0.23e2) * pow(x, 0.46e2) / 0.263044533362688000e18 + 0.23e2 / 0.68620313051136000e17 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.23e2 / 0.992442544128000e15 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.437e3 / 0.7238246400e10 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.7429e4 / 0.5109350400e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.23e2 / 0.18003492864000e14 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.7429e4 / 0.259459200e9 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.7429e4 / 0.16144128e8 * pow(a, 0.14e2) * pow(x, 0.28e2) + pow(a, 0.26e2) * pow(x, 0.52e2) / 0.1066908627319062528000000e25 - 0.3289e4 / 0.14e2 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.2093e4 / 0.4e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.7429e4 / 0.1235520e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.819e3 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.6825e4 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.546e3 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.189e3 * a * a * pow(x, 0.4e1) - 0.23e2 / 0.405078589440e12 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.28e2 * a * x * x + 0.96577e5 / 0.1520640e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.5681e4 / 0.10560e5 * pow(a, 0.11e2) * pow(x, 0.22e2) + pow(a, 0.28e2) * pow(x, 0.56e2) / 0.304888344611713860501504000000e30 + 0.437e3 / 0.213199257600e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.62491e5 / 0.17280e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.16445e5 / 0.864e3 * pow(a, 0.9e1) * pow(x, 0.18e2) - pow(a, 0.27e2) * pow(x, 0.54e2) / 0.388888194657798291456000000e27 + 0.9867e4 / 0.128e3 * pow(a, 0.8e1) * pow(x, 0.16e2));
  return retval;
}

inline double PHO_29_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.29e2 / 0.18939206402113536000000e23 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.29e2 / 0.151513651216908288000e21 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.29e2 / 0.1578267200176128000e19 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.667e3 / 0.480342191357952000e18 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.667e3 / 0.7939540353024000e16 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.12673e5 / 0.86858956800e11 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.215441e6 / 0.66421555200e11 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.667e3 / 0.162031435776000e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.215441e6 / 0.3632428800e10 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.215441e6 / 0.242161920e9 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.29e2 / 0.3200725881957187584000000e25 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.8671e4 / 0.28e2 * pow(a, 0.7e1) * pow(x, 0.14e2) - pow(a, 0.29e2) * pow(x, 0.58e2) / 0.8841761993739701954543616000000e31 + 0.2639e4 / 0.4e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.215441e6 / 0.19768320e8 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.7917e4 / 0.8e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.7917e4 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.609e3 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.203e3 * a * a * pow(x, 0.4e1) - 0.667e3 / 0.4050785894400e13 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.29e2 * a * x * x + 0.164749e6 / 0.1520640e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.164749e6 / 0.190080e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.29e2 / 0.304888344611713860501504000000e30 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.12673e5 / 0.2345191833600e13 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.95381e5 / 0.17280e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.95381e5 / 0.3456e4 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.29e2 / 0.777776389315596582912000000e27 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.95381e5 / 0.896e3 * pow(a, 0.8e1) * pow(x, 0.16e2));
  return retval;
}

inline double PHO_30_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.29e2 / 0.3156534400352256000000e22 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.29e2 / 0.30302730243381657600e20 * pow(a, 0.24e2) * pow(x, 0.48e2) + pow(a, 0.30e2) * pow(x, 0.60e2) / 0.265252859812191058636308480000000e33 - 0.29e2 / 0.368262346707763200e18 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.667e3 / 0.128091251028787200e18 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.667e3 / 0.2381862105907200e16 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.12673e5 / 0.37638881280e11 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.215441e6 / 0.30996725760e11 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.667e3 / 0.54010478592000e14 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.215441e6 / 0.1816214400e10 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.215441e6 / 0.129153024e9 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.29e2 / 0.426763450927625011200000e24 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.5655e4 / 0.14e2 * pow(a, 0.7e1) * pow(x, 0.14e2) - pow(a, 0.29e2) * pow(x, 0.58e2) / 0.294725399791323398484787200000e30 + 0.13195e5 / 0.16e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.12673e5 / 0.658944e6 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.23751e5 / 0.20e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.9135e4 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.2030e4 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.435e3 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.667e3 / 0.1485288161280e13 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.30e2 * a * x * x + 0.164749e6 / 0.912384e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.8671e4 / 0.6336e4 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.29e2 / 0.20325889640780924033433600000e29 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.12673e5 / 0.938076733440e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.95381e5 / 0.11520e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.476905e6 / 0.12096e5 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.29e2 / 0.77777638931559658291200000e26 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.130065e6 / 0.896e3 * pow(a, 0.8e1) * pow(x, 0.16e2));
  return retval;
}

inline double PHO_31_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.899e3 / 0.18939206402113536000000e23 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.899e3 / 0.212119111703671603200e21 * pow(a, 0.24e2) * pow(x, 0.48e2) - pow(a, 0.31e2) * pow(x, 0.62e2) / 0.8222838654177922817725562880000000e34 + 0.31e2 / 0.265252859812191058636308480000000e33 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.899e3 / 0.2946098773662105600e19 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.20677e5 / 0.1152821259259084800e19 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.20677e5 / 0.23818621059072000e17 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.392863e6 / 0.526944337920e12 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.6678671e7 / 0.464950886400e12 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.20677e5 / 0.594115264512000e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.6678671e7 / 0.29059430400e11 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.392863e6 / 0.129153024e9 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.899e3 / 0.2133817254638125056000000e25 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.58435e5 / 0.112e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.31e2 / 0.589450799582646796969574400000e30 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.81809e5 / 0.80e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.392863e6 / 0.11860992e8 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.56637e5 / 0.40e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.31465e5 / 0.24e2 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.4495e4 / 0.6e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.465e3 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.20677e5 / 0.17823457935360e14 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.31e2 * a * x * x + 0.268801e6 / 0.912384e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.268801e6 / 0.126720e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.899e3 / 0.60977668922342772100300800000e29 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.392863e6 / 0.12194997534720e14 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.2956811e7 / 0.241920e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.1344005e7 / 0.24192e5 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.899e3 / 0.311110555726238633164800000e27 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.175305e6 / 0.896e3 * pow(a, 0.8e1) * pow(x, 0.16e2));
  return retval;
}

inline double PHO_32_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 + pow(a, 0.32e2) * pow(x, 0.64e2) / 0.263130836933693530167218012160000000e36 - 0.899e3 / 0.4142951400462336000000e22 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.899e3 / 0.53029777925917900800e20 * pow(a, 0.24e2) * pow(x, 0.48e2) - pow(a, 0.31e2) * pow(x, 0.62e2) / 0.256963707943060088053923840000000e33 + 0.31e2 / 0.16578303738261941164769280000000e32 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.899e3 / 0.828590280092467200e18 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.20677e5 / 0.360256643518464000e18 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.20677e5 / 0.8187650989056000e16 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.392863e6 / 0.247005158400e12 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.6678671e7 / 0.232475443200e12 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.20677e5 / 0.222793224192000e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.392863e6 / 0.908107200e9 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.392863e6 / 0.72648576e8 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.899e3 / 0.400090735244648448000000e24 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.23374e5 / 0.35e2 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.31e2 / 0.55261012460873137215897600000e29 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.6293e4 / 0.5e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.20677e5 / 0.370656e6 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.25172e5 / 0.15e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.4495e4 / 0.3e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.2480e4 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.248e3 * a * a * pow(x, 0.4e1) - 0.20677e5 / 0.7240779786240e13 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.32e2 * a * x * x + 0.268801e6 / 0.570240e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.268801e6 / 0.83160e5 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.899e3 / 0.7622208615292846512537600000e28 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.392863e6 / 0.5335311421440e13 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.268801e6 / 0.15120e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.58435e5 / 0.756e3 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.899e3 / 0.48611024332224786432000000e26 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.58435e5 / 0.224e3 * pow(a, 0.8e1) * pow(x, 0.16e2));
  return retval;
}

inline double PHO_33_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 + pow(a, 0.32e2) * pow(x, 0.64e2) / 0.7973661725263440308097515520000000e34 - 0.899e3 / 0.1004351854657536000000e22 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.899e3 / 0.14462666707068518400e20 * pow(a, 0.24e2) * pow(x, 0.48e2) - pow(a, 0.31e2) * pow(x, 0.62e2) / 0.15573558057155156851752960000000e32 + 0.31e2 / 0.1507118521660176469524480000000e31 * pow(a, 0.30e2) * pow(x, 0.60e2) - pow(a, 0.33e2) * pow(x, 0.66e2) / 0.8683317618811886495518194401280000000e37 - 0.899e3 / 0.251087963664384000e18 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.20677e5 / 0.120085547839488000e18 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.20677e5 / 0.2977327632384000e16 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.392863e6 / 0.119760076800e12 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.392863e6 / 0.7044710400e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.20677e5 / 0.87767027712000e14 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.392863e6 / 0.495331200e9 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.20677e5 / 0.2201472e7 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.899e3 / 0.84867731718561792000000e23 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.29667e5 / 0.35e2 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.31e2 / 0.6698304540711895420108800000e28 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.69223e5 / 0.45e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.20677e5 / 0.224640e6 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.9889e4 / 0.5e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.1705e4 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.2728e4 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.264e3 * a * a * pow(x, 0.4e1) - 0.20677e5 / 0.3071845969920e13 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.33e2 * a * x * x + 0.268801e6 / 0.362880e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.268801e6 / 0.55440e5 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.899e3 / 0.1154880093226188865536000000e28 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.392863e6 / 0.2425141555200e13 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.128557e6 / 0.5040e4 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.642785e6 / 0.6048e4 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.899e3 / 0.8838368060404506624000000e25 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.385671e6 / 0.1120e4 * pow(a, 0.8e1) * pow(x, 0.16e2));
  return retval;
}

inline double PHO_34_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 + pow(a, 0.32e2) * pow(x, 0.64e2) / 0.469038925015496488711618560000000e33 - 0.899e3 / 0.265857843879936000000e21 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.899e3 / 0.4253725502078976000e19 * pow(a, 0.24e2) * pow(x, 0.48e2) - pow(a, 0.31e2) * pow(x, 0.62e2) / 0.1374137475631337369272320000000e31 + 0.31e2 / 0.177308061371785467002880000000e30 * pow(a, 0.30e2) * pow(x, 0.60e2) - pow(a, 0.33e2) * pow(x, 0.66e2) / 0.255391694670937838103476305920000000e36 - 0.899e3 / 0.81234341185536000e17 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.20677e5 / 0.42383134531584000e17 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.20677e5 / 0.1138389977088000e16 * pow(a, 0.21e2) * pow(x, 0.42e2) + pow(a, 0.34e2) * pow(x, 0.68e2) / 0.295232799039604140847618609643520000000e39 - 0.392863e6 / 0.59880038400e11 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.6678671e7 / 0.63402393600e11 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.20677e5 / 0.36139364352000e14 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.351509e6 / 0.247665600e9 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.351509e6 / 0.22014720e8 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.899e3 / 0.19968878051426304000000e23 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.336226e6 / 0.315e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.31e2 / 0.985044785398808150016000000e27 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.168113e6 / 0.90e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.351509e6 / 0.2358720e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.11594e5 / 0.5e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.5797e4 / 0.3e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.2992e4 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.561e3 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.20677e5 / 0.1355226163200e13 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.34e2 * a * x * x + 0.4569617e7 / 0.3991680e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.198679e6 / 0.27720e5 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.899e3 / 0.203802369392856858624000000e27 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.392863e6 / 0.1141243084800e13 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.2185469e7 / 0.60480e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.2185469e7 / 0.15120e5 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.899e3 / 0.1819664012436221952000000e25 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.504339e6 / 0.1120e4 * pow(a, 0.8e1) * pow(x, 0.16e2));
  return retval;
}

inline double PHO_35_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 + pow(a, 0.32e2) * pow(x, 0.64e2) / 0.40203336429899699032424448000000e32 - 0.899e3 / 0.75959383965696000000e20 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.899e3 / 0.1336885157796249600e19 * pow(a, 0.24e2) * pow(x, 0.48e2) - pow(a, 0.31e2) * pow(x, 0.62e2) / 0.157044282929295699345408000000e30 + 0.31e2 / 0.25329723053112209571840000000e29 * pow(a, 0.30e2) * pow(x, 0.60e2) - pow(a, 0.33e2) * pow(x, 0.66e2) / 0.14593811124053590748770074624000000e35 - 0.899e3 / 0.27851774120755200e17 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.20677e5 / 0.15742307111731200e17 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.20677e5 / 0.455355990835200e15 * pow(a, 0.21e2) * pow(x, 0.42e2) + pow(a, 0.34e2) * pow(x, 0.68e2) / 0.8435222829702975452789103132672000000e37 - 0.392863e6 / 0.30795448320e11 * pow(a, 0.17e2) * pow(x, 0.34e2) - pow(a, 0.35e2) * pow(x, 0.70e2) / 0.10333147966386144929666651337523200000000e41 + 0.351509e6 / 0.1811496960e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.20677e5 / 0.15488299008000e14 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.351509e6 / 0.141523200e9 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.351509e6 / 0.13208832e8 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.899e3 / 0.5134854356081049600000e22 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.168113e6 / 0.126e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.31e2 / 0.168864820354081397145600000e27 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.40579e5 / 0.18e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.351509e6 / 0.1482624e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.40579e5 / 0.15e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.6545e4 / 0.3e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.6545e4 / 0.6e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.595e3 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.20677e5 / 0.619531960320e12 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.35e2 * a * x * x + 0.198679e6 / 0.114048e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.198679e6 / 0.19008e5 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.899e3 / 0.40760473878571371724800000e26 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.392863e6 / 0.554318069760e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.2185469e7 / 0.43200e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.168113e6 / 0.864e3 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.899e3 / 0.415923202842565017600000e24 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.168113e6 / 0.288e3 * pow(a, 0.8e1) * pow(x, 0.16e2));
  return retval;
}

inline double PHO_36_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 + pow(a, 0.32e2) * pow(x, 0.64e2) / 0.4467037381099966559158272000000e31 - 0.899e3 / 0.23209811767296000000e20 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.899e3 / 0.445628385932083200e18 * pow(a, 0.24e2) * pow(x, 0.48e2) - pow(a, 0.31e2) * pow(x, 0.62e2) / 0.21811705962402180464640000000e29 + 0.31e2 / 0.4221620508852034928640000000e28 * pow(a, 0.30e2) * pow(x, 0.60e2) - pow(a, 0.33e2) * pow(x, 0.66e2) / 0.1216150927004465895730839552000000e34 - 0.899e3 / 0.10057585099161600e17 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.20677e5 / 0.6122008321228800e16 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.20677e5 / 0.189731662848000e15 * pow(a, 0.21e2) * pow(x, 0.42e2) + pow(a, 0.34e2) * pow(x, 0.68e2) / 0.468623490539054191821616840704000000e36 - 0.20677e5 / 0.855429120e9 * pow(a, 0.17e2) * pow(x, 0.34e2) - pow(a, 0.35e2) * pow(x, 0.70e2) / 0.287031887955170692490740314931200000000e39 + 0.351509e6 / 0.1006387200e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.20677e5 / 0.6883688448000e13 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.351509e6 / 0.82555200e8 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.351509e6 / 0.8072064e7 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.899e3 / 0.1426348432244736000000e22 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.11594e5 / 0.7e1 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.31e2 / 0.32834826179960271667200000e26 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.40579e5 / 0.15e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.15283e5 / 0.41184e5 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.15708e5 / 0.5e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.19635e5 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.1190e4 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.315e3 * a * a * pow(x, 0.4e1) - 0.20677e5 / 0.292556759040e12 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.36e2 * a * x * x + 0.198679e6 / 0.76032e5 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.198679e6 / 0.13200e5 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.899e3 / 0.9057883084126971494400000e25 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.392863e6 / 0.277159034880e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.168113e6 / 0.2400e4 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.168113e6 / 0.648e3 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.899e3 / 0.103980800710641254400000e24 * pow(a, 0.27e2) * pow(x, 0.54e2) + pow(a, 0.36e2) * pow(x, 0.72e2) / 0.371993326789901217467999448150835200000000e42 + 0.168113e6 / 0.224e3 * pow(a, 0.8e1) * pow(x, 0.16e2));
  return retval;
}

inline double PHO_37_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 + 0.37e2 / 0.22335186905499832795791360000000e32 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.33263e5 / 0.278517741207552000000e21 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.33263e5 / 0.5793169017117081600e19 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.37e2 / 0.130870235774413082787840000000e30 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.1147e4 / 0.29551343561964244500480000000e29 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.37e2 / 0.4864603708017863582923358208000000e34 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.33263e5 / 0.140806191388262400e18 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.765049e6 / 0.91830124818432000e17 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.765049e6 / 0.3035706605568000e16 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.37e2 / 0.1405870471617162575464850522112000000e37 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.765049e6 / 0.17108582400e11 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.37e2 / 0.574063775910341384981480629862400000000e39 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.13005833e8 / 0.21134131200e11 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.765049e6 / 0.117022703616000e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.13005833e8 / 0.1816214400e10 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.565471e6 / 0.8072064e7 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.33263e5 / 0.15689832754692096000000e23 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.214489e6 / 0.105e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.1147e4 / 0.262678609439682173337600000e27 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.48433e5 / 0.15e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.565471e6 / 0.988416e6 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.145299e6 / 0.40e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.22015e5 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.1295e4 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.333e3 * a * a * pow(x, 0.4e1) - 0.765049e6 / 0.5266021662720e13 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.37e2 * a * x * x + 0.7351123e7 / 0.1900800e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.565471e6 / 0.26400e5 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.33263e5 / 0.81520947757142743449600000e26 * pow(a, 0.28e2) * pow(x, 0.56e2) - pow(a, 0.37e2) * pow(x, 0.74e2) / 0.13763753091226345046315979581580902400000000e44 + 0.765049e6 / 0.277159034880e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.6220181e7 / 0.64800e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.6220181e7 / 0.18144e5 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.33263e5 / 0.1039808007106412544000000e25 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.37e2 / 0.371993326789901217467999448150835200000000e42 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.214489e6 / 0.224e3 * pow(a, 0.8e1) * pow(x, 0.16e2));
  return retval;
}

inline double PHO_38_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 + 0.37e2 / 0.3526608458763131494072320000000e31 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.33263e5 / 0.95282385149952000000e20 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.33263e5 / 0.2134325427358924800e19 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.37e2 / 0.24107675011076094197760000000e29 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.1147e4 / 0.6221335486729314631680000000e28 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.37e2 / 0.640079435265508366174126080000000e33 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.33263e5 / 0.55581391337472000e17 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.765049e6 / 0.38665315713024000e17 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.765049e6 / 0.1358079270912000e16 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.37e2 / 0.147986365433385534259457949696000000e36 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.14535931e8 / 0.179640115200e12 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.37e2 / 0.45320824413974319866958997094400000000e38 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.247110827e9 / 0.232475443200e12 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.765049e6 / 0.55431806976000e14 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.10743949e8 / 0.908107200e9 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.10743949e8 / 0.96864768e8 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.33263e5 / 0.4954684027797504000000e22 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.262922e6 / 0.105e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.1147e4 / 0.62213354867293146316800000e26 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.920227e6 / 0.240e3 * pow(a, 0.6e1) * pow(x, 0.12e2) + pow(a, 0.38e2) * pow(x, 0.76e2) / 0.523022617466601111760007224100074291200000000e45 - 0.10743949e8 / 0.12355200e8 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.83657e5 / 0.20e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.24605e5 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.1406e4 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.703e3 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.765049e6 / 0.2633010831360e13 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.38e2 * a * x * x + 0.10743949e8 / 0.1900800e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.10743949e8 / 0.356400e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.33263e5 / 0.21452880988721774592000000e26 * pow(a, 0.28e2) * pow(x, 0.56e2) - pow(a, 0.37e2) * pow(x, 0.74e2) / 0.362204028716482764376736304778444800000000e42 + 0.14535931e8 / 0.2771590348800e13 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.118183439e9 / 0.907200e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.4075291e7 / 0.9072e4 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.33263e5 / 0.300997054688698368000000e24 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.37e2 / 0.19578596146836906182526286744780800000000e41 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.4075291e7 / 0.3360e4 * pow(a, 0.8e1) * pow(x, 0.16e2));
  return retval;
}

inline double PHO_39_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 + 0.37e2 / 0.632981005419023601500160000000e30 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.33263e5 / 0.34203933130752000000e20 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.33263e5 / 0.820894395138048000e18 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.37e2 / 0.4945164104836121886720000000e28 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.1147e4 / 0.1435692804629841838080000000e28 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.37e2 / 0.98473759271616671719096320000000e32 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.33263e5 / 0.22802622087168000e17 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.765049e6 / 0.16854111977472000e17 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.765049e6 / 0.626805817344000e15 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.37e2 / 0.18972610952998145417879224320000000e35 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.14535931e8 / 0.101335449600e12 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.37e2 / 0.4648289683484545627380409958400000000e37 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.10743949e8 / 0.5960908800e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.765049e6 / 0.27005239296000e14 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.10743949e8 / 0.558835200e9 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.10743949e8 / 0.62092800e8 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.33263e5 / 0.1651561342599168000000e22 * pow(a, 0.26e2) * pow(x, 0.52e2) - pow(a, 0.39e2) * pow(x, 0.78e2) / 0.20397882081197443358640281739902897356800000000e47 - 0.1708993e7 / 0.560e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.1147e4 / 0.15952142273664909312000000e26 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.1087541e7 / 0.240e3 * pow(a, 0.6e1) * pow(x, 0.12e2) + pow(a, 0.38e2) * pow(x, 0.76e2) / 0.13410836345297464404102749335899340800000000e44 - 0.10743949e8 / 0.8236800e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.191919e6 / 0.40e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.27417e5 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.9139e4 / 0.6e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.741e3 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.765049e6 / 0.1350261964800e13 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.39e2 * a * x * x + 0.139671337e9 / 0.17107200e8 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.139671337e9 / 0.3326400e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.33263e5 / 0.6050812586562551808000000e25 * pow(a, 0.28e2) * pow(x, 0.56e2) - pow(a, 0.37e2) * pow(x, 0.74e2) / 0.18574565575204244327012118193766400000000e41 + 0.14535931e8 / 0.1492394803200e13 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.52978783e8 / 0.302400e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.52978783e8 / 0.90720e5 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.33263e5 / 0.92614478365753344000000e23 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.37e2 / 0.1506045857448992783271252826521600000000e40 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.1708993e7 / 0.1120e4 * pow(a, 0.8e1) * pow(x, 0.16e2));
  return retval;
}

inline double PHO_40_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 + 0.37e2 / 0.126596201083804720300032000000e30 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.33263e5 / 0.12826474924032000000e20 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.33263e5 / 0.328357758055219200e18 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.37e2 / 0.1112661923588127424512000000e28 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.1147e4 / 0.358923201157460459520000000e27 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.37e2 / 0.17232907872532917550841856000000e32 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.33263e5 / 0.9691114387046400e16 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.765049e6 / 0.7584350389862400e16 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.765049e6 / 0.297732763238400e15 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.37e2 / 0.2845891642949721812681883648000000e34 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.631997e6 / 0.2533386240e10 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.37e2 / 0.581036210435568203422551244800000000e36 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.10743949e8 / 0.3576545280e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.765049e6 / 0.13502619648000e14 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.10743949e8 / 0.349272000e9 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.10743949e8 / 0.40360320e8 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.33263e5 / 0.578046469909708800000e21 * pow(a, 0.26e2) * pow(x, 0.52e2) - pow(a, 0.39e2) * pow(x, 0.78e2) / 0.509947052029936083966007043497572433920000000e45 + pow(a, 0.40e2) * pow(x, 0.80e2) / 0.815915283247897734345611269596115894272000000000e48 - 0.155363e6 / 0.42e2 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.1147e4 / 0.4386839125257850060800000e25 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.63973e5 / 0.12e2 * pow(a, 0.6e1) * pow(x, 0.12e2) + pow(a, 0.38e2) * pow(x, 0.76e2) / 0.670541817264873220205137466794967040000000e42 - 0.10743949e8 / 0.5559840e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.27417e5 / 0.5e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.45695e5 / 0.12e2 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.4940e4 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.390e3 * a * a * pow(x, 0.4e1) - 0.765049e6 / 0.708887531520e12 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.40e2 * a * x * x + 0.139671337e9 / 0.11975040e8 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.4816253e7 / 0.83160e5 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.33263e5 / 0.1815243775968765542400000e25 * pow(a, 0.28e2) * pow(x, 0.56e2) - pow(a, 0.37e2) * pow(x, 0.74e2) / 0.1393092418140318324525908864532480000000e40 + 0.14535931e8 / 0.820817141760e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.52978783e8 / 0.226800e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.1708993e7 / 0.2268e4 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.33263e5 / 0.30099705468869836800000e23 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.37e2 / 0.150604585744899278327125282652160000000e39 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.1708993e7 / 0.896e3 * pow(a, 0.8e1) * pow(x, 0.16e2));
  return retval;
}

inline double PHO_41_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - pow(a, 0.41e2) * pow(x, 0.82e2) / 0.33452526613163807108170062053440751665152000000000e50 + 0.1517e4 / 0.1139365809754242482700288000000e31 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.1363783e7 / 0.205223598784512000000e21 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.1363783e7 / 0.5582081886938726400e19 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.1517e4 / 0.11126619235881274245120000000e29 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.47027e5 / 0.3948155212732065054720000000e28 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.1517e4 / 0.137863262980263340406734848000000e33 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.1363783e7 / 0.174440058966835200e18 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.31367009e8 / 0.144102657407385600e18 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.31367009e8 / 0.5954655264768000e16 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.1517e4 / 0.19921241500648052688773185536000000e35 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.25911877e8 / 0.60801269760e11 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.1517e4 / 0.3486217262613409220535307468800000000e37 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.440501909e9 / 0.89413632000e11 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.31367009e8 / 0.283555012608000e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.440501909e9 / 0.9081072000e10 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.440501909e9 / 0.1089728640e10 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.1363783e7 / 0.8670697048645632000000e22 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.41e2 / 0.1019894104059872167932014086995144867840000000e46 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.41e2 / 0.815915283247897734345611269596115894272000000000e48 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.374699e6 / 0.84e2 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.47027e5 / 0.52642069503094200729600000e26 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.374699e6 / 0.60e2 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.41e2 / 0.2011625451794619660615412400384901120000000e43 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.440501909e9 / 0.155675520e9 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.374699e6 / 0.60e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.50635e5 / 0.12e2 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.5330e4 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.410e3 * a * a * pow(x, 0.4e1) - 0.31367009e8 / 0.15595525693440e14 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.41e2 * a * x * x + 0.197466373e9 / 0.11975040e8 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.197466373e9 / 0.2494800e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.1363783e7 / 0.23598169087593952051200000e26 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.41e2 / 0.5572369672561273298103635458129920000000e40 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.25911877e8 / 0.820817141760e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.70068713e8 / 0.226800e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.70068713e8 / 0.72576e5 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.1363783e7 / 0.421395876564177715200000e24 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.1517e4 / 0.753022928724496391635626413260800000000e39 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.6369883e7 / 0.2688e4 * pow(a, 0.8e1) * pow(x, 0.16e2));
  return retval;
}

inline double PHO_42_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - pow(a, 0.41e2) * pow(x, 0.82e2) / 0.796488728884852550194525286986684563456000000000e48 + 0.1517e4 / 0.271277573751010114928640000000e30 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.1363783e7 / 0.83066694746112000000e20 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.1363783e7 / 0.2392320808688025600e19 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.1517e4 / 0.2914114561778428968960000000e28 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.47027e5 / 0.1128044346494875729920000000e28 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.1517e4 / 0.29542127781485001515728896000000e32 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.1363783e7 / 0.78913360008806400e17 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.31367009e8 / 0.68620313051136000e17 * pow(a, 0.22e2) * pow(x, 0.44e2) + pow(a, 0.42e2) * pow(x, 0.84e2) / 0.1405006117752879898543142606244511569936384000000000e52 - 0.31367009e8 / 0.2977327632384000e16 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.1517e4 / 0.3794522190599629083575844864000000e34 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.25911877e8 / 0.36191232000e11 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.1517e4 / 0.581036210435568203422551244800000000e36 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.440501909e9 / 0.55351296000e11 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.31367009e8 / 0.148528816128000e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.440501909e9 / 0.5837832000e10 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.440501909e9 / 0.726485760e9 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.1363783e7 / 0.3303122685198336000000e22 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.41e2 / 0.72849578861419440566572434785367490560000000e44 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.41e2 / 0.38853108726090368302171965218862661632000000000e47 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.374699e6 / 0.70e2 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.47027e5 / 0.16293973893814871654400000e26 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.2622893e7 / 0.360e3 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.41e2 / 0.191583376361392348630039276227133440000000e42 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.15189721e8 / 0.3706560e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.70889e5 / 0.10e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.18655e5 / 0.4e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.5740e4 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.861e3 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.1363783e7 / 0.371322040320e12 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.42e2 * a * x * x + 0.197466373e9 / 0.8553600e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.6369883e7 / 0.59400e5 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.1363783e7 / 0.7866056362531317350400000e25 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.41e2 / 0.663377341971580154536147078348800000000e39 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.25911877e8 / 0.469038366720e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.70068713e8 / 0.172800e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.6369883e7 / 0.5184e4 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.1363783e7 / 0.150498527344349184000000e24 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.1517e4 / 0.107574704103499484519375201894400000000e39 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.374699e6 / 0.128e3 * pow(a, 0.8e1) * pow(x, 0.16e2));
  return retval;
}

inline double PHO_43_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.43e2 / 0.1592977457769705100389050573973369126912000000000e49 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.65231e5 / 0.2984053311261111264215040000000e31 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.58642669e8 / 0.1495200505430016000000e22 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.58642669e8 / 0.45454095365072486400e20 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.65231e5 / 0.34969374741341147627520000000e29 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.2022161e7 / 0.14664576504433384488960000000e29 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.65231e5 / 0.295421277814850015157288960000000e33 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.58642669e8 / 0.1578267200176128000e19 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.1348781387e10 / 0.1441026574073856000e19 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.43e2 / 0.1405006117752879898543142606244511569936384000000000e52 * pow(a, 0.42e2) * pow(x, 0.84e2) - 0.1348781387e10 / 0.65501207912448000e17 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.65231e5 / 0.34150699715396661752182603776000000e35 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.1114210711e10 / 0.940972032000e12 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.65231e5 / 0.4648289683484545627380409958400000000e37 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.18941582087e11 / 0.1494484992000e13 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.58642669e8 / 0.148528816128000e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.18941582087e11 / 0.163459296000e12 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.653158003e9 / 0.726485760e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - pow(a, 0.43e2) * pow(x, 0.86e2) / 0.60415263063373835637355132068513997507264512000000000e53 + 0.58642669e8 / 0.56153085648371712000000e23 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.1763e4 / 0.291398315445677762266289739141469962240000000e45 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.1763e4 / 0.116559326178271104906515895656587984896000000000e48 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.16112057e8 / 0.2520e4 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.2022161e7 / 0.228115634513408203161600000e27 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.3048227e7 / 0.360e3 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.1763e4 / 0.957916881806961743150196381135667200000000e42 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.653158003e9 / 0.111196800e9 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.160433e6 / 0.20e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.61705e5 / 0.12e2 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.12341e5 / 0.6e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.903e3 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.58642669e8 / 0.8911728967680e13 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.43e2 * a * x * x + 0.273904969e9 / 0.8553600e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.273904969e9 / 0.1900800e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.58642669e8 / 0.117990845437969760256000000e27 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.1763e4 / 0.3980264051829480927216882470092800000000e40 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.1114210711e10 / 0.11725959168000e14 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.273904969e9 / 0.518400e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.16112057e8 / 0.10368e5 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.58642669e8 / 0.2407976437509586944000000e25 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.65231e5 / 0.753022928724496391635626413260800000000e39 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.16112057e8 / 0.4480e4 * pow(a, 0.8e1) * pow(x, 0.16e2));
  return retval;
}

inline double PHO_44_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.43e2 / 0.108612099393388984117435266407275167744000000000e48 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.65231e5 / 0.813832721253030344785920000000e30 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.58642669e8 / 0.645654763708416000000e21 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.58642669e8 / 0.20660952438669312000e20 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.65231e5 / 0.10331860719032611799040000000e29 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.2022161e7 / 0.4666001615046985973760000000e28 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.65231e5 / 0.73855319453712503789322240000000e32 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.58642669e8 / 0.753263890993152000e18 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.1348781387e10 / 0.720513287036928000e18 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.43e2 / 0.63863914443312722661051936647477798633472000000000e50 * pow(a, 0.42e2) * pow(x, 0.84e2) - 0.58642669e8 / 0.1488663816192000e16 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.65231e5 / 0.7761522662590150398223319040000000e34 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.1114210711e10 / 0.577414656000e12 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.65231e5 / 0.950786526167293423782356582400000000e36 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.18941582087e11 / 0.951035904000e12 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.58642669e8 / 0.81015717888000e14 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.653158003e9 / 0.3714984000e10 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.653158003e9 / 0.495331200e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - pow(a, 0.43e2) * pow(x, 0.86e2) / 0.1373074160531223537212616637920772670619648000000000e52 + 0.58642669e8 / 0.22971716856152064000000e23 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.1763e4 / 0.33113444937008836621169288538803404800000000e44 * pow(a, 0.39e2) * pow(x, 0.78e2) + pow(a, 0.44e2) * pow(x, 0.88e2) / 0.2658271574788448768043625811014615890319638528000000000e55 + 0.1763e4 / 0.10596302379842827718774172332417089536000000000e47 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.4790071e7 / 0.630e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.2022161e7 / 0.77766693584116432896000000e26 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.1764763e7 / 0.180e3 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.1763e4 / 0.130625029337312964975026779245772800000000e42 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.21069613e8 / 0.2527200e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.135751e6 / 0.15e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.135751e6 / 0.24e2 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.6622e4 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.473e3 * a * a * pow(x, 0.4e1) - 0.58642669e8 / 0.5063482368000e13 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.44e2 * a * x * x + 0.273904969e9 / 0.6220800e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.273904969e9 / 0.1425600e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.58642669e8 / 0.42905761977443549184000000e26 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.1763e4 / 0.633223826427417420239049483878400000000e39 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.1114210711e10 / 0.6928975872000e13 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.177232627e9 / 0.259200e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.177232627e9 / 0.90720e5 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.58642669e8 / 0.930354532674158592000000e24 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.65231e5 / 0.136913259768090253024659347865600000000e39 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.177232627e9 / 0.40320e5 * pow(a, 0.8e1) * pow(x, 0.16e2));
  return retval;
}

inline double PHO_45_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.43e2 / 0.9654408834967909699327579236202237132800000000e46 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.65231e5 / 0.235107230584208766271488000000e30 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.58642669e8 / 0.286957672759296000000e21 * pow(a, 0.25e2) * pow(x, 0.50e2) - pow(a, 0.45e2) * pow(x, 0.90e2) / 0.119622220865480194561963161495657715064383733760000000000e57 + 0.58642669e8 / 0.9641777804712345600e19 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.65231e5 / 0.3214356668143479226368000000e28 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.2022161e7 / 0.1555333871682328657920000000e28 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.65231e5 / 0.19694751854323334343819264000000e32 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.58642669e8 / 0.368262346707763200e18 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.58642669e8 / 0.16011406378598400e17 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.43e2 / 0.4257594296220848177403462443165186575564800000000e49 * pow(a, 0.42e2) * pow(x, 0.84e2) - 0.58642669e8 / 0.793954035302400e15 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.65231e5 / 0.1897261095299814541787922432000000e34 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.1114210711e10 / 0.359280230400e12 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.65231e5 / 0.211285894703842983062745907200000000e36 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.653158003e9 / 0.21134131200e11 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.58642669e8 / 0.45008732160000e14 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.653158003e9 / 0.2476656000e10 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.21069613e8 / 0.11007360e8 * pow(a, 0.14e2) * pow(x, 0.28e2) - pow(a, 0.43e2) * pow(x, 0.86e2) / 0.61025518245832157209449628352034340916428800000000e50 + 0.58642669e8 / 0.9699169339264204800000e22 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.1763e4 / 0.4415125991601178216155905138507120640000000e43 * pow(a, 0.39e2) * pow(x, 0.78e2) + pow(a, 0.44e2) * pow(x, 0.88e2) / 0.59072701661965528178747240244769242007103078400000000e53 + 0.1763e4 / 0.1177366931093647524308241370268565504000000000e46 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.252109e6 / 0.28e2 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.2022161e7 / 0.27650379941019176140800000e26 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.135751e6 / 0.12e2 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.1763e4 / 0.20319449008026461218337498993786880000000e41 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.21069613e8 / 0.1797120e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.407253e6 / 0.40e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.49665e5 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.2365e4 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.495e3 * a * a * pow(x, 0.4e1) - 0.58642669e8 / 0.2925567590400e13 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.45e2 * a * x * x + 0.273904969e9 / 0.4561920e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.16112057e8 / 0.63360e5 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.58642669e8 / 0.16208843413700896358400000e26 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.1763e4 / 0.112573124698207541375831019356160000000e39 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.1114210711e10 / 0.4157385523200e13 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.177232627e9 / 0.201600e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.177232627e9 / 0.72576e5 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.58642669e8 / 0.372141813069663436800000e24 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.65231e5 / 0.27382651953618050604931869573120000000e38 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.4790071e7 / 0.896e3 * pow(a, 0.8e1) * pow(x, 0.16e2));
  return retval;
}

inline double PHO_46_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.43e2 / 0.1049392264670424967318215134369808384000000000e46 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.65231e5 / 0.71554374525628754952192000000e29 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.58642669e8 / 0.131002415824896000000e21 * pow(a, 0.25e2) * pow(x, 0.50e2) - pow(a, 0.45e2) * pow(x, 0.90e2) / 0.2600483062293047707868764380340385110095298560000000000e55 + 0.58642669e8 / 0.4611285037036339200e19 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.65231e5 / 0.1048159783090264965120000000e28 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.2022161e7 / 0.540985694498201272320000000e27 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.65231e5 / 0.5565908132743551010209792000000e31 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.58642669e8 / 0.184131173353881600e18 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.1348781387e10 / 0.192136876543180800e18 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.43e2 / 0.370225590975725928469866299405668397875200000000e48 * pow(a, 0.42e2) * pow(x, 0.84e2) + pow(a, 0.46e2) * pow(x, 0.92e2) / 0.5502622159812088949850305428800254892961651752960000000000e58 - 0.1348781387e10 / 0.9924425441280000e16 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.65231e5 / 0.494937677034734228292501504000000e33 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.883684357e9 / 0.179640115200e12 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.65231e5 / 0.50524887863962452471526195200000000e35 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.15022634069e11 / 0.317011968000e12 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.1348781387e10 / 0.585113518080000e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.484601099e9 / 0.1238328000e10 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.484601099e9 / 0.176117760e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - pow(a, 0.43e2) * pow(x, 0.86e2) / 0.3979925102989053731051062718610935277158400000000e49 + 0.58642669e8 / 0.4217030147506176000000e22 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.1763e4 / 0.671866998721918424197637738468474880000000e42 * pow(a, 0.39e2) * pow(x, 0.78e2) + pow(a, 0.44e2) * pow(x, 0.88e2) / 0.2568378333128936007771619141076923565526220800000000e52 + 0.1763e4 / 0.153569599707867068388031483078508544000000000e45 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.446039e6 / 0.42e2 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.2022161e7 / 0.10218618673854912921600000e26 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.3122273e7 / 0.240e3 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.1763e4 / 0.3533817218787210646667391129354240000000e40 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.484601099e9 / 0.29652480e8 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.228459e6 / 0.20e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.54395e5 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.2530e4 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.1035e4 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.1348781387e10 / 0.39495162470400e14 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.46e2 * a * x * x + 0.370577311e9 / 0.4561920e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.370577311e9 / 0.1108800e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.58642669e8 / 0.6342590901013394227200000e25 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.1763e4 / 0.22025176571388432008314764656640000000e38 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.25626846353e11 / 0.58203397324800e14 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.4076350421e10 / 0.3628800e7 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.110171633e9 / 0.36288e5 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.58642669e8 / 0.153710748876600115200000e24 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.65231e5 / 0.5952750424699576218463449907200000000e37 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.5798507e7 / 0.896e3 * pow(a, 0.8e1) * pow(x, 0.16e2));
  return retval;
}

inline double PHO_47_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.2021e4 / 0.6296353588022549803909290806218850304000000000e46 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.3065857e7 / 0.1073315617884431324282880000000e31 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.2756205443e10 / 0.2882053148147712000000e22 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.47e2 / 0.5200966124586095415737528760680770220190597120000000000e55 * pow(a, 0.45e2) * pow(x, 0.90e2) + 0.2756205443e10 / 0.106059555851835801600e21 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.3065857e7 / 0.16770556529444239441920000000e29 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.95041567e8 / 0.9196756806469421629440000000e28 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.3065857e7 / 0.77922713858409714142937088000000e32 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.2756205443e10 / 0.4419148160493158400e19 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.63392725189e11 / 0.4803421913579520000e19 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.2021e4 / 0.1851127954878629642349331497028341989376000000000e49 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.47e2 / 0.5502622159812088949850305428800254892961651752960000000000e58 * pow(a, 0.46e2) * pow(x, 0.92e2) - 0.63392725189e11 / 0.258035061473280000e18 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.3065857e7 / 0.6434189801451544967802519552000000e34 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.41533164779e11 / 0.5389203456000e13 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.3065857e7 / 0.606298654367549429658314342400000000e36 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.22776251653e11 / 0.317011968000e12 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.63392725189e11 / 0.15798064988160000e17 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.22776251653e11 / 0.39626496000e11 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.22776251653e11 / 0.5811886080e10 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.47e2 / 0.15919700411956214924204250874443741108633600000000e50 * pow(a, 0.43e2) * pow(x, 0.86e2) + 0.2756205443e10 / 0.88557633097629696000000e23 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.82861e5 / 0.5374935989775347393581101907747799040000000e43 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.47e2 / 0.7705134999386808023314857423230770696578662400000000e52 * pow(a, 0.44e2) * pow(x, 0.88e2) + 0.82861e5 / 0.1074987197955069478716220381549559808000000000e46 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.20963833e8 / 0.1680e4 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.95041567e8 / 0.183935136129388432588800000e27 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.3579191e7 / 0.240e3 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.82861e5 / 0.31804354969084895820006520164188160000000e41 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.1339779509e10 / 0.59304960e8 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.511313e6 / 0.40e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.59455e5 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.5405e4 / 0.2e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.1081e4 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.63392725189e11 / 0.1105864549171200e16 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.47e2 * a * x * x + 0.17417133617e11 / 0.159667200e9 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.17417133617e11 / 0.39916800e8 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.2756205443e10 / 0.120509227119254490316800000e27 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.82861e5 / 0.220251765713884320083147646566400000000e39 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.41533164779e11 / 0.58203397324800e14 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.5178066751e10 / 0.3628800e7 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.272529829e9 / 0.72576e5 * pow(a, 0.9e1) * pow(x, 0.18e2) - pow(a, 0.47e2) * pow(x, 0.94e2) / 0.258623241511168180642964355153611979969197632389120000000000e60 - 0.2756205443e10 / 0.3074214977532002304000000e25 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.3065857e7 / 0.65480254671695338403097948979200000000e38 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.20963833e8 / 0.2688e4 * pow(a, 0.8e1) * pow(x, 0.16e2));
  return retval;
}

inline double PHO_48_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.2021e4 / 0.918218231586621846403438242573582336000000000e45 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.3065857e7 / 0.357771872628143774760960000000e30 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.2756205443e10 / 0.1380983800154112000000e22 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.47e2 / 0.325060382786630963483595547542548138761912320000000000e54 * pow(a, 0.45e2) * pow(x, 0.90e2) + 0.2756205443e10 / 0.53029777925917900800e20 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.3065857e7 / 0.5939572104178168135680000000e28 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.95041567e8 / 0.3448783802426033111040000000e28 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.3065857e7 / 0.24350848080753035669667840000000e32 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.2756205443e10 / 0.2301639666923520000e19 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.63392725189e11 / 0.2601853536522240000e19 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.2021e4 / 0.231390994359828705293666437128542748672000000000e48 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.47e2 / 0.229275923325503706243762726200010620540068823040000000000e57 * pow(a, 0.46e2) * pow(x, 0.92e2) - 0.63392725189e11 / 0.145144722078720000e18 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.3065857e7 / 0.1876638692090033948942401536000000e34 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.1339779509e10 / 0.112275072000e12 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.3065857e7 / 0.164205885557877970532460134400000000e36 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.22776251653e11 / 0.211341312000e12 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.63392725189e11 / 0.9215537909760000e16 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.22776251653e11 / 0.27243216000e11 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.1339779509e10 / 0.242161920e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.47e2 / 0.1658302126245439054604609466087889698816000000000e49 * pow(a, 0.43e2) * pow(x, 0.86e2) + 0.2756205443e10 / 0.40588915169746944000000e23 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.82861e5 / 0.1007800498082877636296456607702712320000000e43 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.47e2 / 0.642094583282234001942904785269230891381555200000000e51 * pow(a, 0.44e2) * pow(x, 0.88e2) + 0.82861e5 / 0.179164532992511579786036730258259968000000000e45 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.511313e6 / 0.35e2 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.95041567e8 / 0.72807658051216254566400000e26 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.511313e6 / 0.30e2 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.82861e5 / 0.6625907285226019962501358367539200000000e40 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.1339779509e10 / 0.43243200e8 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.71346e5 / 0.5e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.16215e5 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.8648e4 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.564e3 * a * a * pow(x, 0.4e1) - 0.2185956041e10 / 0.23038844774400e14 * pow(a, 0.19e2) * pow(x, 0.38e2) + pow(a, 0.48e2) * pow(x, 0.96e2) / 0.12413915592536072670862289047373375038521486354677760000000000e62 - 0.48e2 * a * x * x + 0.17417133617e11 / 0.119750400e9 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.470733341e9 / 0.831600e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.2756205443e10 / 0.50212177966356037632000000e26 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.82861e5 / 0.50474362976098490019054669004800000000e38 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.41533164779e11 / 0.36377123328000e14 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.272529829e9 / 0.151200e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.20963833e8 / 0.4536e4 * pow(a, 0.9e1) * pow(x, 0.18e2) - pow(a, 0.47e2) * pow(x, 0.94e2) / 0.5387984198149337096728424065700249582691617341440000000000e58 - 0.2756205443e10 / 0.1344969052670251008000000e25 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.3065857e7 / 0.16370063667923834600774487244800000000e38 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.20963833e8 / 0.2240e4 * pow(a, 0.8e1) * pow(x, 0.16e2));
  return retval;
}

inline double PHO_49_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.2021e4 / 0.149913180667203566759745019195686912000000000e45 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.3065857e7 / 0.124124935401600901447680000000e30 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.2756205443e10 / 0.676400228646912000000e21 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.47e2 / 0.26535541451969874570089432452452909286686720000000000e53 * pow(a, 0.45e2) * pow(x, 0.90e2) + 0.2756205443e10 / 0.27056009145876480000e20 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.3065857e7 / 0.2181883630106265845760000000e28 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.95041567e8 / 0.1337283515226421002240000000e28 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.3065857e7 / 0.7951297332490787157442560000000e31 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.2756205443e10 / 0.1221278190612480000e19 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.63392725189e11 / 0.1433674397675520000e19 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.2021e4 / 0.33055856337118386470523776732648964096000000000e47 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.47e2 / 0.14037301428092063647577309767347589012657274880000000000e56 * pow(a, 0.46e2) * pow(x, 0.92e2) - 0.63392725189e11 / 0.82939841187840000e17 * pow(a, 0.21e2) * pow(x, 0.42e2) - pow(a, 0.49e2) * pow(x, 0.98e2) / 0.608281864034267560872252163321295376887552831379210240000000000e63 + 0.3065857e7 / 0.574481232272459372125224960000000e33 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.1339779509e10 / 0.73322496000e11 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.3065857e7 / 0.46915967302250848723560038400000000e35 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.22776251653e11 / 0.142331904000e12 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.2185956041e10 / 0.188072202240000e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.1339779509e10 / 0.1111968000e10 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.1339779509e10 / 0.172972800e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.47e2 / 0.203057403213727231176074628500557922304000000000e48 * pow(a, 0.43e2) * pow(x, 0.86e2) + 0.2756205443e10 / 0.19051939773554688000000e23 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.82861e5 / 0.205673571037321966591113593408716800000000e42 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.47e2 / 0.65519855436962653259480080129513356263424000000000e50 * pow(a, 0.44e2) * pow(x, 0.88e2) + 0.82861e5 / 0.32907771365971514654578174945394688000000000e44 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.511313e6 / 0.30e2 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.95041567e8 / 0.29717411449476022272000000e26 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.582659e6 / 0.30e2 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.82861e5 / 0.1487448574234412644643162082508800000000e40 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.9378456563e10 / 0.222393600e9 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.158907e6 / 0.10e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.52969e5 / 0.6e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.9212e4 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.588e3 * a * a * pow(x, 0.4e1) - 0.2185956041e10 / 0.14105415168000e14 * pow(a, 0.19e2) * pow(x, 0.38e2) + pow(a, 0.48e2) * pow(x, 0.96e2) / 0.253345216174205564711475286681089286500438497034240000000000e60 - 0.49e2 * a * x * x + 0.3295133387e10 / 0.17107200e8 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.173428073e9 / 0.237600e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.2756205443e10 / 0.21519504842724016128000000e26 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.82861e5 / 0.12361068483942487351605225062400000000e38 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.1339779509e10 / 0.742390272000e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.146746831e9 / 0.64800e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.146746831e9 / 0.25920e5 * pow(a, 0.9e1) * pow(x, 0.18e2) - pow(a, 0.47e2) * pow(x, 0.94e2) / 0.219917722373442330478711186355112227864963973120000000000e57 - 0.2756205443e10 / 0.603863656300929024000000e24 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.3065857e7 / 0.4343078115979792853266700697600000000e37 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.3579191e7 / 0.320e3 * pow(a, 0.8e1) * pow(x, 0.16e2));
  return retval;
}

inline double PHO_50_0(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * (0.1e1 - 0.2021e4 / 0.26984372520096642016754103455223644160000000e44 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.3065857e7 / 0.44684976744576324521164800000e29 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.2756205443e10 / 0.338200114323456000000e21 * pow(a, 0.25e2) * pow(x, 0.50e2) + pow(a, 0.50e2) * pow(x, 0.100e3) / 0.30414093201713378043612608166064768844377641568960512000000000000e65 - 0.47e2 / 0.2653554145196987457008943245245290928668672000000000e52 * pow(a, 0.45e2) * pow(x, 0.90e2) + 0.2756205443e10 / 0.14069124755855769600e20 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.3065857e7 / 0.829115779440381021388800000e27 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.95041567e8 / 0.534913406090568400896000000e27 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.3065857e7 / 0.2703441093046867633530470400000e31 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.2756205443e10 / 0.659490222930739200e18 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.63392725189e11 / 0.802857662698291200e18 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.2021e4 / 0.5288937013938941835283804277223834255360000000e46 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.47e2 / 0.1122984114247365091806184781387807121012581990400000000e55 * pow(a, 0.46e2) * pow(x, 0.92e2) - 0.2185956041e10 / 0.1658796823756800e16 * pow(a, 0.21e2) * pow(x, 0.42e2) - pow(a, 0.49e2) * pow(x, 0.98e2) / 0.12165637280685351217445043266425907537751056627584204800000000e62 + 0.3065857e7 / 0.183833994327186999080071987200000e33 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.1339779509e10 / 0.48392847360e11 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.3065857e7 / 0.14074790190675254617068011520000000e35 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.1339779509e10 / 0.5693276160e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.2185956041e10 / 0.112843321344000e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.1339779509e10 / 0.778377600e9 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.1339779509e10 / 0.124540416e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.47e2 / 0.28428036449921812364650447990078109122560000000e47 * pow(a, 0.43e2) * pow(x, 0.86e2) + 0.2756205443e10 / 0.9144931091306250240000e22 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.82861e5 / 0.45248185628210832650044990549917696000000e41 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.47e2 / 0.7862382652435518391137609615541602751610880000000e49 * pow(a, 0.44e2) * pow(x, 0.88e2) + 0.82861e5 / 0.6581554273194302930915634989078937600000000e43 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.59455e5 / 0.3e1 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.95041567e8 / 0.12481312808779929354240000e26 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.264845e6 / 0.12e2 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.82861e5 / 0.356987657816259034714358899802112000000e39 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.253471799e9 / 0.4447872e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.52969e5 / 0.3e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.57575e5 / 0.6e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.9800e4 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.1225e4 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.70514711e8 / 0.282108303360e12 * pow(a, 0.19e2) * pow(x, 0.38e2) + pow(a, 0.48e2) * pow(x, 0.96e2) / 0.10133808646968222588459011467243571460017539881369600000000e59 - 0.50e2 * a * x * x + 0.173428073e9 / 0.684288e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.13340621e8 / 0.14256e5 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.2756205443e10 / 0.9468582130798567096320000e25 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.82861e5 / 0.3213877805825046711417358516224000000e37 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.1339779509e10 / 0.475129774080e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.146746831e9 / 0.51840e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.17895955e8 / 0.2592e4 * pow(a, 0.9e1) * pow(x, 0.18e2) - pow(a, 0.47e2) * pow(x, 0.94e2) / 0.13195063342406539828722671181306733671897838387200000000e56 - 0.2756205443e10 / 0.277777281898427351040000e24 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.3065857e7 / 0.1216061872474341998914676195328000000e37 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.2556565e7 / 0.192e3 * pow(a, 0.8e1) * pow(x, 0.16e2));
  return retval;
}

inline double PHO_0_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x);
  return retval;
}

inline double PHO_1_1(const double a, const double x)
{
  double retval = sqrt(a) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (-a * x * x + 0.2e1);
  return retval;
}

inline double PHO_2_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.3e1) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (a * a * pow(x, 0.4e1) - 0.6e1 * a * x * x + 0.6e1) / 0.6e1;
  return retval;
}

inline double PHO_3_1(const double a, const double x)
{
  double retval = -sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (pow(a, 0.3e1) * pow(x, 0.6e1) - 0.12e2 * a * a * pow(x, 0.4e1) + 0.36e2 * a * x * x - 0.24e2) / 0.12e2;
  return retval;
}

inline double PHO_4_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.5e1) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (pow(a, 0.4e1) * pow(x, 0.8e1) - 0.20e2 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.120e3 * a * a * pow(x, 0.4e1) - 0.240e3 * a * x * x + 0.120e3) / 0.120e3;
  return retval;
}

inline double PHO_5_1(const double a, const double x)
{
  double retval = -sqrt(0.2e1) * sqrt(a) * sqrt(0.6e1) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (pow(a, 0.5e1) * pow(x, 0.10e2) - 0.30e2 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.300e3 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.1200e4 * a * a * pow(x, 0.4e1) + 0.1800e4 * a * x * x - 0.720e3) / 0.720e3;
  return retval;
}

inline double PHO_6_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.7e1) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (pow(a, 0.6e1) * pow(x, 0.12e2) - 0.42e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.630e3 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.4200e4 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.12600e5 * a * a * pow(x, 0.4e1) - 0.15120e5 * a * x * x + 0.5040e4) / 0.5040e4;
  return retval;
}

inline double PHO_7_1(const double a, const double x)
{
  double retval = sqrt(a) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.8e1 - 0.28e2 * a * x * x + 0.28e2 * a * a * pow(x, 0.4e1) - 0.35e2 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.7e1 / 0.3e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.7e1 / 0.30e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + pow(a, 0.6e1) * pow(x, 0.12e2) / 0.90e2 - pow(a, 0.7e1) * pow(x, 0.14e2) / 0.5040e4) / 0.2e1;
  return retval;
}

inline double PHO_8_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.9e1 - 0.36e2 * a * x * x + 0.42e2 * a * a * pow(x, 0.4e1) - 0.21e2 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.21e2 / 0.4e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.7e1 / 0.10e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + pow(a, 0.6e1) * pow(x, 0.12e2) / 0.20e2 - pow(a, 0.7e1) * pow(x, 0.14e2) / 0.560e3 + pow(a, 0.8e1) * pow(x, 0.16e2) / 0.40320e5) / 0.3e1;
  return retval;
}

inline double PHO_9_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.10e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.10e2 - 0.45e2 * a * x * x + 0.60e2 * a * a * pow(x, 0.4e1) - 0.35e2 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.21e2 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.7e1 / 0.4e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + pow(a, 0.6e1) * pow(x, 0.12e2) / 0.6e1 - pow(a, 0.7e1) * pow(x, 0.14e2) / 0.112e3 + pow(a, 0.8e1) * pow(x, 0.16e2) / 0.4032e4 - pow(a, 0.9e1) * pow(x, 0.18e2) / 0.362880e6) / 0.10e2;
  return retval;
}

inline double PHO_10_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.11e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.11e2 - 0.55e2 * a * x * x + 0.165e3 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.55e2 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.77e2 / 0.4e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.77e2 / 0.20e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.11e2 / 0.24e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.11e2 / 0.336e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.11e2 / 0.8064e4 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.11e2 / 0.362880e6 * pow(a, 0.9e1) * pow(x, 0.18e2) + pow(a, 0.10e2) * pow(x, 0.20e2) / 0.3628800e7) / 0.11e2;
  return retval;
}

inline double PHO_11_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.3e1) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.12e2 - 0.66e2 * a * x * x + 0.110e3 * a * a * pow(x, 0.4e1) - 0.165e3 / 0.2e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.33e2 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.77e2 / 0.10e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.11e2 / 0.10e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.11e2 / 0.112e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.11e2 / 0.2016e4 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.11e2 / 0.60480e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + pow(a, 0.10e2) * pow(x, 0.20e2) / 0.302400e6 - pow(a, 0.11e2) * pow(x, 0.22e2) / 0.39916800e8) / 0.6e1;
  return retval;
}

inline double PHO_12_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.13e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.13e2 - 0.78e2 * a * x * x + 0.143e3 * a * a * pow(x, 0.4e1) - 0.715e3 / 0.6e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.429e3 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.143e3 / 0.10e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.143e3 / 0.60e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.143e3 / 0.560e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.143e3 / 0.8064e4 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.143e3 / 0.181440e6 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.13e2 / 0.604800e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.13e2 / 0.39916800e8 * pow(a, 0.11e2) * pow(x, 0.22e2) + pow(a, 0.12e2) * pow(x, 0.24e2) / 0.479001600e9) / 0.13e2;
  return retval;
}

inline double PHO_13_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.14e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.14e2 - 0.91e2 * a * x * x + 0.182e3 * a * a * pow(x, 0.4e1) - 0.1001e4 / 0.6e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.1001e4 / 0.12e2 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.1001e4 / 0.40e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.143e3 / 0.30e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.143e3 / 0.240e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.143e3 / 0.2880e4 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.143e3 / 0.51840e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.13e2 / 0.129600e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.13e2 / 0.5702400e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + pow(a, 0.12e2) * pow(x, 0.24e2) / 0.34214400e8 - pow(a, 0.13e2) * pow(x, 0.26e2) / 0.6227020800e10) / 0.14e2;
  return retval;
}

inline double PHO_14_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.15e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.15e2 - 0.105e3 * a * x * x + 0.455e3 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.455e3 / 0.2e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.1001e4 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.1001e4 / 0.24e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.143e3 / 0.16e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.143e3 / 0.112e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.143e3 / 0.1152e4 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.143e3 / 0.17280e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.13e2 / 0.34560e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.13e2 / 0.1140480e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + pow(a, 0.12e2) * pow(x, 0.24e2) / 0.4561920e7 - pow(a, 0.13e2) * pow(x, 0.26e2) / 0.415134720e9 + pow(a, 0.14e2) * pow(x, 0.28e2) / 0.87178291200e11) / 0.15e2;
  return retval;
}

inline double PHO_15_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.16e2 - 0.120e3 * a * x * x + 0.280e3 * a * a * pow(x, 0.4e1) - 0.910e3 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.182e3 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.1001e4 / 0.15e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.143e3 / 0.9e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.143e3 / 0.56e2 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.143e3 / 0.504e3 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.143e3 / 0.6480e4 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.13e2 / 0.10800e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.13e2 / 0.285120e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + pow(a, 0.12e2) * pow(x, 0.24e2) / 0.855360e6 - pow(a, 0.13e2) * pow(x, 0.26e2) / 0.51891840e8 + pow(a, 0.14e2) * pow(x, 0.28e2) / 0.5448643200e10 - pow(a, 0.15e2) * pow(x, 0.30e2) / 0.1307674368000e13) / 0.4e1;
  return retval;
}

inline double PHO_16_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.17e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.17e2 - 0.136e3 * a * x * x + 0.340e3 * a * a * pow(x, 0.4e1) - 0.1190e4 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.1547e4 / 0.6e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.1547e4 / 0.15e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.2431e4 / 0.90e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.2431e4 / 0.504e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.2431e4 / 0.4032e4 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.2431e4 / 0.45360e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.221e3 / 0.64800e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.221e3 / 0.1425600e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.17e2 / 0.3421440e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.17e2 / 0.155675520e9 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.17e2 / 0.10897286400e11 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.17e2 / 0.1307674368000e13 * pow(a, 0.15e2) * pow(x, 0.30e2) + pow(a, 0.16e2) * pow(x, 0.32e2) / 0.20922789888000e14) / 0.17e2;
  return retval;
}

inline double PHO_17_1(const double a, const double x)
{
  double retval = sqrt(a) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.18e2 - 0.153e3 * a * x * x + 0.408e3 * a * a * pow(x, 0.4e1) - 0.510e3 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.357e3 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.1547e4 / 0.10e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.221e3 / 0.5e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.2431e4 / 0.280e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.2431e4 / 0.2016e4 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.2431e4 / 0.20160e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.221e3 / 0.25200e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.221e3 / 0.475200e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.17e2 / 0.950400e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.17e2 / 0.34594560e8 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.17e2 / 0.1816214400e10 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.17e2 / 0.145297152000e12 * pow(a, 0.15e2) * pow(x, 0.30e2) + pow(a, 0.16e2) * pow(x, 0.32e2) / 0.1162377216000e13 - pow(a, 0.17e2) * pow(x, 0.34e2) / 0.355687428096000e15) / 0.3e1;
  return retval;
}

inline double PHO_18_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.19e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.19e2 - 0.171e3 * a * x * x + 0.969e3 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.646e3 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.969e3 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.2261e4 / 0.10e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.4199e4 / 0.60e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.4199e4 / 0.280e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.46189e5 / 0.20160e5 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.46189e5 / 0.181440e6 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.4199e4 / 0.201600e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.4199e4 / 0.3326400e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.323e3 / 0.5702400e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.323e3 / 0.172972800e9 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.323e3 / 0.7264857600e10 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.323e3 / 0.435891456000e12 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.19e2 / 0.2324754432000e13 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.19e2 / 0.355687428096000e15 * pow(a, 0.17e2) * pow(x, 0.34e2) + pow(a, 0.18e2) * pow(x, 0.36e2) / 0.6402373705728000e16) / 0.19e2;
  return retval;
}

inline double PHO_19_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.5e1) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.20e2 - 0.190e3 * a * x * x + 0.570e3 * a * a * pow(x, 0.4e1) - 0.1615e4 / 0.2e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.646e3 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.323e3 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.323e3 / 0.3e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.4199e4 / 0.168e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.4199e4 / 0.1008e4 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.46189e5 / 0.90720e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.4199e4 / 0.90720e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.4199e4 / 0.1330560e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.323e3 / 0.1995840e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.323e3 / 0.51891840e8 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.323e3 / 0.1816214400e10 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.323e3 / 0.87178291200e11 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.19e2 / 0.348713164800e12 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.19e2 / 0.35568742809600e14 * pow(a, 0.17e2) * pow(x, 0.34e2) + pow(a, 0.18e2) * pow(x, 0.36e2) / 0.320118685286400e15 - pow(a, 0.19e2) * pow(x, 0.38e2) / 0.121645100408832000e18) / 0.10e2;
  return retval;
}

inline double PHO_20_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.21e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.21e2 - 0.210e3 * a * x * x + 0.665e3 * a * a * pow(x, 0.4e1) - 0.1995e4 / 0.2e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.6783e4 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.2261e4 / 0.5e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.323e3 / 0.2e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.323e3 / 0.8e1 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.4199e4 / 0.576e3 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.4199e4 / 0.4320e4 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.4199e4 / 0.43200e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.4199e4 / 0.570240e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.323e3 / 0.760320e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.323e3 / 0.17297280e8 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.323e3 / 0.518918400e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.323e3 / 0.20756736000e11 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.19e2 / 0.66421555200e11 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.19e2 / 0.5081248972800e13 * pow(a, 0.17e2) * pow(x, 0.34e2) + pow(a, 0.18e2) * pow(x, 0.36e2) / 0.30487493836800e14 - pow(a, 0.19e2) * pow(x, 0.38e2) / 0.5792623828992000e16 + pow(a, 0.20e2) * pow(x, 0.40e2) / 0.2432902008176640000e19) / 0.21e2;
  return retval;
}

inline double PHO_21_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.22e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.22e2 - 0.231e3 * a * x * x + 0.770e3 * a * a * pow(x, 0.4e1) - 0.7315e4 / 0.6e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.4389e4 / 0.4e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.24871e5 / 0.40e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.3553e4 / 0.15e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.3553e4 / 0.56e2 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.3553e4 / 0.288e3 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.46189e5 / 0.25920e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.4199e4 / 0.21600e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.4199e4 / 0.259200e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.323e3 / 0.311040e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.323e3 / 0.6289920e7 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.323e3 / 0.165110400e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.323e3 / 0.5660928000e10 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.19e2 / 0.15095808000e11 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.19e2 / 0.923863449600e12 * pow(a, 0.17e2) * pow(x, 0.34e2) + pow(a, 0.18e2) * pow(x, 0.36e2) / 0.4157385523200e13 - pow(a, 0.19e2) * pow(x, 0.38e2) / 0.526602166272000e15 + pow(a, 0.20e2) * pow(x, 0.40e2) / 0.110586454917120000e18 - pow(a, 0.21e2) * pow(x, 0.42e2) / 0.51090942171709440000e20) / 0.22e2;
  return retval;
}

inline double PHO_22_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.23e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.23e2 - 0.253e3 * a * x * x + 0.1771e4 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.8855e4 / 0.6e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.33649e5 / 0.24e2 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.33649e5 / 0.40e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.81719e5 / 0.240e3 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.81719e5 / 0.840e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.81719e5 / 0.4032e4 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.81719e5 / 0.25920e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.96577e5 / 0.259200e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.96577e5 / 0.2851200e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.7429e4 / 0.3110400e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.7429e4 / 0.56609280e8 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.7429e4 / 0.1320883200e10 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.7429e4 / 0.39626496000e11 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.437e3 / 0.90574848000e11 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.437e3 / 0.4619317248000e13 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.23e2 / 0.16629542092800e14 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.23e2 / 0.1579806498816000e16 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.23e2 / 0.221172909834240000e18 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.23e2 / 0.51090942171709440000e20 * pow(a, 0.21e2) * pow(x, 0.42e2) + pow(a, 0.22e2) * pow(x, 0.44e2) / 0.1124000727777607680000e22) / 0.23e2;
  return retval;
}

inline double PHO_23_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.6e1) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.24e2 - 0.276e3 * a * x * x + 0.1012e4 * a * a * pow(x, 0.4e1) - 0.1771e4 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.1771e4 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.33649e5 / 0.30e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.4807e4 / 0.10e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.81719e5 / 0.560e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.81719e5 / 0.2520e4 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.81719e5 / 0.15120e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.7429e4 / 0.10800e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.96577e5 / 0.1425600e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.7429e4 / 0.1425600e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.7429e4 / 0.23587200e8 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.7429e4 / 0.495331200e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.7429e4 / 0.13208832000e11 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.437e3 / 0.26417664000e11 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.437e3 / 0.1154829312000e13 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.23e2 / 0.3464487936000e13 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.23e2 / 0.263301083136000e15 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.23e2 / 0.27646613729280000e17 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.23e2 / 0.4257578514309120000e19 * pow(a, 0.21e2) * pow(x, 0.42e2) + pow(a, 0.22e2) * pow(x, 0.44e2) / 0.46833363657400320000e20 - pow(a, 0.23e2) * pow(x, 0.46e2) / 0.25852016738884976640000e23) / 0.12e2;
  return retval;
}

inline double PHO_24_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.25e2 - pow(a, 0.23e2) * pow(x, 0.46e2) / 0.1034080669555399065600e22 + 0.23e2 / 0.4423458196684800e16 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.7429e4 / 0.10378368e8 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.437e3 / 0.323352207360e12 * pow(a, 0.17e2) * pow(x, 0.34e2) + pow(a, 0.24e2) * pow(x, 0.48e2) / 0.620448401733239439360000e24 - 0.23e2 / 0.510909421717094400e18 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.23e2 / 0.52660216627200e14 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.23e2 / 0.831477104640e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + pow(a, 0.22e2) * pow(x, 0.44e2) / 0.3746669092592025600e19 - 0.24035e5 / 0.112e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.24035e5 / 0.36e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.8855e4 / 0.6e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.8855e4 / 0.4e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.6325e4 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.437e3 / 0.8453652480e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.1150e4 * a * a * pow(x, 0.4e1) - 0.300e3 * a * x * x + 0.7429e4 / 0.684288e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.7429e4 / 0.4755179520e10 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.7429e4 / 0.57024e5 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.7429e4 / 0.6048e4 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.7429e4 / 0.198132480e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.81719e5 / 0.9072e4 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.408595e6 / 0.8064e4 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.5e1;
  return retval;
}

inline double PHO_25_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.26e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.26e2 - pow(a, 0.23e2) * pow(x, 0.46e2) / 0.79544666888876851200e20 + 0.23e2 / 0.850665037824000e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.7429e4 / 0.4790016e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - pow(a, 0.25e2) * pow(x, 0.50e2) / 0.15511210043330985984000000e26 - 0.437e3 / 0.99492986880e11 * pow(a, 0.17e2) * pow(x, 0.34e2) + pow(a, 0.24e2) * pow(x, 0.48e2) / 0.23863400066663055360000e23 - 0.23e2 / 0.78601449494937600e17 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.23e2 / 0.12152357683200e14 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.23e2 / 0.223859220480e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + pow(a, 0.22e2) * pow(x, 0.44e2) / 0.432307972222156800e18 - 0.312455e6 / 0.1008e4 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.16445e5 / 0.18e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.23023e5 / 0.12e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.16445e5 / 0.6e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.7475e4 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.437e3 / 0.2926264320e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.1300e4 * a * a * pow(x, 0.4e1) - 0.325e3 * a * x * x + 0.7429e4 / 0.342144e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.7429e4 / 0.1828915200e10 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.96577e5 / 0.399168e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.96577e5 / 0.45360e5 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.7429e4 / 0.83825280e8 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.1062347e7 / 0.72576e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.312455e6 / 0.4032e4 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.26e2;
  return retval;
}

inline double PHO_26_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.3e1) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.27e2 - pow(a, 0.23e2) * pow(x, 0.46e2) / 0.8838296320986316800e19 + 0.23e2 / 0.189036675072000e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.7429e4 / 0.2306304e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - pow(a, 0.25e2) * pow(x, 0.50e2) / 0.574489260864110592000000e24 - 0.437e3 / 0.33164328960e11 * pow(a, 0.17e2) * pow(x, 0.34e2) + pow(a, 0.24e2) * pow(x, 0.48e2) / 0.1767659264197263360000e22 + pow(a, 0.26e2) * pow(x, 0.52e2) / 0.403291461126605635584000000e27 - 0.23e2 / 0.14555823980544000e17 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.23e2 / 0.3150611251200e13 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.23e2 / 0.66328657920e11 * pow(a, 0.18e2) * pow(x, 0.36e2) + pow(a, 0.22e2) * pow(x, 0.44e2) / 0.64045625514393600e17 - 0.49335e5 / 0.112e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.9867e4 / 0.8e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.9867e4 / 0.4e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.13455e5 / 0.4e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.2925e4 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.437e3 / 0.1083801600e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.2925e4 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.351e3 * a * x * x + 0.7429e4 / 0.177408e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.7429e4 / 0.745113600e9 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.96577e5 / 0.221760e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.96577e5 / 0.26880e5 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.7429e4 / 0.37255680e8 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.62491e5 / 0.2688e4 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.312455e6 / 0.2688e4 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.9e1;
  return retval;
}

inline double PHO_27_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.7e1) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.28e2 - pow(a, 0.23e2) * pow(x, 0.46e2) / 0.1262613760140902400e19 + 0.23e2 / 0.47259168768000e14 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.7429e4 / 0.1153152e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - pow(a, 0.25e2) * pow(x, 0.50e2) / 0.41034947204579328000000e23 - 0.437e3 / 0.11844403200e11 * pow(a, 0.17e2) * pow(x, 0.34e2) + pow(a, 0.24e2) * pow(x, 0.48e2) / 0.189392064021135360000e21 + pow(a, 0.26e2) * pow(x, 0.52e2) / 0.14403266468807344128000000e26 - 0.23e2 / 0.3119105138688000e16 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.23e2 / 0.900174643200e12 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.23e2 / 0.21319925760e11 * pow(a, 0.18e2) * pow(x, 0.36e2) + pow(a, 0.22e2) * pow(x, 0.44e2) / 0.11436718841856000e17 - 0.9867e4 / 0.16e2 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.3289e4 / 0.2e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.6279e4 / 0.2e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.4095e4 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.6825e4 / 0.2e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - pow(a, 0.27e2) * pow(x, 0.54e2) / 0.10888869450418352160768000000e29 + 0.437e3 / 0.425779200e9 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.1638e4 * a * a * pow(x, 0.4e1) - 0.378e3 * a * x * x + 0.7429e4 / 0.95040e5 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.7429e4 / 0.319334400e9 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.96577e5 / 0.126720e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.5681e4 / 0.960e3 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.7429e4 / 0.17297280e8 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.62491e5 / 0.1728e4 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.16445e5 / 0.96e2 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.14e2;
  return retval;
}

inline double PHO_28_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.29e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.29e2 - 0.29e2 / 0.6313068800704512000e19 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.667e3 / 0.378073350144000e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.215441e6 / 0.17297280e8 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.29e2 / 0.123104841613737984000000e24 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.12673e5 / 0.130288435200e12 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.29e2 / 0.757568256084541440000e21 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.29e2 / 0.28806532937614688256000000e26 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.667e3 / 0.21833735970816000e17 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.667e3 / 0.8101571788800e13 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.667e3 / 0.213199257600e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.29e2 / 0.68620313051136000e17 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.95381e5 / 0.112e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.8671e4 / 0.4e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.7917e4 / 0.2e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.39585e5 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.7917e4 / 0.2e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.29e2 / 0.10888869450418352160768000000e29 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.12673e5 / 0.5109350400e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.1827e4 * a * a * pow(x, 0.4e1) - 0.406e3 * a * x * x + 0.215441e6 / 0.1520640e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.215441e6 / 0.4151347200e10 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.164749e6 / 0.126720e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + pow(a, 0.28e2) * pow(x, 0.56e2) / 0.304888344611713860501504000000e30 + 0.164749e6 / 0.17280e5 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.215441e6 / 0.242161920e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.95381e5 / 0.1728e4 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.95381e5 / 0.384e3 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.29e2;
  return retval;
}

inline double PHO_29_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.30e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.30e2 - 0.29e2 / 0.1262613760140902400e19 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.667e3 / 0.113422005043200e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.215441e6 / 0.9225216e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.29e2 / 0.16413978881831731200000e23 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.12673e5 / 0.52115374080e11 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.29e2 / 0.126261376014090240000e21 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.29e2 / 0.2880653293761468825600000e25 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.667e3 / 0.5822329592217600e16 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.667e3 / 0.2700523929600e13 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.667e3 / 0.78173061120e11 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.29e2 / 0.16011406378598400e17 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.130065e6 / 0.112e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - pow(a, 0.29e2) * pow(x, 0.58e2) / 0.8841761993739701954543616000000e31 + 0.5655e4 / 0.2e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.39585e5 / 0.8e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.23751e5 / 0.4e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.9135e4 / 0.2e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.29e2 / 0.725924630027890144051200000e27 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.12673e5 / 0.2214051840e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.2030e4 * a * a * pow(x, 0.4e1) - 0.435e3 * a * x * x + 0.12673e5 / 0.50688e5 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.215441e6 / 0.1937295360e10 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.164749e6 / 0.76032e5 * pow(a, 0.11e2) * pow(x, 0.22e2) + pow(a, 0.28e2) * pow(x, 0.56e2) / 0.10162944820390462016716800000e29 + 0.8671e4 / 0.576e3 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.215441e6 / 0.121080960e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.95381e5 / 0.1152e4 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.476905e6 / 0.1344e4 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.30e2;
  return retval;
}

inline double PHO_30_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.31e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.31e2 - 0.899e3 / 0.8838296320986316800e19 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.20677e5 / 0.1134220050432000e16 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.392863e6 / 0.9225216e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.899e3 / 0.82069894409158656000000e23 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.392863e6 / 0.677499863040e12 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.899e3 / 0.757568256084541440000e21 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.899e3 / 0.11522613175045875302400000e26 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.20677e5 / 0.52400966329958400e17 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.20677e5 / 0.29705763225600e14 * pow(a, 0.19e2) * pow(x, 0.38e2) + pow(a, 0.30e2) * pow(x, 0.60e2) / 0.265252859812191058636308480000000e33 + 0.20677e5 / 0.938076733440e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.899e3 / 0.128091251028787200e18 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.175305e6 / 0.112e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.31e2 / 0.8841761993739701954543616000000e31 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.58435e5 / 0.16e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.245427e6 / 0.40e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.56637e5 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.31465e5 / 0.6e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.899e3 / 0.2177773890083670432153600000e28 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.392863e6 / 0.30996725760e11 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.4495e4 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.465e3 * a * x * x + 0.392863e6 / 0.912384e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.6678671e7 / 0.29059430400e11 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.268801e6 / 0.76032e5 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.31e2 / 0.20325889640780924033433600000e29 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.268801e6 / 0.11520e5 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.6678671e7 / 0.1937295360e10 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.2956811e7 / 0.24192e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.1344005e7 / 0.2688e4 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.31e2;
  return retval;
}

inline double PHO_31_1(const double a, const double x)
{
  double retval = sqrt(a) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.32e2 - 0.899e3 / 0.2209574080246579200e19 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.20677e5 / 0.389888142336000e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.392863e6 / 0.5189184e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.899e3 / 0.15388105201717248000000e23 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.392863e6 / 0.296406190080e12 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.899e3 / 0.165718056018493440000e21 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.899e3 / 0.1800408308600918016000000e25 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.20677e5 / 0.16375301978112000e17 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.20677e5 / 0.11139661209600e14 * pow(a, 0.19e2) * pow(x, 0.38e2) + pow(a, 0.30e2) * pow(x, 0.60e2) / 0.8289151869130970582384640000000e31 - pow(a, 0.31e2) * pow(x, 0.62e2) / 0.8222838654177922817725562880000000e34 + 0.20677e5 / 0.381093672960e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.899e3 / 0.36025664351846400e17 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.58435e5 / 0.28e2 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.31e2 / 0.552610124608731372158976000000e30 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.23374e5 / 0.5e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.37758e5 / 0.5e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.25172e5 / 0.3e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.17980e5 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.899e3 / 0.272221736260458804019200000e27 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.392863e6 / 0.14529715200e11 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.2480e4 * a * a * pow(x, 0.4e1) - 0.496e3 * a * x * x + 0.20677e5 / 0.28512e5 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.6678671e7 / 0.14529715200e11 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.268801e6 / 0.47520e5 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.31e2 / 0.1905552153823211628134400000e28 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.268801e6 / 0.7560e4 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.392863e6 / 0.60540480e8 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.268801e6 / 0.1512e4 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.58435e5 / 0.84e2 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.4e1;
  return retval;
}

inline double PHO_32_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.33e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.33e2 - 0.899e3 / 0.602611112794521600e18 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.20677e5 / 0.141777506304000e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.20677e5 / 0.157248e6 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.899e3 / 0.3264143527636992000000e22 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.392863e6 / 0.134730086400e12 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.899e3 / 0.40174074186301440000e20 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.899e3 / 0.327346965200166912000000e24 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.20677e5 / 0.5458433992704000e16 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.20677e5 / 0.4388351385600e13 * pow(a, 0.19e2) * pow(x, 0.38e2) + pow(a, 0.30e2) * pow(x, 0.60e2) / 0.502372840553392156508160000000e30 - pow(a, 0.31e2) * pow(x, 0.62e2) / 0.249176928914482509628047360000000e33 + 0.20677e5 / 0.161676103680e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.899e3 / 0.10916867985408000e17 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.385671e6 / 0.140e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.31e2 / 0.50237284055339215650816000000e29 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.29667e5 / 0.5e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.138446e6 / 0.15e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.9889e4 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.6820e4 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.899e3 / 0.41245717615221030912000000e26 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.392863e6 / 0.7044710400e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.2728e4 * a * a * pow(x, 0.4e1) - 0.528e3 * a * x * x + 0.20677e5 / 0.17280e5 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.392863e6 / 0.440294400e9 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.268801e6 / 0.30240e5 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.31e2 / 0.230976018645237773107200000e27 * pow(a, 0.28e2) * pow(x, 0.56e2) + pow(a, 0.32e2) * pow(x, 0.64e2) / 0.263130836933693530167218012160000000e36 + 0.268801e6 / 0.5040e4 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.392863e6 / 0.33022080e8 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.128557e6 / 0.504e3 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.642785e6 / 0.672e3 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.33e2;
  return retval;
}

inline double PHO_33_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.34e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.34e2 - 0.899e3 / 0.177238562586624000e18 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.20677e5 / 0.54209046528000e14 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.351509e6 / 0.1572480e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.899e3 / 0.768033771208704000000e21 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.392863e6 / 0.63402393600e11 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.899e3 / 0.10634313755197440000e20 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.899e3 / 0.67394963423563776000000e23 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.20677e5 / 0.1926506115072000e16 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.20677e5 / 0.1806968217600e13 * pow(a, 0.19e2) * pow(x, 0.38e2) + pow(a, 0.30e2) * pow(x, 0.60e2) / 0.44327015342946366750720000000e29 - pow(a, 0.33e2) * pow(x, 0.66e2) / 0.8683317618811886495518194401280000000e37 - pow(a, 0.31e2) * pow(x, 0.62e2) / 0.14657466406734265272238080000000e32 + 0.20677e5 / 0.71327692800e11 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.899e3 / 0.3531927877632000e16 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.504339e6 / 0.140e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.31e2 / 0.5910268712392848900096000000e28 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.336226e6 / 0.45e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.168113e6 / 0.15e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.11594e5 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.23188e5 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.899e3 / 0.7278656049744887808000000e25 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.392863e6 / 0.3522355200e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.2992e4 * a * a * pow(x, 0.4e1) - 0.561e3 * a * x * x + 0.351509e6 / 0.181440e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.6678671e7 / 0.3962649600e10 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.4569617e7 / 0.332640e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.31e2 / 0.33967061565476143104000000e26 * pow(a, 0.28e2) * pow(x, 0.56e2) + pow(a, 0.32e2) * pow(x, 0.64e2) / 0.7739142262755692063741706240000000e34 + 0.198679e6 / 0.2520e4 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.351509e6 / 0.16511040e8 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.2185469e7 / 0.6048e4 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.2185469e7 / 0.1680e4 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.34e2;
  return retval;
}

inline double PHO_34_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.35e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.35e2 - 0.899e3 / 0.55703548241510400e17 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.20677e5 / 0.21683618611200e14 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.351509e6 / 0.943488e6 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.899e3 / 0.197494398310809600000e21 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.392863e6 / 0.30795448320e11 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.899e3 / 0.3038375358627840000e19 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.899e3 / 0.15404563068243148800000e23 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.20677e5 / 0.715559414169600e15 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.20677e5 / 0.774414950400e12 * pow(a, 0.19e2) * pow(x, 0.38e2) + pow(a, 0.30e2) * pow(x, 0.60e2) / 0.5065944610622441914368000000e28 - pow(a, 0.33e2) * pow(x, 0.66e2) / 0.248094789108911042729091268608000000e36 + pow(a, 0.34e2) * pow(x, 0.68e2) / 0.295232799039604140847618609643520000000e39 - pow(a, 0.31e2) * pow(x, 0.62e2) / 0.1256354263434365594763264000000e31 + 0.20677e5 / 0.32606945280e11 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.899e3 / 0.1210946700902400e16 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.168113e6 / 0.36e2 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.31e2 / 0.844324101770406985728000000e27 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.168113e6 / 0.18e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.40579e5 / 0.3e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.40579e5 / 0.3e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.26180e5 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.899e3 / 0.1455731209948977561600000e25 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.392863e6 / 0.1811496960e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.6545e4 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.595e3 * a * x * x + 0.351509e6 / 0.114048e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.351509e6 / 0.113218560e9 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.198679e6 / 0.9504e4 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.31e2 / 0.5822924839795910246400000e25 * pow(a, 0.28e2) * pow(x, 0.56e2) + pow(a, 0.32e2) * pow(x, 0.64e2) / 0.442236700728896689356668928000000e33 + 0.198679e6 / 0.1728e4 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.351509e6 / 0.9434880e7 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.2185469e7 / 0.4320e4 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.168113e6 / 0.96e2 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.35e2;
  return retval;
}

inline double PHO_35_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.36e2 - pow(a, 0.35e2) * pow(x, 0.70e2) / 0.10333147966386144929666651337523200000000e41 - 0.899e3 / 0.18567849413836800e17 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.20677e5 / 0.9034841088000e13 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.351509e6 / 0.576576e6 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.899e3 / 0.54859555086336000000e20 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.392863e6 / 0.15397724160e11 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.899e3 / 0.928392470691840000e18 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.899e3 / 0.3851140767060787200000e22 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.20677e5 / 0.278273105510400e15 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.20677e5 / 0.344184422400e12 * pow(a, 0.19e2) * pow(x, 0.38e2) + pow(a, 0.30e2) * pow(x, 0.60e2) / 0.703603418142005821440000000e27 - pow(a, 0.33e2) * pow(x, 0.66e2) / 0.13783043839383946818282848256000000e35 + pow(a, 0.34e2) * pow(x, 0.68e2) / 0.8200911084433448356878294712320000000e37 - pow(a, 0.31e2) * pow(x, 0.62e2) / 0.139594918159373954973696000000e30 + 0.20677e5 / 0.15397724160e11 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.899e3 / 0.437286308659200e15 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.168113e6 / 0.28e2 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.31e2 / 0.140720683628401164288000000e27 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.11594e5 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.81158e5 / 0.5e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.15708e5 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.19635e5 / 0.2e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.899e3 / 0.323495824433106124800000e24 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.20677e5 / 0.50319360e8 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.3570e4 * a * a * pow(x, 0.4e1) - 0.630e3 * a * x * x + 0.15283e5 / 0.3168e4 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.351509e6 / 0.62899200e8 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.198679e6 / 0.6336e4 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.31e2 / 0.1132235385515871436800000e25 * pow(a, 0.28e2) * pow(x, 0.56e2) + pow(a, 0.32e2) * pow(x, 0.64e2) / 0.36853058394074724113055744000000e32 + 0.198679e6 / 0.1200e4 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.351509e6 / 0.5503680e7 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.168113e6 / 0.240e3 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.168113e6 / 0.72e2 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.6e1;
  return retval;
}

inline double PHO_36_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.37e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.37e2 - 0.37e2 / 0.10333147966386144929666651337523200000000e41 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.33263e5 / 0.241382042379878400e18 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.765049e6 / 0.144557457408000e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.565471e6 / 0.576576e6 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.33263e5 / 0.603455105949696000000e21 * pow(a, 0.25e2) * pow(x, 0.50e2) + pow(a, 0.36e2) * pow(x, 0.72e2) / 0.371993326789901217467999448150835200000000e42 - 0.765049e6 / 0.15397724160e11 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.33263e5 / 0.11140709648302080000e20 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.33263e5 / 0.38511407670607872000000e23 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.765049e6 / 0.4174096582656000e16 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.765049e6 / 0.5851135180800e13 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.37e2 / 0.4221620508852034928640000000e28 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.37e2 / 0.41349131518151840454848544768000000e35 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.37e2 / 0.16401822168866896713756589424640000000e38 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.37e2 / 0.697974590796869774868480000000e30 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.765049e6 / 0.277159034880e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.33263e5 / 0.6122008321228800e16 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.214489e6 / 0.28e2 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.1147e4 / 0.985044785398808150016000000e27 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.214489e6 / 0.15e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.96866e5 / 0.5e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.145299e6 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.22015e5 / 0.2e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.33263e5 / 0.2911462419897955123200000e25 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.765049e6 / 0.1006387200e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.3885e4 * a * a * pow(x, 0.4e1) - 0.666e3 * a * x * x + 0.565471e6 / 0.76032e5 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.13005833e8 / 0.1320883200e10 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.7351123e7 / 0.158400e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.1147e4 / 0.9057883084126971494400000e25 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.37e2 / 0.147412233576298896452222976000000e33 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.565471e6 / 0.2400e4 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.13005833e8 / 0.121080960e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.6220181e7 / 0.6480e4 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.6220181e7 / 0.2016e4 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.37e2;
  return retval;
}

inline double PHO_37_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.38e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.38e2 - 0.37e2 / 0.543849892967691838403507965132800000000e39 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.33263e5 / 0.88930226139955200e17 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.765049e6 / 0.64670441472000e14 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.10743949e8 / 0.6918912e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.33263e5 / 0.190564770299904000000e21 * pow(a, 0.25e2) * pow(x, 0.50e2) + pow(a, 0.36e2) * pow(x, 0.72e2) / 0.9789298073418453091263143372390400000000e40 - 0.14535931e8 / 0.153977241600e12 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.33263e5 / 0.3811295405998080000e19 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.33263e5 / 0.11148039062544384000000e23 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.765049e6 / 0.1757514350592000e16 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.765049e6 / 0.2771590348800e13 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.37e2 / 0.777666935841164328960000000e27 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.37e2 / 0.4352540159805456889984057344000000e34 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.37e2 / 0.1294880697542123424770257059840000000e37 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.37e2 / 0.110206514336347859189760000000e30 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.765049e6 / 0.138579517440e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.33263e5 / 0.2416582232064000e16 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.4075291e7 / 0.420e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.1147e4 / 0.207377849557643821056000000e27 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.262922e6 / 0.15e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.920227e6 / 0.40e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.83657e5 / 0.4e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.24605e5 / 0.2e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.33263e5 / 0.766174321025777664000000e24 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.14535931e8 / 0.10567065600e11 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.4218e4 * a * a * pow(x, 0.4e1) - 0.703e3 * a * x * x + 0.10743949e8 / 0.950400e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.247110827e9 / 0.14529715200e11 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.10743949e8 / 0.158400e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.1147e4 / 0.2145288098872177459200000e25 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.37e2 / 0.19396346523197223217397760000000e32 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.10743949e8 / 0.32400e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - pow(a, 0.37e2) * pow(x, 0.74e2) / 0.13763753091226345046315979581580902400000000e44 + 0.10743949e8 / 0.60540480e8 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.118183439e9 / 0.90720e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.4075291e7 / 0.1008e4 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.38e2;
  return retval;
}

inline double PHO_38_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.39e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.39e2 + pow(a, 0.38e2) * pow(x, 0.76e2) / 0.523022617466601111760007224100074291200000000e45 - 0.37e2 / 0.41834607151360910646423689625600000000e38 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.33263e5 / 0.34203933130752000e17 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.765049e6 / 0.29847896064000e14 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.10743949e8 / 0.4435200e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.33263e5 / 0.63521590099968000000e20 * pow(a, 0.25e2) * pow(x, 0.50e2) + pow(a, 0.36e2) * pow(x, 0.72e2) / 0.502015285816330927757084275507200000000e39 - 0.14535931e8 / 0.82910822400e11 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.33263e5 / 0.1368157325230080000e19 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.33263e5 / 0.3430165865398272000000e22 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.765049e6 / 0.766095998976000e15 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.765049e6 / 0.1350261964800e13 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.37e2 / 0.159521422736649093120000000e27 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.37e2 / 0.558017969205827806408212480000000e33 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.37e2 / 0.132808276670987017925154570240000000e36 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.37e2 / 0.19780656419344487546880000000e29 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.765049e6 / 0.71066419200e11 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.33263e5 / 0.991418351616000e15 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.1708993e7 / 0.140e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.1147e4 / 0.47856426820994727936000000e26 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.1708993e7 / 0.80e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.1087541e7 / 0.40e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.191919e6 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.27417e5 / 0.2e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.33263e5 / 0.216100449520091136000000e24 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.14535931e8 / 0.5960908800e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.9139e4 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.741e3 * a * x * x + 0.10743949e8 / 0.633600e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.10743949e8 / 0.372556800e9 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.139671337e9 / 0.1425600e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.1147e4 / 0.550073871505686528000000e24 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.37e2 / 0.2984053311261111264215040000000e31 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.139671337e9 / 0.302400e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - pow(a, 0.37e2) * pow(x, 0.74e2) / 0.352916745928880642213230245681561600000000e42 + 0.10743949e8 / 0.37255680e8 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.52978783e8 / 0.30240e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.52978783e8 / 0.10080e5 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.39e2;
  return retval;
}

inline double PHO_39_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.10e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.40e2 + pow(a, 0.38e2) * pow(x, 0.76e2) / 0.13075565436665027794000180602501857280000000e44 - 0.37e2 / 0.4183460715136091064642368962560000000e37 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.33263e5 / 0.13681573252300800e17 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.765049e6 / 0.14177750630400e14 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.10743949e8 / 0.2882880e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.33263e5 / 0.22232556534988800000e20 * pow(a, 0.25e2) * pow(x, 0.50e2) + pow(a, 0.36e2) * pow(x, 0.72e2) / 0.37651146436224819581781320663040000000e38 - 0.14535931e8 / 0.45600952320e11 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.33263e5 / 0.513058996961280000e18 * pow(a, 0.24e2) * pow(x, 0.48e2) - pow(a, 0.39e2) * pow(x, 0.78e2) / 0.20397882081197443358640281739902897356800000000e47 + 0.33263e5 / 0.1114803906254438400000e22 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.765049e6 / 0.344743199539200e15 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.765049e6 / 0.675130982400e12 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.37e2 / 0.35892320115746045952000000e26 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.37e2 / 0.83702695380874170961231872000000e32 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.37e2 / 0.16601034583873377240644321280000000e35 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.37e2 / 0.3956131283868897509376000000e28 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.765049e6 / 0.37309870080e11 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.33263e5 / 0.421352799436800e15 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.1708993e7 / 0.112e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.1147e4 / 0.11964106705248681984000000e26 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.155363e6 / 0.6e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.63973e5 / 0.2e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.27417e5 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.45695e5 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.33263e5 / 0.64830134856027340800000e23 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.631997e6 / 0.149022720e9 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.4940e4 * a * a * pow(x, 0.4e1) - 0.780e3 * a * x * x + 0.10743949e8 / 0.427680e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.10743949e8 / 0.223534080e9 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.139671337e9 / 0.997920e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.1147e4 / 0.151270314664063795200000e24 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.37e2 / 0.522209329470694471237632000000e30 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.4816253e7 / 0.7560e4 * pow(a, 0.10e2) * pow(x, 0.20e2) - pow(a, 0.37e2) * pow(x, 0.74e2) / 0.17645837296444032110661512284078080000000e41 + 0.10743949e8 / 0.23284800e8 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.52978783e8 / 0.22680e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.1708993e7 / 0.252e3 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.20e2;
  return retval;
}

inline double PHO_40_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.41e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.41e2 + 0.41e2 / 0.26151130873330055588000361205003714560000000e44 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.1517e4 / 0.20917303575680455323211844812800000000e38 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.1363783e7 / 0.232586745289113600e18 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.31367009e8 / 0.283555012608000e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.440501909e9 / 0.77837760e8 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.1363783e7 / 0.333488348024832000000e21 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.41e2 / 0.150604585744899278327125282652160000000e39 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.25911877e8 / 0.45600952320e11 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.1363783e7 / 0.8208943951380480000e19 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.41e2 / 0.20397882081197443358640281739902897356800000000e47 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.1363783e7 / 0.15607254687562137600000e23 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.31367009e8 / 0.6550120791244800e16 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.31367009e8 / 0.14177750630400e14 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.1517e4 / 0.358923201157460459520000000e27 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.1517e4 / 0.585918867666119196728623104000000e33 * pow(a, 0.33e2) * pow(x, 0.66e2) + pow(a, 0.40e2) * pow(x, 0.80e2) / 0.815915283247897734345611269596115894272000000000e48 + 0.1517e4 / 0.99606207503240263443865927680000000e35 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.1517e4 / 0.35605181554820077584384000000e29 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.31367009e8 / 0.820817141760e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.1363783e7 / 0.7584350389862400e16 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.6369883e7 / 0.336e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.47027e5 / 0.131605173757735501824000000e27 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.374699e6 / 0.12e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.374699e6 / 0.10e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.374699e6 / 0.12e2 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.50635e5 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.1363783e7 / 0.842791753128355430400000e24 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.25911877e8 / 0.3576545280e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.5330e4 * a * a * pow(x, 0.4e1) - 0.820e3 * a * x * x + 0.440501909e9 / 0.11975040e8 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.440501909e9 / 0.5588352000e10 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.197466373e9 / 0.997920e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.47027e5 / 0.1815243775968765542400000e25 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.1517e4 / 0.4177674635765555769901056000000e31 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.197466373e9 / 0.226800e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.41e2 / 0.52937511889332096331984536852234240000000e41 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.440501909e9 / 0.605404800e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.70068713e8 / 0.22680e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.70068713e8 / 0.8064e4 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.41e2;
  return retval;
}

inline double PHO_41_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.42e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.42e2 + 0.41e2 / 0.1867937919523575399142882943214551040000000e43 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.1517e4 / 0.2988186225097207903315977830400000000e37 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.1363783e7 / 0.99680033695334400e17 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.31367009e8 / 0.141777506304000e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.440501909e9 / 0.51891840e8 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.1363783e7 / 0.127043180199936000000e21 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.41e2 / 0.17929117350583247419895866982400000000e38 * pow(a, 0.36e2) * pow(x, 0.72e2) - pow(a, 0.41e2) * pow(x, 0.82e2) / 0.33452526613163807108170062053440751665152000000000e50 - 0.25911877e8 / 0.26057687040e11 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.1363783e7 / 0.3322667789844480000e19 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.41e2 / 0.971327718152259207554299130471566540800000000e45 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.1363783e7 / 0.5574019531272192000000e22 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.31367009e8 / 0.3119105138688000e16 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.31367009e8 / 0.7426440806400e13 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.1517e4 / 0.94003695541239644160000000e26 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.1517e4 / 0.111603593841165561281642496000000e33 * pow(a, 0.33e2) * pow(x, 0.66e2) + pow(a, 0.40e2) * pow(x, 0.80e2) / 0.19426554363045184151085982609431330816000000000e47 + 0.1517e4 / 0.16601034583873377240644321280000000e35 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.1517e4 / 0.8477424179719066091520000000e28 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.1363783e7 / 0.19543265280e11 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.1363783e7 / 0.3431015652556800e16 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.374699e6 / 0.16e2 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.47027e5 / 0.37601478216495857664000000e26 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.374699e6 / 0.10e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.2622893e7 / 0.60e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.70889e5 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.18655e5 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.1363783e7 / 0.280930584376118476800000e24 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.25911877e8 / 0.2128896000e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.5740e4 * a * a * pow(x, 0.4e1) - 0.861e3 * a * x * x + 0.15189721e8 / 0.285120e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.440501909e9 / 0.3459456000e10 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.197466373e9 / 0.712800e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.47027e5 / 0.561861168752236953600000e24 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.1517e4 / 0.895215993378333379264512000000e30 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.6369883e7 / 0.5400e4 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.41e2 / 0.5041667798984009174474717795450880000000e40 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.440501909e9 / 0.389188800e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.70068713e8 / 0.17280e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.6369883e7 / 0.576e3 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.42e2;
  return retval;
}

inline double PHO_42_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.43e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.43e2 + 0.1763e4 / 0.7471751678094301596571531772858204160000000e43 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.65231e5 / 0.20917303575680455323211844812800000000e38 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.58642669e8 / 0.1893920640211353600e19 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.1348781387e10 / 0.3119105138688000e16 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.653158003e9 / 0.51891840e8 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.58642669e8 / 0.2159734063398912000000e22 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.1763e4 / 0.107574704103499484519375201894400000000e39 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.43e2 / 0.33452526613163807108170062053440751665152000000000e50 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.1114210711e10 / 0.651442176000e12 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.58642669e8 / 0.59808020217200640000e20 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.1763e4 / 0.2913983154456777622662897391414699622400000000e46 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.58642669e8 / 0.89184312500355072000000e23 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.1348781387e10 / 0.65501207912448000e17 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.58642669e8 / 0.7426440806400e13 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.65231e5 / 0.1128044346494875729920000000e28 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.65231e5 / 0.1004432344570490051534782464000000e34 * pow(a, 0.33e2) * pow(x, 0.66e2) + pow(a, 0.42e2) * pow(x, 0.84e2) / 0.1405006117752879898543142606244511569936384000000000e52 + 0.43e2 / 0.38853108726090368302171965218862661632000000000e47 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.65231e5 / 0.132808276670987017925154570240000000e36 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.65231e5 / 0.93251665976909727006720000000e29 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.58642669e8 / 0.469038366720e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.58642669e8 / 0.68620313051136000e17 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.16112057e8 / 0.560e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.2022161e7 / 0.488819216814446149632000000e27 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.16112057e8 / 0.360e3 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.3048227e7 / 0.60e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.160433e6 / 0.4e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.61705e5 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.58642669e8 / 0.4213958765641777152000000e25 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.1114210711e10 / 0.55351296000e11 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.12341e5 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.903e3 * a * x * x + 0.653158003e9 / 0.8553600e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.18941582087e11 / 0.93405312000e11 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.273904969e9 / 0.712800e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.2022161e7 / 0.7866056362531317350400000e25 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.65231e5 / 0.8952159933783333792645120000000e31 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.273904969e9 / 0.172800e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.1763e4 / 0.25208338994920045872373588977254400000000e41 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.18941582087e11 / 0.10897286400e11 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.273904969e9 / 0.51840e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.16112057e8 / 0.1152e4 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.43e2;
  return retval;
}

inline double PHO_43_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.11e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.44e2 + 0.1763e4 / 0.849062690692534272337674065097523200000000e42 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.65231e5 / 0.3803146104669173695129426329600000000e37 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.58642669e8 / 0.860873018277888000e18 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.58642669e8 / 0.70888753152000e14 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.653158003e9 / 0.35380800e8 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.58642669e8 / 0.883527571390464000000e21 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.1763e4 / 0.17114157471011281628082418483200000000e38 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.43e2 / 0.1520569391507445777644093729701852348416000000000e49 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.1114210711e10 / 0.384943104000e12 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.58642669e8 / 0.25826190548336640000e20 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.1763e4 / 0.264907559496070692969354308310427238400000000e45 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.58642669e8 / 0.34457575284228096000000e23 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.1348781387e10 / 0.32750603956224000e17 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.58642669e8 / 0.4050785894400e13 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.65231e5 / 0.333285829646213283840000000e27 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.65231e5 / 0.228280078311475011712450560000000e33 * pow(a, 0.33e2) * pow(x, 0.66e2) + pow(a, 0.42e2) * pow(x, 0.84e2) / 0.31931957221656361330525968323738899316736000000000e50 + 0.43e2 / 0.2649075594960706929693543083104272384000000000e46 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.65231e5 / 0.27165329319065526393781616640000000e35 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.65231e5 / 0.25432272539157198274560000000e29 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.58642669e8 / 0.266499072000e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.58642669e8 / 0.32750603956224000e17 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.177232627e9 / 0.5040e4 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.2022161e7 / 0.155533387168232865792000000e27 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.4790071e7 / 0.90e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.1764763e7 / 0.30e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.135751e6 / 0.3e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.135751e6 / 0.6e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.58642669e8 / 0.1532348642051555328000000e25 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.1114210711e10 / 0.33965568000e11 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.6622e4 * a * a * pow(x, 0.4e1) - 0.946e3 * a * x * x + 0.21069613e8 / 0.194400e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.18941582087e11 / 0.59439744000e11 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.273904969e9 / 0.518400e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.2022161e7 / 0.2681610123590221824000000e25 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.65231e5 / 0.2238039983445833448161280000000e31 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.273904969e9 / 0.129600e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.1763e4 / 0.3437500772034551709869125769625600000000e40 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.653158003e9 / 0.247665600e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.177232627e9 / 0.25920e5 * pow(a, 0.9e1) * pow(x, 0.18e2) - pow(a, 0.43e2) * pow(x, 0.86e2) / 0.60415263063373835637355132068513997507264512000000000e53 + 0.177232627e9 / 0.10080e5 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.22e2;
  return retval;
}

inline double PHO_44_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.5e1) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.45e2 + 0.1763e4 / 0.113208358759004569645023208679669760000000e42 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.65231e5 / 0.760629220933834739025885265920000000e36 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.58642669e8 / 0.401740741863014400e18 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.58642669e8 / 0.37807335014400e14 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.21069613e8 / 0.786240e6 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.58642669e8 / 0.373044974587084800000e21 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.1763e4 / 0.3042516883735338956103541063680000000e37 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.43e2 / 0.101371292767163051842939581980123489894400000000e48 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.1114210711e10 / 0.230965862400e12 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.58642669e8 / 0.11478306910371840000e20 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.1763e4 / 0.29434173277341188107706034256714137600000000e44 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.58642669e8 / 0.13783030113691238400000e23 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.58642669e8 / 0.727791199027200e15 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.58642669e8 / 0.2250436608000e13 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.65231e5 / 0.103688924778821910528000000e27 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.65231e5 / 0.55801796920582780640821248000000e32 * pow(a, 0.33e2) * pow(x, 0.66e2) + pow(a, 0.42e2) * pow(x, 0.84e2) / 0.1419198098740282725801154147721728858521600000000e49 + 0.43e2 / 0.235473386218729504861648274053713100800000000e45 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.65231e5 / 0.6036739848681228087507025920000000e34 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.65231e5 / 0.7347100955756523945984000000e28 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.58642669e8 / 0.153977241600e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.58642669e8 / 0.16011406378598400e17 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.4790071e7 / 0.112e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.2022161e7 / 0.51844462389410955264000000e26 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.252109e6 / 0.4e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.135751e6 / 0.2e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.407253e6 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.49665e5 / 0.2e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.58642669e8 / 0.578887264775032012800000e24 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.1114210711e10 / 0.21134131200e11 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.7095e4 * a * a * pow(x, 0.4e1) - 0.990e3 * a * x * x + 0.21069613e8 / 0.138240e6 * pow(a, 0.12e2) * pow(x, 0.24e2) + pow(a, 0.44e2) * pow(x, 0.88e2) / 0.2658271574788448768043625811014615890319638528000000000e55 - 0.653158003e9 / 0.1320883200e10 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.273904969e9 / 0.380160e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.2022161e7 / 0.953461377276523315200000e24 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.65231e5 / 0.596810662252222252843008000000e30 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.16112057e8 / 0.5760e4 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.1763e4 / 0.534722342316485821535197341941760000000e39 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.653158003e9 / 0.165110400e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.177232627e9 / 0.20160e5 * pow(a, 0.9e1) * pow(x, 0.18e2) - pow(a, 0.43e2) * pow(x, 0.86e2) / 0.1342561401408307458607891823744755500161433600000000e52 + 0.177232627e9 / 0.8064e4 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.15e2;
  return retval;
}

inline double PHO_45_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.46e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.46e2 + 0.1763e4 / 0.17227358941587651902503531755601920000000e41 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.65231e5 / 0.165354178463877117179540275200000000e36 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.58642669e8 / 0.192136876543180800e18 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.1348781387e10 / 0.472591687680000e15 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.484601099e9 / 0.12579840e8 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.58642669e8 / 0.162193467211776000000e21 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.1763e4 / 0.595275042469957621846344990720000000e36 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.43e2 / 0.8814895023231569725473007128706390425600000000e46 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.25626846353e11 / 0.3233522073600e13 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.58642669e8 / 0.5240096632995840000e19 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.1763e4 / 0.3839239992696676709700787076962713600000000e43 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.58642669e8 / 0.5692990699133337600000e22 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.1348781387e10 / 0.8733494388326400e16 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.1348781387e10 / 0.29255675904000e14 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.65231e5 / 0.33811605906137579520000000e26 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.65231e5 / 0.14556990501021594949779456000000e32 * pow(a, 0.33e2) * pow(x, 0.66e2) + pow(a, 0.42e2) * pow(x, 0.84e2) / 0.92556397743931482117466574851417099468800000000e47 + 0.43e2 / 0.25594933284644511398005247179751424000000000e44 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.65231e5 / 0.1443568224684641499186462720000000e34 * pow(a, 0.34e2) * pow(x, 0.68e2) - pow(a, 0.45e2) * pow(x, 0.90e2) / 0.119622220865480194561963161495657715064383733760000000000e57 - 0.65231e5 / 0.2236074203925898592256000000e28 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.1348781387e10 / 0.2078692761600e13 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.58642669e8 / 0.8005703189299200e16 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.5798507e7 / 0.112e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.2022161e7 / 0.18032856483273375744000000e26 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.446039e6 / 0.6e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.3122273e7 / 0.40e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.228459e6 / 0.4e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.54395e5 / 0.2e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.58642669e8 / 0.226521103607621222400000e24 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.883684357e9 / 0.10567065600e11 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.7590e4 * a * a * pow(x, 0.4e1) - 0.1035e4 * a * x * x + 0.484601099e9 / 0.2280960e7 * pow(a, 0.12e2) * pow(x, 0.24e2) + pow(a, 0.44e2) * pow(x, 0.88e2) / 0.57788512495401060174861430674230780224339968000000000e53 - 0.15022634069e11 / 0.19813248000e11 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.370577311e9 / 0.380160e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.2022161e7 / 0.352366161167410790400000e24 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.65231e5 / 0.168663882810410636673024000000e30 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.370577311e9 / 0.100800e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.1763e4 / 0.92995189968084490701773450772480000000e38 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.484601099e9 / 0.82555200e8 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.4076350421e10 / 0.362880e6 * pow(a, 0.9e1) * pow(x, 0.18e2) - pow(a, 0.43e2) * pow(x, 0.86e2) / 0.58372234843839454722082253206293717398323200000000e50 + 0.110171633e9 / 0.4032e4 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.46e2;
  return retval;
}

inline double PHO_46_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.47e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.47e2 + 0.82861e5 / 0.137818871532701215220028254044815360000000e42 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.3065857e7 / 0.1818895963102648288974943027200000000e37 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.2756205443e10 / 0.4419148160493158400e19 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.63392725189e11 / 0.12287383879680000e17 * pow(a, 0.20e2) * pow(x, 0.40e2) + pow(a, 0.46e2) * pow(x, 0.92e2) / 0.5502622159812088949850305428800254892961651752960000000000e58 - 0.22776251653e11 / 0.415134720e9 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.2756205443e10 / 0.3406062811447296000000e22 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.82861e5 / 0.5952750424699576218463449907200000000e37 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.2021e4 / 0.44074475116157848627365035643531952128000000000e47 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.41533164779e11 / 0.3233522073600e13 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.2756205443e10 / 0.115282125925908480000e21 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.82861e5 / 0.26874679948876736967905509538738995200000000e44 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.2756205443e10 / 0.113859813982666752000000e24 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.63392725189e11 / 0.218337359708160000e18 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.63392725189e11 / 0.789903249408000e15 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.3065857e7 / 0.540985694498201272320000000e27 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.3065857e7 / 0.189240876513280734347132928000000e33 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.47e2 / 0.370225590975725928469866299405668397875200000000e48 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.2021e4 / 0.153569599707867068388031483078508544000000000e45 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.3065857e7 / 0.17322818696215697990237552640000000e35 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.47e2 / 0.119622220865480194561963161495657715064383733760000000000e57 * pow(a, 0.45e2) * pow(x, 0.90e2) - 0.3065857e7 / 0.33541113058888478883840000000e29 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.63392725189e11 / 0.58203397324800e14 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.2756205443e10 / 0.192136876543180800e18 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.20963833e8 / 0.336e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.95041567e8 / 0.306558560215647387648000000e27 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.20963833e8 / 0.240e3 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.3579191e7 / 0.40e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.511313e6 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.59455e5 / 0.2e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.2756205443e10 / 0.4303900968544803225600000e25 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.41533164779e11 / 0.317011968000e12 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.16215e5 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.1081e4 * a * x * x + 0.1339779509e10 / 0.4561920e7 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.47e2 / 0.115577024990802120349722861348461560448679936000000000e54 * pow(a, 0.44e2) * pow(x, 0.88e2) - 0.22776251653e11 / 0.19813248000e11 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.17417133617e11 / 0.13305600e8 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.95041567e8 / 0.6342590901013394227200000e25 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.3065857e7 / 0.2361294359345748913422336000000e31 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.17417133617e11 / 0.3628800e7 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.82861e5 / 0.836956709712760416315961056952320000000e39 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.22776251653e11 / 0.2641766400e10 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.5178066751e10 / 0.362880e6 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.47e2 / 0.175116704531518364166246759618881152194969600000000e51 * pow(a, 0.43e2) * pow(x, 0.86e2) + 0.272529829e9 / 0.8064e4 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.47e2;
  return retval;
}

inline double PHO_47_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.3e1) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.48e2 + 0.82861e5 / 0.25841038412381477853755297633402880000000e41 * pow(a, 0.38e2) * pow(x, 0.76e2) - pow(a, 0.47e2) * pow(x, 0.94e2) / 0.258623241511168180642964355153611979969197632389120000000000e60 - 0.3065857e7 / 0.454723990775662072243735756800000000e36 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.2756205443e10 / 0.2209574080246579200e19 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.63392725189e11 / 0.6911653432320000e16 * pow(a, 0.20e2) * pow(x, 0.40e2) + pow(a, 0.46e2) * pow(x, 0.92e2) / 0.114637961662751853121881363100005310270034411520000000000e57 - 0.1339779509e10 / 0.17297280e8 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.2756205443e10 / 0.1561112121913344000000e22 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.82861e5 / 0.1364171972326986216731207270400000000e37 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.2021e4 / 0.5509309389519731078420629455441494016000000000e46 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.41533164779e11 / 0.2020951296000e13 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.2756205443e10 / 0.55239352006164480000e20 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.82861e5 / 0.4479113324812789494650918256456499200000000e43 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.2756205443e10 / 0.49813668617416704000000e23 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.63392725189e11 / 0.118266069841920000e18 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.63392725189e11 / 0.460776895488000e15 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.3065857e7 / 0.191599100134779617280000000e27 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.3065857e7 / 0.55195255649706880851247104000000e32 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.47e2 / 0.38565165726638117548944406188090458112000000000e47 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.2021e4 / 0.22395566624063947473254591282282496000000000e44 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.3065857e7 / 0.4691596730225084872356003840000000e34 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.47e2 / 0.4984259202728341440081798395652404794349322240000000000e55 * pow(a, 0.45e2) * pow(x, 0.90e2) - 0.3065857e7 / 0.11180371019629492961280000000e29 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.2185956041e10 / 0.1212570777600e13 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.2756205443e10 / 0.100071289866240000e18 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.20963833e8 / 0.280e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.95041567e8 / 0.114959460080867770368000000e27 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.511313e6 / 0.5e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.511313e6 / 0.5e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.71346e5 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.32430e5 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.2756205443e10 / 0.1793292070227001344000000e25 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.1339779509e10 / 0.6604416000e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.8648e4 * a * a * pow(x, 0.4e1) - 0.1128e4 * a * x * x + 0.1339779509e10 / 0.3326400e7 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.47e2 / 0.7223564061925132521857678834278847528042496000000000e52 * pow(a, 0.44e2) * pow(x, 0.88e2) - 0.22776251653e11 / 0.13208832000e11 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.17417133617e11 / 0.9979200e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.95041567e8 / 0.2510608898317801881600000e25 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.3065857e7 / 0.737904487295546535444480000000e30 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.470733341e9 / 0.75600e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.82861e5 / 0.174365981190158420065825220198400000000e39 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.22776251653e11 / 0.1816214400e10 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.272529829e9 / 0.15120e5 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.47e2 / 0.14593058710959863680520563301573429349580800000000e50 * pow(a, 0.43e2) * pow(x, 0.86e2) + 0.20963833e8 / 0.504e3 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.12e2;
  return retval;
}

inline double PHO_48_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.49e2 + 0.82861e5 / 0.5273681308649281194643938292531200000000e40 * pow(a, 0.38e2) * pow(x, 0.76e2) - pow(a, 0.47e2) * pow(x, 0.94e2) / 0.5278025336962615931489068472522693468759135354880000000000e58 - 0.3065857e7 / 0.120641058777216468146297241600000000e36 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.2756205443e10 / 0.1127333714411520000e19 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.63392725189e11 / 0.3949516247040000e16 * pow(a, 0.20e2) * pow(x, 0.40e2) + pow(a, 0.46e2) * pow(x, 0.92e2) / 0.4679100476030687882525769922449196337552424960000000000e55 - 0.1339779509e10 / 0.12355200e8 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.2756205443e10 / 0.732766914367488000000e21 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.82861e5 / 0.334082931998445604097438515200000000e36 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.2021e4 / 0.787044198502818725488661350777356288000000000e45 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.1339779509e10 / 0.41243904000e11 * pow(a, 0.17e2) * pow(x, 0.34e2) + pow(a, 0.48e2) * pow(x, 0.96e2) / 0.12413915592536072670862289047373375038521486354677760000000000e62 + 0.2756205443e10 / 0.27056009145876480000e20 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.82861e5 / 0.822694284149287866364454373634867200000000e42 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.2756205443e10 / 0.22365320603738112000000e23 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.63392725189e11 / 0.65167018076160000e17 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.2185956041e10 / 0.9403610112000e13 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.3065857e7 / 0.70383342906653736960000000e26 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.3065857e7 / 0.16896506831542922709565440000000e32 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.47e2 / 0.4722265191016912352931968104664137728000000000e46 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.2021e4 / 0.3656419040663501628286463882821632000000000e43 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.3065857e7 / 0.1340456208635738534958858240000000e34 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.47e2 / 0.305158726697653557556028473203208456796897280000000000e54 * pow(a, 0.45e2) * pow(x, 0.90e2) - 0.3065857e7 / 0.3878904231300028170240000000e28 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.2185956041e10 / 0.742390272000e12 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.2756205443e10 / 0.53099051765760000e17 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.3579191e7 / 0.40e2 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.95041567e8 / 0.44576117174214033408000000e26 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.3579191e7 / 0.30e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.582659e6 / 0.5e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.158907e6 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.105938e6 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.2756205443e10 / 0.768553744383000576000000e24 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.1339779509e10 / 0.4313088000e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.9212e4 * a * a * pow(x, 0.4e1) - 0.1176e4 * a * x * x + 0.9378456563e10 / 0.17107200e8 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.47e2 / 0.589678698932663879335320721165620206370816000000000e51 * pow(a, 0.44e2) * pow(x, 0.88e2) - 0.22776251653e11 / 0.8895744000e10 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.3295133387e10 / 0.1425600e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.95041567e8 / 0.1024738325844000768000000e25 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.3065857e7 / 0.240948404014872338104320000000e30 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.173428073e9 / 0.21600e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.82861e5 / 0.39143383532484543280083212697600000000e38 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.1339779509e10 / 0.74131200e8 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.146746831e9 / 0.6480e4 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.47e2 / 0.1489087623567333028624547275670758096896000000000e49 * pow(a, 0.43e2) * pow(x, 0.86e2) + 0.146746831e9 / 0.2880e4 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.7e1;
  return retval;
}

inline double PHO_49_1(const double a, const double x)
{
  double retval = sqrt(a) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.50e2 + 0.82861e5 / 0.1160209887902841862821666424356864000000e40 * pow(a, 0.38e2) * pow(x, 0.76e2) - pow(a, 0.47e2) * pow(x, 0.94e2) / 0.211121013478504637259562738900907738750365414195200000000e57 - 0.3065857e7 / 0.33779496457620611080963227648000000e35 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.2756205443e10 / 0.586213531493990400e18 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.2185956041e10 / 0.78990324940800e14 * pow(a, 0.20e2) * pow(x, 0.40e2) + pow(a, 0.46e2) * pow(x, 0.92e2) / 0.280746028561841272951546195346951780253145497600000000e54 - 0.1339779509e10 / 0.8895744e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.2756205443e10 / 0.351728118896394240000e21 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.82861e5 / 0.86861562319595857065334013952000000e35 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.2021e4 / 0.125927071760450996078185816124377006080000000e45 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.1339779509e10 / 0.26396098560e11 * pow(a, 0.17e2) * pow(x, 0.34e2) - pow(a, 0.49e2) * pow(x, 0.98e2) / 0.608281864034267560872252163321295376887552831379210240000000000e63 + pow(a, 0.48e2) * pow(x, 0.96e2) / 0.248278311850721453417245780947467500770429727093555200000000e60 + 0.2756205443e10 / 0.13528004572938240000e20 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.82861e5 / 0.164538856829857573272890874726973440000000e42 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.2756205443e10 / 0.10288047477719531520000e23 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.63392725189e11 / 0.36493530122649600e17 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.2185956041e10 / 0.5642166067200e13 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.3065857e7 / 0.26745670304528420044800000e26 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.3065857e7 / 0.5406882186093735267060940800000e31 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.47e2 / 0.661117126742367729410475534652979281920000000e45 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.2021e4 / 0.658155427319430293091563498907893760000000e42 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.3065857e7 / 0.402136862590721560487657472000000e33 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.47e2 / 0.24412698135812284604482277856256676543751782400000000e53 * pow(a, 0.45e2) * pow(x, 0.90e2) - 0.3065857e7 / 0.1396405523268010141286400000e28 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.70514711e8 / 0.14847805440e11 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.2756205443e10 / 0.28673487953510400e17 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.2556565e7 / 0.24e2 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.95041567e8 / 0.17830446869685613363200000e26 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.416185e6 / 0.3e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.264845e6 / 0.2e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.264845e6 / 0.3e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.115150e6 / 0.3e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.2756205443e10 / 0.338163647528520253440000e24 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.1339779509e10 / 0.2846638080e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.9800e4 * a * a * pow(x, 0.4e1) - 0.1225e4 * a * x * x + 0.253471799e9 / 0.342144e6 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.47e2 / 0.58967869893266387933532072116562020637081600000000e50 * pow(a, 0.44e2) * pow(x, 0.88e2) - 0.1339779509e10 / 0.355829760e9 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.173428073e9 / 0.57024e5 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.95041567e8 / 0.430390096854480322560000e24 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.3065857e7 / 0.81922457365056594955468800000e29 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.13340621e8 / 0.1296e4 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.82861e5 / 0.9394412047796290387219971047424000000e37 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.1339779509e10 / 0.51891840e8 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.146746831e9 / 0.5184e4 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.47e2 / 0.178690514828079963434945673080490971627520000000e48 * pow(a, 0.43e2) * pow(x, 0.86e2) + 0.17895955e8 / 0.288e3 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.5e1;
  return retval;
}

inline double PHO_50_1(const double a, const double x)
{
  double retval = sqrt(0.2e1) * sqrt(a) * sqrt(0.51e2) * exp(-a * x * x / 0.2e1) * sqrt(a * x * x) * (0.51e2 + 0.82861e5 / 0.272990561859492203016862688083968000000e39 * pow(a, 0.38e2) * pow(x, 0.76e2) - pow(a, 0.47e2) * pow(x, 0.94e2) / 0.12418883145794390427033102288288690514727377305600000000e56 - 0.3065857e7 / 0.9935146016947238553224478720000000e34 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.2756205443e10 / 0.310348340202700800e18 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.2185956041e10 / 0.46464897024000e14 * pow(a, 0.20e2) * pow(x, 0.40e2) + pow(a, 0.46e2) * pow(x, 0.92e2) / 0.22019296357791472388356564340937394529658470400000000e53 - 0.615574369e9 / 0.2965248e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.2756205443e10 / 0.172415744557056000000e21 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.82861e5 / 0.23844350440673372527738748928000000e35 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.2021e4 / 0.22222424428314881660856320492537118720000000e44 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.1339779509e10 / 0.17079828480e11 * pow(a, 0.17e2) * pow(x, 0.34e2) - pow(a, 0.49e2) * pow(x, 0.98e2) / 0.11927095373220932566122591437672458370344173164298240000000000e62 + pow(a, 0.48e2) * pow(x, 0.96e2) / 0.9736404386302802094793952194018333363546263807590400000000e58 + 0.2756205443e10 / 0.6896629782282240000e19 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.82861e5 / 0.35488773041733986392192149450915840000000e41 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.2756205443e10 / 0.4841434107162132480000e22 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.2185956041e10 / 0.715559414169600e15 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.70514711e8 / 0.110630707200e12 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.3065857e7 / 0.10488498158638596096000000e26 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.3065857e7 / 0.1802294062031245089020313600000e31 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.47e2 / 0.103704647332136114417329495631839887360000000e45 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.2021e4 / 0.129050083788123586880698725276057600000000e42 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.3065857e7 / 0.126160584342187156231421952000000e33 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.47e2 / 0.2393401778020812216125713515319282014093312000000000e52 * pow(a, 0.45e2) * pow(x, 0.90e2) - 0.3065857e7 / 0.520229508668474366361600000e27 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.70514711e8 / 0.9316270080e10 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.2756205443e10 / 0.15742307111731200e17 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.1010735e7 / 0.8e1 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.95041567e8 / 0.7341948711047017267200000e25 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.643195e6 / 0.4e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.900473e6 / 0.6e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.195755e6 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.41650e5 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.2756205443e10 / 0.152505174375607173120000e24 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.1339779509e10 / 0.1897758720e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.20825e5 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.1275e4 * a * x * x + 0.226790557e9 / 0.228096e6 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.47e2 / 0.6937396458031339756886126131360237722009600000000e49 * pow(a, 0.44e2) * pow(x, 0.88e2) - 0.22776251653e11 / 0.4151347200e10 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.226790557e9 / 0.57024e5 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.95041567e8 / 0.185658473152913080320000e24 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.3065857e7 / 0.28913808481784680572518400000e29 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.226790557e9 / 0.17280e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.82861e5 / 0.2394654051399054412428620070912000000e37 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.22776251653e11 / 0.622702080e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.60846247e8 / 0.1728e4 * pow(a, 0.9e1) * pow(x, 0.18e2) + pow(a, 0.50e2) * pow(x, 0.100e3) / 0.30414093201713378043612608166064768844377641568960512000000000000e65 - 0.47e2 / 0.24526149094050191059698425716930133360640000000e47 * pow(a, 0.43e2) * pow(x, 0.86e2) + 0.43461605e8 / 0.576e3 * pow(a, 0.8e1) * pow(x, 0.16e2)) / 0.51e2;
  return retval;
}

static TEF EF_PHO[] = {&PHO_0_0, &PHO_1_0, &PHO_2_0, &PHO_3_0, &PHO_4_0, &PHO_5_0, &PHO_6_0, &PHO_7_0, &PHO_8_0, &PHO_9_0, &PHO_10_0, &PHO_11_0, &PHO_12_0, &PHO_13_0, &PHO_14_0, &PHO_15_0, &PHO_16_0, &PHO_17_0, &PHO_18_0, &PHO_19_0, &PHO_20_0, &PHO_21_0, &PHO_22_0, &PHO_23_0, &PHO_24_0, &PHO_25_0, &PHO_26_0, &PHO_27_0, &PHO_28_0, &PHO_29_0, &PHO_30_0, &PHO_31_0, &PHO_32_0, &PHO_33_0, &PHO_34_0, &PHO_35_0, &PHO_36_0, &PHO_37_0, &PHO_38_0, &PHO_39_0, &PHO_40_0, &PHO_41_0, &PHO_42_0, &PHO_43_0, &PHO_44_0, &PHO_45_0, &PHO_46_0, &PHO_47_0, &PHO_48_0, &PHO_49_0, &PHO_50_0, &PHO_0_1, &PHO_1_1, &PHO_2_1, &PHO_3_1, &PHO_4_1, &PHO_5_1, &PHO_6_1, &PHO_7_1, &PHO_8_1, &PHO_9_1, &PHO_10_1, &PHO_11_1, &PHO_12_1, &PHO_13_1, &PHO_14_1, &PHO_15_1, &PHO_16_1, &PHO_17_1, &PHO_18_1, &PHO_19_1, &PHO_20_1, &PHO_21_1, &PHO_22_1, &PHO_23_1, &PHO_24_1, &PHO_25_1, &PHO_26_1, &PHO_27_1, &PHO_28_1, &PHO_29_1, &PHO_30_1, &PHO_31_1, &PHO_32_1, &PHO_33_1, &PHO_34_1, &PHO_35_1, &PHO_36_1, &PHO_37_1, &PHO_38_1, &PHO_39_1, &PHO_40_1, &PHO_41_1, &PHO_42_1, &PHO_43_1, &PHO_44_1, &PHO_45_1, &PHO_46_1, &PHO_47_1, &PHO_48_1, &PHO_49_1, &PHO_50_1, &PHO_50_1};

