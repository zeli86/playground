/* * atus-pro testing - atus-pro testing playgroung
 * Copyright (C) 2017 Želimir Marojević <zelimir.marojevic@gmail.com>
 *
 * This file is part of atus-pro testing.
 *
 * atus-pro testing is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * atus-pro testing is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with atus-pro testing.  If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef __eigenfunctions_HO_h__
#define __eigenfunctions_HO_h__

double HO_0( const double a, const double x )
{
double retval = pow(a, 0.1e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1);
return retval;
}

double HO_1( const double a, const double x )
{
double retval = sqrt(0.2e1) * pow(a, 0.3e1 / 0.4e1) * x * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1);
return retval;
}

double HO_2( const double a, const double x )
{
double retval = sqrt(0.2e1) * pow(a, 0.1e1 / 0.4e1) * (0.2e1 * a * x * x - 0.1e1) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.2e1;
return retval;
}

double HO_3( const double a, const double x )
{
double retval = sqrt(0.3e1) * pow(a, 0.3e1 / 0.4e1) * x * (0.2e1 * a * x * x - 0.3e1) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.3e1;
return retval;
}

double HO_4( const double a, const double x )
{
double retval = sqrt(0.6e1) * pow(a, 0.1e1 / 0.4e1) * (0.4e1 * a * a * pow(x, 0.4e1) - 0.12e2 * a * x * x + 0.3e1) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.12e2;
return retval;
}

double HO_5( const double a, const double x )
{
double retval = sqrt(0.15e2) * pow(a, 0.3e1 / 0.4e1) * x * (0.4e1 * a * a * pow(x, 0.4e1) - 0.20e2 * a * x * x + 0.15e2) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.30e2;
return retval;
}

double HO_6( const double a, const double x )
{
double retval = sqrt(0.5e1) * pow(a, 0.1e1 / 0.4e1) * (0.8e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.60e2 * a * a * pow(x, 0.4e1) + 0.90e2 * a * x * x - 0.15e2) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.60e2;
return retval;
}

double HO_7( const double a, const double x )
{
double retval = sqrt(0.70e2) * pow(a, 0.3e1 / 0.4e1) * x * (0.8e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.84e2 * a * a * pow(x, 0.4e1) + 0.210e3 * a * x * x - 0.105e3) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.420e3;
return retval;
}

double HO_8( const double a, const double x )
{
double retval = sqrt(0.70e2) * pow(a, 0.1e1 / 0.4e1) * (0.16e2 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.224e3 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.840e3 * a * a * pow(x, 0.4e1) - 0.840e3 * a * x * x + 0.105e3) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.1680e4;
return retval;
}

double HO_9( const double a, const double x )
{
double retval = sqrt(0.35e2) * pow(a, 0.3e1 / 0.4e1) * x * (0.16e2 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.288e3 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.1512e4 * a * a * pow(x, 0.4e1) - 0.2520e4 * a * x * x + 0.945e3) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.2520e4;
return retval;
}

double HO_10( const double a, const double x )
{
double retval = sqrt(0.7e1) * pow(a, 0.1e1 / 0.4e1) * (0.32e2 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.720e3 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.5040e4 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.12600e5 * a * a * pow(x, 0.4e1) + 0.9450e4 * a * x * x - 0.945e3) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.5040e4;
return retval;
}

double HO_11( const double a, const double x )
{
double retval = sqrt(0.154e3) * pow(a, 0.3e1 / 0.4e1) * x * (0.32e2 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.880e3 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.7920e4 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.27720e5 * a * a * pow(x, 0.4e1) + 0.34650e5 * a * x * x - 0.10395e5) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.55440e5;
return retval;
}

double HO_12( const double a, const double x )
{
double retval = sqrt(0.231e3) * pow(a, 0.1e1 / 0.4e1) * (0.64e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.2112e4 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.23760e5 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.110880e6 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.207900e6 * a * a * pow(x, 0.4e1) - 0.124740e6 * a * x * x + 0.10395e5) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.332640e6;
return retval;
}

double HO_13( const double a, const double x )
{
double retval = sqrt(0.6006e4) * pow(a, 0.3e1 / 0.4e1) * x * (0.64e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.2496e4 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.34320e5 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.205920e6 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.540540e6 * a * a * pow(x, 0.4e1) - 0.540540e6 * a * x * x + 0.135135e6) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.4324320e7;
return retval;
}

double HO_14( const double a, const double x )
{
double retval = sqrt(0.858e3) * pow(a, 0.1e1 / 0.4e1) * (0.128e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.5824e4 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.96096e5 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.720720e6 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.2522520e7 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.3783780e7 * a * a * pow(x, 0.4e1) + 0.1891890e7 * a * x * x - 0.135135e6) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.8648640e7;
return retval;
}

double HO_15( const double a, const double x )
{
double retval = sqrt(0.715e3) * pow(a, 0.3e1 / 0.4e1) * x * (0.128e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.6720e4 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.131040e6 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.1201200e7 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.5405400e7 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.11351340e8 * a * a * pow(x, 0.4e1) + 0.9459450e7 * a * x * x - 0.2027025e7) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.21621600e8;
return retval;
}

double HO_16( const double a, const double x )
{
double retval = sqrt(0.1430e4) * pow(a, 0.1e1 / 0.4e1) * (0.256e3 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.15360e5 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.349440e6 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.3843840e7 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.21621600e8 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.60540480e8 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.75675600e8 * a * a * pow(x, 0.4e1) - 0.32432400e8 * a * x * x + 0.2027025e7) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.172972800e9;
return retval;
}

double HO_17( const double a, const double x )
{
double retval = sqrt(0.12155e5) * pow(a, 0.3e1 / 0.4e1) * x * (0.256e3 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.17408e5 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.456960e6 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.5940480e7 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.40840800e8 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.147026880e9 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.257297040e9 * a * a * pow(x, 0.4e1) - 0.183783600e9 * a * x * x + 0.34459425e8) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.1470268800e10;
return retval;
}

double HO_18( const double a, const double x )
{
double retval = sqrt(0.12155e5) * pow(a, 0.1e1 / 0.4e1) * (0.512e3 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.39168e5 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.1175040e7 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.17821440e8 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.147026880e9 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.661620960e9 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.1543782240e10 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.1654052400e10 * a * a * pow(x, 0.4e1) + 0.620269650e9 * a * x * x - 0.34459425e8) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.8821612800e10;
return retval;
}

double HO_19( const double a, const double x )
{
double retval = sqrt(0.461890e6) * pow(a, 0.3e1 / 0.4e1) * x * (0.512e3 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.43776e5 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.1488384e7 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.26046720e8 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.253955520e9 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.1396755360e10 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.4190266080e10 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.6285399120e10 * a * a * pow(x, 0.4e1) + 0.3928374450e10 * a * x * x - 0.654729075e9) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.167610643200e12;
return retval;
}

double HO_20( const double a, const double x )
{
double retval = sqrt(0.46189e5) * pow(a, 0.1e1 / 0.4e1) * (0.1024e4 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.97280e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.3720960e7 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.74419200e8 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.846518400e9 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.5587021440e10 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.20951330400e11 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.41902660800e11 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.39283744500e11 * a * a * pow(x, 0.4e1) - 0.13094581500e11 * a * x * x + 0.654729075e9) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.335221286400e12;
return retval;
}

double HO_21( const double a, const double x )
{
double retval = sqrt(0.1939938e7) * pow(a, 0.3e1 / 0.4e1) * x * (0.1024e4 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.107520e6 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.4596480e7 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.104186880e9 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.1367452800e10 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.10666131840e11 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.48886437600e11 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.125707982400e12 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.164991726900e12 * a * a * pow(x, 0.4e1) - 0.91662070500e11 * a * x * x + 0.13749310575e11) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.7039647014400e13;
return retval;
}

double HO_22( const double a, const double x )
{
double retval = sqrt(0.176358e6) * pow(a, 0.1e1 / 0.4e1) * (0.2048e4 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.236544e6 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.11235840e8 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.286513920e9 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.4297708800e10 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.39109150080e11 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.215100325440e12 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.691393903200e12 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.1209939330600e13 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.1008282775500e13 * a * a * pow(x, 0.4e1) + 0.302484832650e12 * a * x * x - 0.13749310575e11) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.14079294028800e14;
return retval;
}

double HO_23( const double a, const double x )
{
double retval = sqrt(0.2028117e7) * pow(a, 0.3e1 / 0.4e1) * x * (0.2048e4 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.259072e6 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.13601280e8 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.387636480e9 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.6589820160e10 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.69193111680e11 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.449755225920e12 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.1766895530400e13 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.3975514943400e13 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.4638100767300e13 * a * a * pow(x, 0.4e1) + 0.2319050383650e13 * a * x * x - 0.316234143225e12) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.161911881331200e15;
return retval;
}

double HO_24( const double a, const double x )
{
double retval = sqrt(0.676039e6) * pow(a, 0.1e1 / 0.4e1) * (0.4096e4 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.565248e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.32643072e8 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.1033697280e10 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.19769460480e11 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.237233525760e12 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.1799020903680e13 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.8481098545920e13 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.23853089660400e14 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.37104806138400e14 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.27828604603800e14 * a * a * pow(x, 0.4e1) - 0.7589619437400e13 * a * x * x + 0.316234143225e12) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.647647525324800e15;
return retval;
}

double HO_25( const double a, const double x )
{
double retval = sqrt(0.1352078e7) * pow(a, 0.3e1 / 0.4e1) * x * (0.4096e4 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.614400e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.38860800e8 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.1360128000e10 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.29072736000e11 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.395389209600e12 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.3459655584000e13 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.19275223968000e14 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.66258582390000e14 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.132517164780000e15 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.139143023019000e15 * a * a * pow(x, 0.4e1) - 0.63246828645000e14 * a * x * x + 0.7905853580625e13) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.3238237626624000e16;
return retval;
}

double HO_26( const double a, const double x )
{
double retval = sqrt(0.104006e6) * pow(a, 0.1e1 / 0.4e1) * (0.8192e4 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.1331200e7 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.91852800e8 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.3536332800e10 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.83987904000e11 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.1285014931200e13 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.12850149312000e14 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.83525970528000e14 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.344544628428000e15 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.861361571070000e15 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.1205906199498000e16 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.822208772385000e15 * a * a * pow(x, 0.4e1) + 0.205552193096250e15 * a * x * x - 0.7905853580625e13) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.6476475253248000e16;
return retval;
}

double HO_27( const double a, const double x )
{
double retval = sqrt(0.156009e6) * pow(a, 0.3e1 / 0.4e1) * x * (0.8192e4 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.1437696e7 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.107827200e9 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.4546713600e10 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.119351232000e12 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.2040906067200e13 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.23130268761600e14 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.173477015712000e15 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.845700451596000e15 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.2584084713210000e16 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.4651352483778000e16 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.4439927370879000e16 * a * a * pow(x, 0.4e1) + 0.1849969737866250e16 * a * x * x - 0.213458046676875e15) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.29144138639616000e17;
return retval;
}

double HO_28( const double a, const double x )
{
double retval = sqrt(0.44574e5) * pow(a, 0.1e1 / 0.4e1) * (0.16384e5 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.3096576e7 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.251596800e9 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.11573452800e11 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.334183449600e12 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.6349485542400e13 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.80955940665600e14 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.693908062848000e15 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.3946602107448000e16 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.14470874393976000e17 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.32559467386446000e17 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.41439322128204000e17 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.25899576330127500e17 * a * a * pow(x, 0.4e1) - 0.5976825306952500e16 * a * x * x + 0.213458046676875e15) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.116576554558464000e18;
return retval;
}

double HO_29( const double a, const double x )
{
double retval = sqrt(0.646323e6) * pow(a, 0.3e1 / 0.4e1) * x * (0.16384e5 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.3325952e7 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.291852288e9 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.14592614400e11 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.461491430400e12 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.9691320038400e13 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.138101310547200e15 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.1341555588172800e16 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.8803958547384000e16 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.38150487038664000e17 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.104913839356326000e18 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.171677191673988000e18 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.150217542714739500e18 * a * a * pow(x, 0.4e1) - 0.57775977967207500e17 * a * x * x + 0.6190283353629375e16) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.1690360041097728000e19;
return retval;
}

double HO_30( const double a, const double x )
{
double retval = sqrt(0.1077205e7) * pow(a, 0.1e1 / 0.4e1) * (0.32768e5 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.7127040e7 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.673505280e9 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.36481536000e11 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.1258612992000e13 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.29073960115200e14 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.460337701824000e15 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.5030833455648000e16 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.37731250917360000e17 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.190752435193320000e18 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.629483036137956000e18 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.1287578937554910000e19 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.1502175427147395000e19 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.866639669508112500e18 * a * a * pow(x, 0.4e1) + 0.185708500608881250e18 * a * x * x - 0.6190283353629375e16) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.16903600410977280000e20;
return retval;
}

double HO_31( const double a, const double x )
{
double retval = sqrt(0.66786710e8) * pow(a, 0.3e1 / 0.4e1) * x * (0.32768e5 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.7618560e7 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.773283840e9 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.45237104640e11 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.1696391424000e13 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.42918703027200e14 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.751077302976000e15 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.9173872772064000e16 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.77977918562544000e17 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.454871191614840000e18 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.1773997647297876000e19 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.4434994118244690000e19 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.6652491177367035000e19 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.5373165950950297500e19 * a * a * pow(x, 0.4e1) + 0.1918987839625106250e19 * a * x * x - 0.191898783962510625e18) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.524011612740295680000e21;
return retval;
}

double HO_32( const double a, const double x )
{
double retval = sqrt(0.66786710e8) * pow(a, 0.1e1 / 0.4e1) * (0.65536e5 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.16252928e8 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.1767505920e10 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.111352872960e12 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.4523710464000e13 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.124854408806400e15 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.2403447369523200e16 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.32618214300672000e17 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.311911674250176000e18 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.2079411161667840000e19 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.9461320785588672000e19 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.28383962356766016000e20 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.53219929418936280000e20 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.57313770143469840000e20 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.30703805434001700000e20 * a * a * pow(x, 0.4e1) - 0.6140761086800340000e19 * a * x * x + 0.191898783962510625e18) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.4192092901922365440000e22;
return retval;
}

double HO_33( const double a, const double x )
{
double retval = sqrt(0.1101980715e10) * pow(a, 0.3e1 / 0.4e1) * x * (0.65536e5 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.17301504e8 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.2011299840e10 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.136097955840e12 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.5971297812480e13 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.179138934374400e15 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.3776845866393600e16 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.56652687995904000e17 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.605475602956224000e18 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.4574704555669248000e19 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.24017198917263552000e20 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.85151887070298048000e20 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.195139741202766360000e21 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.270193487819214960000e21 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.202645115864411220000e21 * a * a * pow(x, 0.4e1) - 0.67548371954803740000e20 * a * x * x + 0.6332659870762850625e19) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.69169532881719029760000e23;
return retval;
}

double HO_34( const double a, const double x )
{
double retval = sqrt(0.64822395e8) * pow(a, 0.1e1 / 0.4e1) * (0.131072e6 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.36765696e8 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.4558946304e10 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.330523607040e12 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.15617240432640e14 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.507560314060800e15 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.11673887223398400e17 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.192619139186073600e18 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.2287352277834624000e19 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.19442494361594304000e20 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.116654966169565824000e21 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.482527360065022272000e21 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.1326950240178811248000e22 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.2296644646463327160000e22 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.2296644646463327160000e22 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.1148322323231663580000e22 * a * a * pow(x, 0.4e1) + 0.215310435605936921250e21 * a * x * x - 0.6332659870762850625e19) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.138339065763438059520000e24;
return retval;
}

double HO_35( const double a, const double x )
{
double retval = sqrt(0.181502706e9) * pow(a, 0.3e1 / 0.4e1) * x * (0.131072e6 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.38993920e8 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.5147197440e10 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.398907801600e12 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.20244570931200e14 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.710584439685120e15 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.17764610992128000e17 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.321031898643456000e18 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.4213543669695360000e19 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.40028664862105920000e20 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.272194921062320256000e21 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.1299112123251983040000e22 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.4222114400568944880000e22 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.8931395847357383400000e22 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.11483223232316635800000e23 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.8038256262621645060000e22 * a * a * pow(x, 0.4e1) + 0.2511955082069264081250e22 * a * x * x - 0.221643095476699771875e21) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.968373460344066416640000e24;
return retval;
}

double HO_36( const double a, const double x )
{
double retval = sqrt(0.90751353e8) * pow(a, 0.1e1 / 0.4e1) * (0.262144e6 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.82575360e8 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.11581194240e11 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.957378723840e12 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.52057468108800e14 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.1967772294512640e16 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.53293832976384000e17 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.1050649850105856000e19 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.15168757210903296000e20 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.160114659448423680000e21 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.1224877144780441152000e22 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.6681148062438769920000e22 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.25332686403413669280000e23 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.64306050100973160480000e23 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.103349009090849722200000e24 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.96459075151459740720000e23 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.45215191477246753462500e23 * a * a * pow(x, 0.4e1) - 0.7979151437161191787500e22 * a * x * x + 0.221643095476699771875e21) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.5810240762064398499840000e25;
return retval;
}

double HO_37( const double a, const double x )
{
double retval = sqrt(0.6715600122e10) * pow(a, 0.3e1 / 0.4e1) * x * (0.262144e6 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.87293952e8 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.12984975360e11 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.1142677831680e13 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.66418148966400e14 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.2696576848035840e16 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.78874872805048320e17 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.1690175845822464000e19 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.26725905562067712000e20 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.311802231557456640000e21 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.2665909079816254272000e22 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.16480165220682299136000e23 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.72100722840485058720000e23 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.216302168521455176160000e24 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.424879259595715524600000e24 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.509855111514858629520000e24 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.334592416931625975622500e24 * a * a * pow(x, 0.4e1) - 0.98409534391654698712500e23 * a * x * x + 0.8200794532637891559375e22) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.214978908196382744494080000e27;
return retval;
}

double HO_38( const double a, const double x )
{
double retval = sqrt(0.353452638e9) * pow(a, 0.1e1 / 0.4e1) * (0.524288e6 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.184287232e9 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.29025239040e11 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.2713859850240e13 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.168259310714880e15 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.7319280016097280e16 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.230557320507064320e18 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.5352223511771136000e19 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.92325855578052096000e20 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.1184848479918335232000e22 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.11256060559224184704000e23 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.78280784798240920896000e23 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.391403923991204604480000e24 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.1369913733969216115680000e25 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.3229082372927437986960000e25 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.4843623559391156980440000e25 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.4238170614467262357885000e25 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.1869781153441439275537500e25 * a * a * pow(x, 0.4e1) + 0.311630192240239879256250e24 * a * x * x - 0.8200794532637891559375e22) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.429957816392765488988160000e27;
return retval;
}

double HO_39( const double a, const double x )
{
double retval = sqrt(0.765814049e9) * pow(a, 0.3e1 / 0.4e1) * x * (0.524288e6 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.194248704e9 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.32342409216e11 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.3207288913920e13 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.211681068318720e15 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.9843169676820480e16 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.333027240732426240e18 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.8349468678362972160e19 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.156552537719305728000e21 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.2200432891276908288000e22 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.23104545358407537024000e23 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.179585329831258583232000e24 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.1017650202377131971648000e25 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.4109741201907648347040000e25 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.11448564776742734681040000e26 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.20989035424028346915240000e26 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.23612664852031890279645000e26 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.14584292996843226349192500e26 * a * a * pow(x, 0.4e1) + 0.4051192499123118430331250e25 * a * x * x - 0.319830986772877770815625e24) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.2794725806552975678423040000e28;
return retval;
}

double HO_40( const double a, const double x )
{
double retval = sqrt(0.3829070245e10) * pow(a, 0.1e1 / 0.4e1) * (0.1048576e7 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.408944640e9 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.71872020480e11 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.7546562150400e13 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.529202670796800e15 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.26248452471521280e17 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.951506402092646400e18 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.25690672856501452800e20 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.521841792397685760000e21 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.8001574150097848320000e22 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.92418181433630148096000e23 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.798157021472260369920000e24 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.5088251011885659858240000e25 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.23484235439472276268800000e26 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.76323765178284897873600000e26 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.167912283392226775321920000e27 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.236126648520318902796450000e27 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.194457239957909684655900000e27 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.81023849982462368606625000e26 * a * a * pow(x, 0.4e1) - 0.12793239470915110832625000e26 * a * x * x + 0.319830986772877770815625e24) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.55894516131059513568460800000e29;
return retval;
}

double HO_41( const double a, const double x )
{
double retval = sqrt(0.313983760090e12) * pow(a, 0.3e1 / 0.4e1) * x * (0.1048576e7 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.429916160e9 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.79641968640e11 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.8840258519040e13 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.657494227353600e15 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.34715695204270080e17 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.1345233189165465600e19 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.39011762485798502400e20 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.855820539532204646400e21 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.14263675658870077440000e23 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.180435497084706479616000e24 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.1722338835808561850880000e25 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.12271664205136003187520000e26 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.64190243534557555134720000e26 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.240713413254590831755200000e27 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.625854874461936162563520000e27 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.1075688065481452779406050000e28 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.1138963834039185295841700000e28 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.664395569856191422574325000e27 * a * a * pow(x, 0.4e1) - 0.174840939435839848045875000e27 * a * x * x + 0.13113070457687988603440625e26) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.2291675161373440056306892800000e31;
return retval;
}

double HO_42( const double a, const double x )
{
double retval = sqrt(0.134564468610e12) * pow(a, 0.1e1 / 0.4e1) * (0.2097152e7 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.902823936e9 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.176050667520e12 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.20627269877760e14 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.1624397502873600e16 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.91128699911208960e17 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.3766652929663303680e19 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.117035287457395507200e21 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.2764958666180968857600e22 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.49922864806045271040000e23 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.688935534323424740352000e24 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.7233823110395959773696000e25 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.57267766290634681541760000e26 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.336998778556427164457280000e27 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.1444280479527544990531200000e28 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.4380984121233553137944640000e28 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.9035779750044203347010820000e28 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.11959120257411445606337850000e29 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.9301537977986679916040550000e28 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.3671659728152636808963375000e28 * a * a * pow(x, 0.4e1) + 0.550748959222895521344506250e27 * a * x * x - 0.13113070457687988603440625e26) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.13750050968240640337841356800000e32;
return retval;
}

double HO_43( const double a, const double x )
{
double retval = sqrt(0.2893136075115e13) * pow(a, 0.3e1 / 0.4e1) * x * (0.2097152e7 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.946864128e9 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.194107146240e12 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.23972232560640e14 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.1995688360673280e16 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.118743457460060160e18 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.5224712128242647040e19 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.173535081402345062400e21 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.4403452690584505958400e22 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.85867327466397866188800e23 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.1288009911995967992832000e25 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.14812113987953631917568000e26 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.129605997394594279278720000e27 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.852408675172139298333120000e27 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.4140270707978962306189440000e28 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.14490947477926368071663040000e29 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.35321684477445522174678660000e29 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.57138019007632462341391950000e29 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.57138019007632462341391950000e29 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.31576273662112676557085025000e29 * a * a * pow(x, 0.4e1) + 0.7894068415528169139271256250e28 * a * x * x - 0.563862029680583509947946875e27) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.295626095817173767263589171200000e33;
return retval;
}

double HO_44( const double a, const double x )
{
double retval = sqrt(0.526024740930e12) * pow(a, 0.1e1 / 0.4e1) * (0.4194304e7 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.1983905792e10 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.427035721728e12 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.55514643824640e14 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.4878349326090240e16 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.307336007543685120e18 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.14367958352667279360e20 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.509036238780212183040e21 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.13839422741837018726400e23 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.290627877578577393254400e24 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.4722703010651882640384000e25 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.59248455951814527670272000e26 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.570266388536214828826368000e27 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.4167331300841569902961920000e28 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.22771488893884292684041920000e29 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.91085955575537170736167680000e29 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.259025686167933829280976840000e30 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.502814567267165668604249160000e30 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.628518209083957085755311450000e30 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.463118680377652589503913700000e30 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.173669505141619721063967637500e30 * a * a * pow(x, 0.4e1) - 0.24809929305945674437709662500e29 * a * x * x + 0.563862029680583509947946875e27) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.1182504383268695069054356684800000e34;
return retval;
}

double HO_45( const double a, const double x )
{
double retval = sqrt(0.52602474093e11) * pow(a, 0.3e1 / 0.4e1) * x * (0.4194304e7 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.2076180480e10 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.468697743360e12 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.64055358259200e14 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.5933127558758400e16 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.395146295413309440e18 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.19592670480909926400e20 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.738923572422888652800e21 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.21474966323540201472000e23 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.484379795964295655424000e24 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.8500865419173388752691200e25 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.115920892079637119354880000e27 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.1221999404006174633199360000e28 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.9869995186203718191225600000e28 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.60277470601458421810699200000e29 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.273257866726611512208503040000e30 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.896627375196694024434150600000e30 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.2056968684274768644290110200000e31 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.3142591045419785428776557250000e31 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.2977191516713480932525159500000e31 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.1563025546274577489575708737500e31 * a * a * pow(x, 0.4e1) - 0.372148939589185116565644937500e30 * a * x * x + 0.25373791335626257947657609375e29) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.1773756574903042603581535027200000e34;
return retval;
}

double HO_46( const double a, const double x )
{
double retval = sqrt(0.2287064091e10) * pow(a, 0.1e1 / 0.4e1) * (0.8388608e7 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.4341104640e10 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.1026671247360e13 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.147327323996160e15 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.14364414089625600e17 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.1009818310500679680e19 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.53015461301285683200e20 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.2124405270715804876800e22 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.65856563392189951180800e23 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.1591533615311257153536000e25 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.30079985329382760201830400e26 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.444363419638608957527040000e27 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.5110179325844003011560960000e28 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.45401977856537103679637760000e29 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.308084849740787489254684800000e30 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.1571232733678016195198892480000e31 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.5892122751292560731995846800000e31 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.15770093246106559606224178200000e32 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.28911837617862025944744326700000e32 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.34237702442205030724039334250000e32 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.23966391709543521506827533975000e32 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.8559425610551257681009833562500e31 * a * a * pow(x, 0.4e1) + 0.1167194401438807865592250031250e31 * a * x * x - 0.25373791335626257947657609375e29) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.3547513149806085207163070054400000e34;
return retval;
}

double HO_47( const double a, const double x )
{
double retval = sqrt(0.214984024554e12) * pow(a, 0.3e1 / 0.4e1) * x * (0.8388608e7 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.4534042624e10 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.1122175549440e13 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.168887420190720e15 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.17310960569548800e17 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.1282742178203566080e19 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.71192190890297917440e20 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.3025668112837661491200e22 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.99847047723642829209600e23 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.2579382066194106421248000e25 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.52361455943740360351334400e26 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.835403228920584840150835200e27 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.10442540361507310501885440000e29 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.101613950440821136806808320000e30 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.762104628306158526051062400000e30 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.4343996381345103598491055680000e31 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.18461984620716690293586986640000e32 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.57014952505154484730195105800000e32 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.123532397094501383582089395900000e33 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.178796890531515160447760967750000e33 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.160917201478363644402984870975000e33 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.80458600739181822201492435487500e32 * a * a * pow(x, 0.4e1) + 0.18286045622541323227611917156250e32 * a * x * x - 0.1192568192774434123539907640625e31) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.166733118040886004736664292556800000e36;
return retval;
}

double HO_48( const double a, const double x )
{
double retval = sqrt(0.35830670759e11) * pow(a, 0.1e1 / 0.4e1) * (0.16777216e8 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.9462349824e10 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.2448383016960e13 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.386028389007360e15 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.41546305366917120e17 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.3240611818619535360e19 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.189845842374127779840e21 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.8543062906835750092800e22 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.299541143170928487628800e24 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.8254022611821140547993600e25 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.179524991807109806918860800e27 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.3084565768322159409787699200e28 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.41770161446029242007541760000e29 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.443406329196310415156981760000e30 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.3658102215869560925045099520000e31 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.23167980700507219191952296960000e32 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.110771907724300141761521919840000e33 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.390959674321059323864195011200000e33 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.988259176756011068656715167200000e33 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.1716450149102545540298505290400000e34 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.1931006417740363732835818451700000e34 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.1287337611826909155223878967800000e34 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.438865094940991757462686011750000e33 * a * a * pow(x, 0.4e1) - 0.57243273253172837929915566750000e32 * a * x * x + 0.1192568192774434123539907640625e31) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.666932472163544018946657170227200000e36;
return retval;
}

double HO_49( const double a, const double x )
{
double retval = sqrt(0.71661341518e11) * pow(a, 0.3e1 / 0.4e1) * x * (0.16777216e8 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.9865003008e10 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.2666017062912e13 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.439892815380480e15 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.49652901536071680e17 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.4071537925957877760e19 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.251417466927898951680e21 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.11960288069570050129920e23 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.444773212587136239206400e24 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.13046680902555996350054400e26 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.303335330984426915138764800e27 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.5597915653621696706651750400e28 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.81869516434217314334781849600e29 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.944648266548661319247482880000e30 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.8535571837028975491771898880000e31 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.59749002859202828442403292160000e32 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.319283734028865114489092592480000e33 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.1277134936115460457956370369920000e34 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.3724976897003426335706080245600000e34 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.7646005209638611952238796293600000e34 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.10513257163253091434328344903700000e35 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.9011363282788364086567152774600000e34 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.4300877930421719223134322915150000e34 * a * a * pow(x, 0.4e1) - 0.934973463135156352855287590250000e33 * a * x * x + 0.58435841445947272053455474390625e32) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.4668527305144808132626600191590400000e37;
return retval;
}

double HO_50( const double a, const double x )
{
double retval = sqrt(0.71661341518e11) * pow(a, 0.1e1 / 0.4e1) * (0.33554432e8 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.20552089600e11 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.5795689267200e13 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.999756398592000e15 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.118221194133504000e18 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.10178844814894694400e20 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.661624912968155136000e21 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.33223022415472361472000e23 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.1308156507609224232960000e25 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.40770877820487488593920000e26 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.1011117769948089717129216000e28 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.19992555905791773952327680000e29 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.314882755516220439749160960000e30 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.3936034443952755496864512000000e31 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.38798053804677161326235904000000e32 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.298745014296014142212016460800000e33 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.1773798522382583969383847736000000e34 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.7982093350721627862227314812000000e34 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.26606977835738759540757716040000000e35 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.63716710080321766268656635780000000e35 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.105132571632530914343283449037000000e36 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.112642041034854551082089409682500000e36 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.71681298840361987052238715252500000e35 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.23374336578378908821382189756250000e35 * a * a * pow(x, 0.4e1) + 0.2921792072297363602672773719531250e34 * a * x * x - 0.58435841445947272053455474390625e32) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.46685273051448081326266001915904000000e38;
return retval;
}

double HO_51( const double a, const double x )
{
double retval = sqrt(0.1827364208709e13) * pow(a, 0.3e1 / 0.4e1) * x * (0.33554432e8 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.21390950400e11 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.6288939417600e13 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.1133057251737600e16 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.140215834902528000e18 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.12661489891698278400e20 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.865201809266049024000e21 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.45793895761867309056000e23 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.1906170911087726739456000e25 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.63009538449844300554240000e26 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.1663451815075889534631936000e28 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.35159322455013119709265920000e29 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.594778538197305275081748480000e30 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.8029510265663621213603604480000e31 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.86030467132110227288610048000000e32 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.725523606147462916800611404800000e33 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.4761248665342725391504012344000000e34 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.23946280052164883586681944436000000e35 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.90463724641511782438576234536000000e35 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.249965554930493083053960648060000000e36 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.487432832114461511955223263717000000e36 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.638304899197509122798506654867500000e36 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.522249462979780191380596353982500000e36 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.238418233099464869978098335513750000e36 * a * a * pow(x, 0.4e1) + 0.49670465229055181245437153232031250e35 * a * x * x - 0.2980227913743310874726229193921875e34) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.1190474462811926073819783048855552000000e40;
return retval;
}

double HO_52( const double a, const double x )
{
double retval = sqrt(0.281132955186e12) * pow(a, 0.1e1 / 0.4e1) * (0.67108864e8 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.44493176832e11 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.13626035404800e14 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.2561694656102400e16 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.331419246133248000e18 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.31352260684205260800e20 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.2249524704091727462400e22 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.125330662085110530048000e24 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.5506715965364543913984000e25 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.192735058787759036989440000e27 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.5406218398996640987553792000e28 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.121885651177378814992121856000e30 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.2209177427589991021732208640000e31 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.32118041062654484854414417920000e32 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.372798690905810984917310208000000e33 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.3429747956333461061239253913600000e34 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.24758493059782172035820864188800000e35 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.138356284745841549611940123408000000e36 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.588014210169826585850745524484000000e36 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.1856886979483662902686564814160000000e37 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.4224417878325333103611934952214000000e37 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.6638370951654094877104469210622000000e37 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.6789243018737142487947752601772500000e37 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.4132582707057391079620371148905000000e37 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.1291432095955434712381365984032812500e37 * a * a * pow(x, 0.4e1) - 0.154971851514652165485763918083937500e36 * a * x * x + 0.2980227913743310874726229193921875e34) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.4761897851247704295279132195422208000000e40;
return retval;
}

double HO_53( const double a, const double x )
{
double retval = sqrt(0.7450023312429e13) * pow(a, 0.3e1 / 0.4e1) * x * (0.67108864e8 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.46238007296e11 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.14738364825600e14 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.2888719505817600e16 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.390338223223603200e18 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.38643484099136716800e20 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.2907922178460037939200e22 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.170321156166945079296000e24 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.7887998544981643984896000e25 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.291855946164320827441152000e27 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.8682714398388544616374272000e28 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.208385145561325070792982528000e30 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.4037462195250673246614036480000e31 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.63046525048914359158665338880000e32 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.790333224720319288024697640960000e33 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.7903332247203192880246976409600000e34 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.62485720579450243709452657238400000e35 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.385941215343663269970148765296000000e36 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.1833220772882400532358206635156000000e37 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.6561000660842275589492529010032000000e37 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.17222626734710973422417888651334000000e38 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.31984878221606093498776078923906000000e38 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.39981097777007616873470098654882500000e38 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.31289554782005961031411381555995000000e38 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.13689180217127607951242479430747812500e38 * a * a * pow(x, 0.4e1) - 0.2737836043425521590248495886149562500e37 * a * x * x + 0.157952079428395476360490147277859375e36) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.126190293058064163824897003178688512000000e42;
return retval;
}

double HO_54( const double a, const double x )
{
double retval = sqrt(0.2483341104143e13) * pow(a, 0.1e1 / 0.4e1) * (0.134217728e9 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.96032784384e11 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.31834868023296e14 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.6499618888089600e16 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.916446263220633600e18 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.94852188243335577600e20 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.7477514173182954700800e22 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.459867121650751714099200e24 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.22418522180474146062336000e26 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.875567838492962482323456000e27 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.27580386912528318193188864000e29 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.703299866269472113926316032000e30 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.14534863902902423687810531328000e32 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.243179453760098242469137735680000e33 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.3282922625761326273333359431680000e34 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.35564995112414367961111393843200000e35 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.306748082844573923664585771897600000e36 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.2084082562855781657838803332598400000e37 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.10999324637294403194149239810936000000e38 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.44286754460685360229074570817716000000e38 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.132860263382056080687223712453148000000e39 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.287863903994454841488984710315154000000e39 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.431795855991682262233477065472731000000e39 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.422408989557080473924053651005932500000e39 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.246405243908296943122364629753460625000e39 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.73921573172489082936709388926038187500e38 * a * a * pow(x, 0.4e1) + 0.8529412289133355723466467953004406250e37 * a * x * x - 0.157952079428395476360490147277859375e36) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.757141758348384982949382019072131072000000e42;
return retval;
}

double HO_55( const double a, const double x )
{
double retval = sqrt(0.273167521455730e15) * pow(a, 0.3e1 / 0.4e1) * x * (0.134217728e9 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.99656663040e11 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.34331720417280e14 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.7295490588672000e16 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.1072437116534784000e19 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.115930452297410150400e21 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.9564262314536337408000e22 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.616894919287593762816000e24 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.31615864613489180344320000e26 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.1301519759921971257507840000e28 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.43340608005401642875011072000e29 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.1172166443782453523210526720000e31 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.25787661763213977510631587840000e32 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.461202412303634597786295705600000e33 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.6687434978402701667901287731200000e34 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.78242989247311609514445066455040000e35 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.733528024193546339197922498016000000e36 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.5458311474146094818149246823472000000e37 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.31840150265852219772537273136920000000e38 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.143280676196334988976417729116140000000e39 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.487154299067538962519820278994876000000e39 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.1217885747668847406299550697487190000000e40 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.2158979279958411311167385327363655000000e40 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.2581388269515491785091438978369587500000e40 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.1936041202136618838818579233777190625000e40 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.813137304897379912303803278186420062500e39 * a * a * pow(x, 0.4e1) + 0.156372558634111521596885245805080781250e39 * a * x * x - 0.8687364368561751199826958100282265625e37) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.41642796709161174062216011048967208960000000e44;
return retval;
}

double HO_56( const double a, const double x )
{
double retval = sqrt(0.1912172650190110e16) * pow(a, 0.1e1 / 0.4e1) * (0.268435456e9 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.206695301120e12 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.73945243975680e14 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.16341898918625280e17 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.2502353271914496000e19 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.282265449071955148800e21 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.24345394982456131584000e23 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.1645053118100250034176000e25 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.88524420917769704964096000e26 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.3836058239770020548444160000e28 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.134837447127916222277812224000e30 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.3861254167753964547046440960000e31 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.90256816171248921287210557440000e32 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.1721822339266902498402170634240000e34 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.26749739913610806671605150924800000e35 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.337046722911496164062224901652480000e36 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.3423130779569882916256971657408000000e37 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.27787767504743755437850711101312000000e38 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.178304841488772430726208729566752000000e39 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.891524207443862153631043647833760000000e39 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.3410080093472772737638741952964132000000e40 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.9743085981350779250396405579897520000000e40 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.20150473279611838904228929722060780000000e41 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.28911548618573507993024116557739380000000e41 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.27104576829912663743460109272880668750000e41 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.15178563024751091696337661192813174500000e41 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.4378431641755122604712786882542261875000e40 * a * a * pow(x, 0.4e1) - 0.486492404639458067190309653615806875000e39 * a * x * x + 0.8687364368561751199826958100282265625e37) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.1165998307856512873742048309371081850880000000e46;
return retval;
}

double HO_57( const double a, const double x )
{
double retval = sqrt(0.54496920530418135e17) * pow(a, 0.3e1 / 0.4e1) * x * (0.268435456e9 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.214211493888e12 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.79526017105920e14 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.18264475261992960e17 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.2910900744880128000e19 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.342321927597903052800e21 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.30837500311111100006400e23 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.2180651807714284929024000e25 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.123070536397874955681792000e27 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.5606546658125414647726080000e28 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.207722553683546612698251264000e30 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.6288328216056456548047060992000e31 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.155898137023066318587000053760000e33 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.3165931398006885238997539553280000e34 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.52577075002614344147637710438400000e35 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.711543081702047457464697014599680000e36 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.7804738177419333049065895378890240000e37 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.68865336859582350432934370990208000000e38 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.483970284040953740542566551681184000000e39 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.2674572622331586460893130943501280000000e40 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.11433797960467532120318134783467972000000e41 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.37023726729132961151506341203610576000000e41 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.88352075149067293657003768781343420000000e41 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.149814388296244541418397694890104060000000e42 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.171662319922780203708580692061577568750000e42 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.123596870344401746670178098284335849500000e42 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.49914120716008397693725770460981785375000e41 * a * a * pow(x, 0.4e1) - 0.9243355688149703276615883418700330625000e40 * a * x * x + 0.495179769008019818390136611716089140625e39) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.33230951773910616901648376817075832750080000000e47;
return retval;
}

double HO_58( const double a, const double x )
{
double retval = sqrt(0.1879204156221315e16) * pow(a, 0.1e1 / 0.4e1) * (0.536870912e9 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.443723808768e12 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.170833666375680e15 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.40743829430599680e17 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.6753289728121896960e19 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.827277991694932377600e21 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.77764131219323643494400e23 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.5748991129428569358336000e25 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.339909100527464163311616000e27 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.16258985308563702478405632000e29 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.634100427033984396657819648000e30 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.20262390918404137765929418752000e32 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.531887761608108616355647242240000e33 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.11476501317774958991366080880640000e35 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.203298023343442130704199147028480000e36 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.2947821338479910895210887631912960000e37 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.34821139560793947449678610151971840000e38 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.332849128154648027092516126452672000000e39 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.2551843315852301541042623636137152000000e40 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.15512521209523201473180159472307424000000e41 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.73684475745235206997605757493460264000000e41 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.268422018786213968348420973726176676000000e42 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.732060051235129004586602655616845480000000e42 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.1448205753530363900377844383937672580000000e43 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.1991282911104250363019536027914299797500000e43 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.1792154619993825326717582425122869817750000e43 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.965006333842829022078698228912314517250000e42 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.268057314956341395021860619142309588125000e42 * a * a * pow(x, 0.4e1) + 0.28720426602465149466627923479533170156250e41 * a * x * x - 0.495179769008019818390136611716089140625e39) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.66461903547821233803296753634151665500160000000e47;
return retval;
}

double HO_59( const double a, const double x )
{
double retval = sqrt(0.221746090434115170e18) * pow(a, 0.3e1 / 0.4e1) * x * (0.536870912e9 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.459293065216e12 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.183257933021184e15 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.45356338422743040e17 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.7812629293317488640e19 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.996110234897979801600e21 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.97618803020002020556800e23 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.7537566147473013158707200e25 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.466386905374892689195008000e27 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.23397076419640449907949568000e29 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.959280133205258446225932288000e30 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.32310299032049841302427992064000e32 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.896610798139383096142376779776000e33 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.20518593265112805469412083998720000e35 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.386922044427841474566056441118720000e36 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.5997291688631542855773874837340160000e37 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.76090638299512699982631036998753280000e38 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.785523942444969343938338058428305920000e39 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.6546032853708077866152817153569216000000e40 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.43582797683898518424649019469816096000000e41 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.228809687840467221729407352216534504000000e42 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.931582300493330831326872791167319052000000e42 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.2879436201524840751373970445426258888000000e43 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.6572626112176266932484062973255590940000000e43 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.10680517432286433765286602331540335277500000e44 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.11748569175515077141815262564694368805250000e44 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.8133624813818130328949027929403793788250000e43 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.3163076316484828461257955305879253139875000e43 * a * a * pow(x, 0.4e1) + 0.564835056515147939510349161764152346406250e42 * a * x * x - 0.29215606371473169285018060091249259296875e41) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.3921252309321452794394508464414948264509440000000e49;
return retval;
}

double HO_60( const double a, const double x )
{
double retval = sqrt(0.7391536347803839e16) * pow(a, 0.1e1 / 0.4e1) * (0.1073741824e10 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.950261514240e12 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.392695570759680e15 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.100791863161651200e18 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.18029144523040358400e20 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.2390664563755151523840e22 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.244047007550005051392000e24 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.19663216036886121283584000e26 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.1271964287386070970531840000e28 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.66848789770401285451284480000e29 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.2877840399615775338677796864000e31 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.102032523259104762007667343360000e33 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.2988702660464610320474589265920000e34 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.72418564465104019303807355289600000e35 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.1450957666604405529622711654195200000e37 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.23989166754526171423095499349360640000e38 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.326102735569340142782704444280371200000e39 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.3625495118976781587407714115822950400000e40 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.32730164268540389330764085767846080000000e41 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.237724351003082827770812833471724160000000e42 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.1372858127042803330376444113299207024000000e43 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.6210548669955538875512485274448793680000000e43 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.21595771511436305635304778340696941660000000e44 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.56336795247225145135577682627905065200000000e44 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.106805174322864337652866023315403352775000000e45 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.140982830106180925701783150776332425663000000e45 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.122004372207271954934235418941056906823750000e45 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.63261526329696569225159106117585062797500000e44 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.16945051695454438185310474852924570392187500e44 * a * a * pow(x, 0.4e1) - 0.1752936382288390157101083605474955557812500e43 * a * x * x + 0.29215606371473169285018060091249259296875e41) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.7842504618642905588789016928829896529018880000000e49;
return retval;
}

double HO_61( const double a, const double x )
{
double retval = sqrt(0.901767434432068358e18) * pow(a, 0.3e1 / 0.4e1) * x * (0.1073741824e10 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.982473768960e12 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.420253154672640e15 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.111787339142922240e18 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.20750524828404940800e20 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.2859422321354200842240e22 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.303813621643883839488000e24 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.25520344218086242516992000e26 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.1724218256234451760054272000e28 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.94832004092894846802984960000e29 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.4281664984794202333154770944000e31 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.159589331251420268781223280640000e33 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.4927320602387600798620268789760000e34 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.126215212353467005072349962076160000e36 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.2682073262511173857787436694118400000e37 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.47204489420196659897058885816483840000e38 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.685940236887232714129136934520780800000e39 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.8190933416947543586365576335748147200000e40 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.79861600815238549967064369273544435200000e41 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.630486322225567499739981862685877120000000e42 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.3987825988076714435855385281488172784000000e43 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.19939129940383572179276926407440863920000000e44 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.77490709541036155514917145810736084780000000e44 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.229102967338715590218015909353480598480000000e45 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.501162741053440353601909801710738809175000000e45 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.781813876043366951618979290668752542313000000e45 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.826918522738176583443151172822719035138750000e45 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.551279015158784388962100781881812690092500000e45 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.206729630684544145860787793205679758784687500e45 * a * a * pow(x, 0.4e1) - 0.35643039773197266527722033311324096342187500e44 * a * x * x + 0.1782151988659863326386101665566204817109375e43) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.478392781737217240916130032658623688270151680000000e51;
return retval;
}

double HO_62( const double a, const double x )
{
double retval = sqrt(0.29089272078453818e17) * pow(a, 0.1e1 / 0.4e1) * (0.2147483648e10 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.2030445789184e13 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.898472261713920e15 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.247529108102184960e18 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.47649353309670604800e20 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.6818622458613863546880e22 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.753457781676831921930240e24 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.65927555896722793168896000e26 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.4647892690718956918407168000e28 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.267253829716340022808412160000e30 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.12641106145582883078837895168000e32 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.494726926879402833221792169984000e33 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.16078625123580592079708245524480000e35 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.434741286995275239693649869373440000e36 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.9781678957393692893107122060902400000e37 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.182917396503262057101103182538874880000e39 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.2835219645800561885067099329352560640000e40 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.36274133703624835882476123772598937600000e41 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.380878403888060776765999299612288844800000e42 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.3257512664832098748656572957210365120000000e43 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.22476837387341481365730353404751519328000000e44 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.123622605630378147511516943726133356304000000e45 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.533824887949360182436095893362848584040000000e45 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.1775547996875045824189623297489474638220000000e46 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.4438869992187614560474058243723686595550000000e46 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.8078743385781458500062786003577109603901000000e46 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.10253789681953389634695074543001716035720500000e47 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.8544824734961158028912562119168096696433750000e46 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.4272412367480579014456281059584048348216875000e46 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.1104934232969115262359383032651046986607812500e46 * a * a * pow(x, 0.4e1) + 0.110493423296911526235938303265104698660781250e45 * a * x * x - 0.1782151988659863326386101665566204817109375e43) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.956785563474434481832260065317247376540303360000000e51;
return retval;
}

double HO_63( const double a, const double x )
{
double retval = sqrt(0.2077805148460987e16) * pow(a, 0.3e1 / 0.4e1) * x * (0.2147483648e10 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.2097017782272e13 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.959385635389440e15 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.273584803691888640e18 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.54580168336531783680e20 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.8105154997974969876480e22 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.930741965600792374149120e24 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.84764000438643591217152000e26 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.6230154032240303954460672000e28 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.374155361602876031931777024000e30 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.18520690399342363580622962688000e32 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.760190155936643377877387968512000e33 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.25973163661168648744144088924160000e35 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.740235164343306489208106534338560000e36 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.17607022123308647207592819709624320000e38 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.349205938778954836283924257574215680000e39 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.5761897989852754798684750249974558720000e40 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.78802428390633264158482613712887347200000e41 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.888716275738808479120665032428673971200000e42 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.8208931915376888846614563852170120102400000e43 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.61566989365326666349609228891275900768000000e44 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.370867816891134442534550831178400068912000000e45 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.1770050944253141657551265330624182147080000000e46 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.6579971988419287466114486337755111894580000000e46 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.18643253967187981153991044623639483701310000000e47 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.39150833331094760423381193709642915772751000000e47 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.58726249996642140635071790564464373659126500000e47 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.59813773144728106202387934834176676875036250000e47 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.38451711307325211130106529536256435133951875000e47 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.13922171335410852305728226211403192031258437500e47 * a * a * pow(x, 0.4e1) + 0.2320361889235142050954704368567198671876406250e46 * a * x * x - 0.112275575285571389562324404930670903477890625e45) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.1435178345211651722748390097975871064810455040000000e52;
return retval;
}

double HO_64( const double a, const double x )
{
double retval = sqrt(0.4155610296921974e16) * pow(a, 0.1e1 / 0.4e1) * (0.4294967296e10 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.4329327034368e13 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.2046689355497472e16 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.603773359871754240e18 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.124754670483501219840e21 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.19212219254459187855360e23 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.2291057146094258151751680e25 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.216995841122927593515909120e27 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.16613744085974143878561792000e29 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.1041127962721046349723205632000e31 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.53878372070814148598175891456000e32 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.2316769999045008389721563332608000e34 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.83114123715739675981261084557312000e35 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.2493423711472190279437832536719360000e37 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.62602745327319634515885581189775360000e38 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.1314657651873712324833597204985282560000e40 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.23047591959411019194739000999898234880000e41 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.336223694466701927076192485174986014720000e42 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.4062702974805981618837325862531081011200000e43 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.40413203275701606629487083579914437427200000e44 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.328357276615075553864582554086804804096000000e45 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.2157776389184782211110113926856145855488000000e46 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.11328326043220106608328098115994765741312000000e47 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.46790911917648266425703013957369684583680000000e47 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.149146031737503849231928356989115869610480000000e48 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.357950476170009238156628056773878087065152000000e48 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.626413333297516166774099099354286652364016000000e48 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.765616296252519759390565565877461464000464000000e48 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.615227380917203378081704472580102962143230000000e48 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.297006321822098182522202159176601430000180000000e48 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.74251580455524545630550539794150357500045000000e47 * a * a * pow(x, 0.4e1) - 0.7185636818276568931988761915562937822585000000e46 * a * x * x + 0.112275575285571389562324404930670903477890625e45) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.22962853523386427563974241567613937036967280640000000e53;
return retval;
}

double HO_65( const double a, const double x )
{
double retval = sqrt(0.135057334649964155e18) * pow(a, 0.3e1 / 0.4e1) * x * (0.4294967296e10 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.4466765987840e13 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.2180898493562880e16 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.665174040536678400e18 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.142264097919782092800e21 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.22705350027997222010880e23 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.2809787065964656223846400e25 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.276563326921378305461452800e27 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.22038640114047333716459520000e29 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.1439857820784425802808688640000e31 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.77824315213398214641809620992000e32 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.3502094184602919658881432944640000e34 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.131766293695684852165413914542080000e36 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.4155706185786983799063054227865600000e37 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.109977795845291249825204399387443200000e39 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.2441507067765465746119537666401239040000e40 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.45396772041264128716910153484648038400000e41 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.704985165817278234192016501173357772800000e42 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.9106058391806510524980213140155871232000000e43 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.97291044922985349293209645655349571584000000e44 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.853728919199196440047914640625692490649600000e45 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.6098063708565688857485104575897803504640000000e46 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.35063866324252710930539351311412370151680000000e47 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.160074172349849332508983995117317341996800000000e48 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.570264238996338247063255482605443030863600000000e48 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.1551118730070040032012054912686805043948992000000e49 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.3132066666487580833870495496771433261820080000000e49 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.4524096296037616760035160162003181378184560000000e49 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.4443308862179802175034532301967410282145550000000e49 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.2757915845490911694849020049497013278573100000000e49 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.965270545921819093197157017323954647500585000000e48 * a * a * pow(x, 0.4e1) - 0.155688797729325660193089841503863652822675000000e48 * a * x * x + 0.7297912393562140321551086320493608726062890625e46) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.746292739510058895829162850947452953701436620800000000e54;
return retval;
}

double HO_66( const double a, const double x )
{
double retval = sqrt(0.36833818540899315e17) * pow(a, 0.1e1 / 0.4e1) * (0.8589934592e10 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.9212704849920e13 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.4643203244359680e16 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.1463382889180692480e19 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.323773464231228211200e21 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.53519753637422023311360e23 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.6868368383469159658291200e25 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.702045368338883390786764800e27 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.58182009901084961011453132800e29 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.3959609007157170957723893760000e31 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.223321948003664442015627608064000e33 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.10506282553808758976644298833920000e35 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.414122637329295249662729445703680000e36 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.13713830413097046536908078951956480000e38 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.382028132936274867813867913661644800000e39 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.8952192581806707735771638110137876480000e40 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.176246291454319558548004125293339443200000e42 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.2908063808996272716042068067340100812800000e43 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.40066656923948646309912937816685833420800000e44 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.458657783208359503810845472375219408896000000e45 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.4334316051318997311012489713945823414067200000e46 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.33539350397111288716168075167437919275520000000e47 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.210383197945516265583236107868474220910080000000e48 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.1056489537509005594559294367774294457178880000000e49 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.4181937752639813811797206872439915559666400000000e49 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.12796729523077830264099453029666141612579184000000e50 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.29530914284025762147921814683844942182875040000000e50 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.49765059256413784360386761782034995160030160000000e50 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.58651676980773388710455826385969815724321260000000e50 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.45505611450600042965008830816700719096456150000000e50 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.21235952010280020050337454381127002245012870000000e50 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.5137730325067746786371964769627500543148275000000e49 * a * a * pow(x, 0.4e1) + 0.481662217975101261222371697152578175920150781250e48 * a * x * x - 0.7297912393562140321551086320493608726062890625e46) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.4477756437060353374974977105684717722208619724800000000e55;
return retval;
}

double HO_67( const double a, const double x )
{
double retval = sqrt(0.4935731684480508210e19) * pow(a, 0.3e1 / 0.4e1) * x * (0.8589934592e10 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.9496172691456e13 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.4938009799557120e16 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.1607322189755842560e19 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.367674950906648985600e21 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.62909184100127641436160e23 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.8366921485316976311009280e25 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.887491314692550701560627200e27 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.76435189477895929171909017600e29 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.5414159254684294983010222080000e31 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.318352564175436545001001058304000e33 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.15642687357893041143003733819392000e35 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.645260853513087947148904020049920000e36 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.22410405797012246779825397311733760000e38 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.656304741198215798552029492700774400000e39 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.16210727107595930224235128469709127680000e41 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.337385757926840297791893611275821219840000e42 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.5904250763719705211358138197326871347200000e43 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.86595677867889009766586026894127446425600000e44 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.1059657637067589198459539539625506910208000000e46 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.10755525016236030364364326327198895138611200000e47 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.89885459064258253759330441448733623658393600000e47 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.612855402710851730177253009877729252216320000000e48 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.3370704714909684515974891554327510887189760000000e49 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.14746833127729869757390150550182860131455200000000e50 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.50434169296836154570274314881625381649576784000000e50 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.131904750468648404260717438921174075083508512000000e51 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.256481459244594119395839464568949590440155440000000e51 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.357242032519256094872776397078179786684502220000000e51 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.338763996354466986517287962746549797718062450000000e51 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.203258397812680191910372777647929878630837470000000e51 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.68845586355907806937384327913008507278186885000000e50 * a * a * pow(x, 0.4e1) + 0.10757122868110594833966301236407579262216700781250e50 * a * x * x - 0.488960130368663401543922783473071784646213671875e48) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.300009681283043676123323466080876087387977521561600000000e57;
return retval;
}

double HO_68( const double a, const double x )
{
double retval = sqrt(0.145168578955309065e18) * pow(a, 0.1e1 / 0.4e1) * (0.17179869184e11 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.19567871000576e14 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.10493270824058880e17 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.3525738996883783680e19 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.833396555388404367360e21 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.147511190303747573022720e24 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.20319666464341228183879680e26 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.2235163311077535100226764800e28 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.199907418634497045526531276800e30 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.14726513172741282353787804057600e32 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.901998931830403544169502998528000e33 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.46247945232031599901054517379072000e35 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.1994442638131362745732976061972480000e37 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.72567028295087275287053667485614080000e38 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.2231436120073933715076900275182632960000e40 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.58017339121922276591999407154748456960000e41 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.1274568418834730013880486975930880163840000e43 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.23617003054878820845432552789307485388800000e44 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.368031630938528291507990614300041647308800000e45 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.4803781288039737699683245912968964659609600000e46 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.52241121507432147484055299303537490673254400000e47 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.470170093566889327356497693731837416059289600000e48 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.3472847282028159804337767055973799095892480000000e49 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.20837083692168958826026602335842794575354880000000e50 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.100278465268563114350253023741243448893895360000000e51 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.381058168020539834530961490216725105796802368000000e51 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.1121190378983511436216098230829979638209822352000000e52 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.2491534175518914302702440512955510307132938560000000e52 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.4048743035218235741891465833552704249091025160000000e52 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.4607190350420751016635116293353077248965649320000000e52 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.3455392762815563262476337220014807936724236990000000e52 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.1560499957400576957247378099361526164972236060000000e52 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.365742177515760224354854242037857694915367826562500e51 * a * a * pow(x, 0.4e1) - 0.33249288865069111304986749276168881355942529687500e50 * a * x * x + 0.488960130368663401543922783473071784646213671875e48) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.600019362566087352246646932161752174775955043123200000000e57;
return retval;
}

double HO_69( const double a, const double x )
{
double retval = sqrt(0.2225918210648072330e19) * pow(a, 0.3e1 / 0.4e1) * x * (0.17179869184e11 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.20151986552832e14 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.11139010567077888e17 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.3861523663253667840e19 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.942694464291801661440e21 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.172513086965399704043520e24 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.24597490983149907801538560e26 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.2804113972079089489375395840e28 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.260256828033590493232653926400e30 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.19924106057238205537477617254400e32 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.1270161761148935603014198099968000e34 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.67895919595961284961122589343744000e35 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.3058145378468089543457229961691136000e37 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.116444766333977255693179140849008640000e39 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.3755343714270766496105027292380528640000e40 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.102646061523400950893537412658401116160000e42 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.2376897862151253269128475711871100846080000e43 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.46559234593903961095281318356063328337920000e44 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.769520682871468245880344011718268898918400000e45 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.10692287383056190363811095741769631016550400000e47 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.124297840828028212979303987998071960567398400000e48 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.1201545794670939392133271883981362285484851200000e49 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.9585058498397721059972237074487685504663244800000e49 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.62511251076506876478079807007528383726064640000000e50 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.329486385882421661436545649435514189222799040000000e51 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.1383842820706170978033491727629159594735755968000000e52 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.4550713891168369946994751642780505590381043664000000e52 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.11461057207387005792431226359595347412811517376000000e53 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.21489482263850635860808549424241276399021595080000000e53 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.28899648561730165467983911294669302743511800280000000e53 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.26491344514919318345651918686780194181552483590000000e53 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.15382071008662830007152726979420757911869184020000000e53 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.5047242049717491096096988540122436189832076006562500e52 * a * a * pow(x, 0.4e1) - 0.764733643896589560014695233351884271186678182812500e51 * a * x * x + 0.33738248995437774706530672059641953140588743359375e50) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.13800445339020009101672879439720300019846965991833600000000e59;
return retval;
}

double HO_70( const double a, const double x )
{
double retval = sqrt(0.3116285494907301262e19) * pow(a, 0.1e1 / 0.4e1) * (0.34359738368e11 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.41489384079360e14 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.23628204233195520e17 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.8447083013367398400e19 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.2128664919368584396800e22 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.402530536252599309434880e24 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.59373254097258398141644800e26 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.7010284930197723723438489600e28 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.674739924531530908380954624000e30 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.53641824000256707216285892608000e32 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.3556452931217019688439754679910400e34 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.198029765488220414469940885585920000e36 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.9307398977946359480087221622538240000e37 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.370506074699018540841933629974118400000e39 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.12517812380902554987016757641268428800000e41 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.359261215331903328127380944304403906560000e42 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.8756992123715143623104910517419845222400000e43 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.181063690087404293148316238051357387980800000e45 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.3168614576529575130095534165898754289664000000e46 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.46778757300870832841673543870242135697408000000e47 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.580056590530798327236751943991002482647859200000e48 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.6007728973354696960666359419906811427424256000000e49 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.51611853452910805707542815016472152717417472000000e50 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.364648964612956779455465540877248905068710400000000e51 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.2096731546524501481868926860044181204145084800000000e52 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.9686899744943196846234442093404117163150291776000000e52 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.35394441375753988476625846110515043480741450720000000e53 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.100284250564636300683773230646459289862100777040000000e54 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.214894822638506358608085494242412763990215950800000000e54 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.337162566553518597126478965104475198674304336600000000e54 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.370878823208870456839126861614922718541734770260000000e54 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.269186242651599525125172722139863263457710720350000000e54 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.117768981160074792242263065936190177762748440153125000e54 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.26765677536380634600514333167315949491533736398437500e53 * a * a * pow(x, 0.4e1) + 0.2361677429680644229457147044174936719841212035156250e52 * a * x * x - 0.33738248995437774706530672059641953140588743359375e50) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.193206234746280127423420312156084200277857523885670400000000e60;
return retval;
}

double HO_71( const double a, const double x )
{
double retval = sqrt(0.110628135069209194801e21) * pow(a, 0.3e1 / 0.4e1) * x * (0.34359738368e11 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.42691974922240e14 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.25038843291893760e17 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.9226813753062850560e19 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.2398971575796341145600e22 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.468519148753025425735680e24 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.71449170184836377424691200e26 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.8732109299018217269546188800e28 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.871027902577067172637232332800e30 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.71859801962608041742571667456000e32 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.4951140355223694076063187887718400e34 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.286941088768645906680934752583680000e36 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.14060113349663649427365802876600320000e38 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.584576251191784808883939727292497920000e39 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.20668946024280962885539297500699033600000e41 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.622135275330856982854732854771040911360000e42 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.15942216430353210185652529403507923353600000e44 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.347446540437992021987309537882334447206400000e45 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.6427760998102852406765226450823187273318400000e46 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.100645205101873610053297624690520958621696000000e48 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.1328516707344731652703528645914876653806387200000e49 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.14708577831316671869217638579771848667142144000000e50 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.135720059079876563156871846895167512701357056000000e51 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.1035603059500797253653522136091386890395137536000000e52 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.6472519121879982835334513350571168064969609600000000e52 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.32750946756712713146792637553890110408746224576000000e53 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.132263438825185956938970267044556215112244368480000000e54 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.418834222946422196973405845641094681188773833520000000e54 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.1017168827155596764078271339414087082887022167120000000e55 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.1841426325023063107383077424801364546605815992200000000e55 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.2393854222529982039598000652241773910587560789860000000e55 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.2123580358695951809320807030214476856166384571650000000e55 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.1194513951766472892742953954495643231593591321553125000e55 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.380072621016605011327303530975886482779779056857812500e54 * a * a * pow(x, 0.4e1) + 0.55893032502441913430485813378806835702908684832031250e53 * a * x * x - 0.2395415678676082004163677716234578672981800778515625e52) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.6858821333492944523531421081540989109863942097941299200000000e61;
return retval;
}

double HO_72( const double a, const double x )
{
double retval = sqrt(0.110628135069209194801e21) * pow(a, 0.1e1 / 0.4e1) * (0.68719476736e11 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.87823491268608e14 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.53023432853422080e17 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.20131230006682583040e20 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.5397686045541767577600e22 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.1088173506781220343644160e25 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.171478008443607305819258880e27 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.21679719638941780807149158400e29 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.2239786035198172729638597427200e31 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.191626138566954777980191113216000e33 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.13710850214465614364482674150604800e35 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.826390335653700211241092087440998400e36 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.42180340048990948282097408629800960000e38 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.1829977829817761140854072189785210880000e40 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.67643823352192242170855882729560473600000e41 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.2133035229705795369787655502072140267520000e43 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.57391979149271556668349105852628524072960000e44 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.1316639521659759241215067722501477905203200000e46 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.25711043992411409627060905803292749093273600000e47 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.426262045137347054343378175159853471809536000000e48 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.5978325183051292437165878906616944942128742400000e49 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.70601173590320024972244665182904873602282291200000e50 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.697988875267936610521055212603718636749836288000000e51 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.5735647714158261712542584138352296623726915584000000e52 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.38835114731279897012007080103427008389817657600000000e53 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.214369833316665031506279082170917086311793469952000000e54 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.952296759541338889960585922720804748808159453056000000e54 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.3350673783571377575787246765128757449510190668160000000e55 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.9154519444400370876704442054726783745983199504080000000e55 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.18940385057380077675940224940814035336516964491200000000e56 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.28726250670359784475176007826901286927050729478320000000e56 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.30579557165221706054219621235088466728795937831760000000e56 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.21501251131796512069373171180921578168684643787956250000e56 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.9121742904398520271855284743421275586714697364587500000e55 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.2012149170087908883497489281637046085304712653953125000e55 * a * a * pow(x, 0.4e1) - 0.172469928864677904299784795568889664454689656053125000e54 * a * x * x + 0.2395415678676082004163677716234578672981800778515625e52) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.82305856001915334282377052978491869318367305175295590400000000e62;
return retval;
}

double HO_73( const double a, const double x )
{
double retval = sqrt(0.16151707720104542440946e23) * pow(a, 0.3e1 / 0.4e1) * x * (0.68719476736e11 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.90297392431104e14 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.56097255047823360e17 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.21934026723698933760e20 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.6062016635762292817920e22 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.1260899460238556906127360e25 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.205211387153825136472227840e27 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.26824059892249999981726924800e29 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.2868497904727484373045923020800e31 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.254340147552503614410071841177600e33 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.18884755955773393369947834207436800e35 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.1182872441229806184717641615356723200e37 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.62840098440333453563124710815825920000e38 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.2842305990993543899624409996900433920000e40 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.109733313438000748410499543094620323840000e42 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.3621199343454024697546484922122470686720000e43 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.102185718973093259433889871396143469690880000e45 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.2464479104645190374582049839554048386662400000e46 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.50727194903946835210147192530820829292134400000e47 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.889060837000752427630474479619122955488460800000e48 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.13224779950386192361003307884334453962890854400000e50 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.166254376519140703966898727688775992676342169600000e51 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.1757006479122736985104725190347291740784070656000000e52 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.15507491967909374259837357114804357538224623616000000e53 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.113398535015337299275060673902006864498267560192000000e54 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.680391210092023795650364043412041186989605361152000000e54 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.3310364926024654236529655826600892698237887622528000000e55 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.12873641378984766475393105992336804937591785198720000000e56 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.39310583496542769058789662940885600791574915517520000000e56 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.92176540612583044689575761378628305304382560523840000000e56 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.161308946072020328206757582412599534282669480916720000000e57 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.202937061187380412905275668196496188291100314701680000000e57 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.174399036957905042340471277356363911812664332946756250000e57 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.95126747431584568549347969467107588261453272516412500000e56 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.29377377883283469699063343511900872845448804747715625000e56 * a * a * pow(x, 0.4e1) - 0.4196768269040495671294763358842981835064114963959375000e55 * a * x * x + 0.174865344543353986303948473285124243127671456831640625e54) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.6008327488139819402613524867429906460240813277796578099200000000e64;
return retval;
}

double HO_74( const double a, const double x )
{
double retval = sqrt(0.436532641083906552458e21) * pow(a, 0.1e1 / 0.4e1) * (0.137438953472e12 * pow(a, 0.37e2) * pow(x, 0.74e2) - 0.185611306663936e15 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.118605624958255104e18 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.47738764045697679360e20 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.13593613062012414197760e23 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.2915830001801662845419520e25 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.489859440302679358030479360e27 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.66166014400883333288259747840e29 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.7319615343097718745013734604800e31 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.672184675674473838083761294540800e33 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.51758220026934485532449619679641600e35 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.3366636948115602218042518443707596800e37 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.186006691383387022546849144014844723200e39 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.8763776805563427023841930823776337920000e40 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.353055008452698060103346356043561041920000e42 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.12180397791618083073565449283502855946240000e44 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.360083009714709580862278594443553178910720000e45 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.9118572687187204385953584406349979030650880000e46 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.197569074889056095028994328804249545664102400000e48 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.3655027885447537758036395082878616594785894400000e49 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.57566689195798719689073222555338211367877836800000e50 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.768926491401025755846906615560588966128082534400000e51 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.8667898630338835793183310939046639254534748569600000e52 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.81968171830378121087711744749680175559187296256000000e53 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.645499353164227703565729989903731382528599958016000000e54 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.4195745795567480073177244934374253986435899727104000000e55 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.22269727684165855773017684651678732697236698551552000000e56 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.95264946204487271917908984343292356538179210470528000000e56 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.323220353193796101150048339736170495397393749810720000000e57 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.852633000666393163378575792752311824065538684845520000000e57 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.1705266001332786326757151585504623648131077369691040000000e58 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.2502890421311025092498399907756786322256903881320720000000e58 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.2581105746976994626638974904874185894827432127611992500000e58 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.1759844827484314518162937435141490382836885541553631250000e58 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.724641987787658919243562473293554863521070517110318750000e57 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.155280425954498339837906244277190327897372253666496875000e57 * a * a * pow(x, 0.4e1) + 0.12940035496208194986492187023099193991447687805541406250e56 * a * x * x - 0.174865344543353986303948473285124243127671456831640625e54) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.12016654976279638805227049734859812920481626555593156198400000000e65;
return retval;
}

double HO_75( const double a, const double x )
{
double retval = sqrt(0.654798961625859828687e21) * pow(a, 0.3e1 / 0.4e1) * x * (0.137438953472e12 * pow(a, 0.37e2) * pow(x, 0.74e2) - 0.190696547942400e15 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.125287631998156800e18 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.51889960919236608000e20 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.15216731039566135296000e23 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.3364419232848072513945600e25 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.583166000360332569083904000e27 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.81351657050266393387204608000e29 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.9304595775124218743661527040000e31 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.884453520624307681689159598080000e33 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.70579390945819752998794935926784000e35 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.4764108888842833327418658175057920000e37 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.273539252034392680215954623551242240000e39 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.13413944090148102587513159424147456000000e41 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.563385651786220308675552695814193152000000e42 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.20300662986030138455942415472504759910400000e44 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.628051761130307408480718478680616009728000000e45 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.16680315891196105584061434889664595787776000000e47 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.379940528632800182748066016931249126277120000000e48 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.7408840308339603563587287330159357962403840000000e49 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.123357191133854399333728334047153310074023936000000e51 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.1747560207729603990561151399001338559382005760000000e52 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.20970722492755247886733816788016062712584069120000000e53 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.211986651285460657985461408835379764377208524800000000e54 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.1793053758789521398793694416399253840357222105600000000e55 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.12587237386702440219531734803122761959307699181312000000e56 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.72618677230975616651144623864169780534467495276800000000e56 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.340231950730311685421103515511758416207782894537600000000e57 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.1275869815238668820329138183169094060779185854516000000000e58 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.3761616179410558073729010850377846282642082433142000000000e58 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.8526330006663931633785757927523118240655386848455200000000e58 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.14439752430640529379798461006289151859174445469158000000000e59 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.17598448274843145181629374351414903828368855415536312500000e59 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.14665373562369287651357811959512419856974046179613593750000e59 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.7764021297724916991895312213859516394868612683324843750000e58 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.2329206389317475097568593664157854918460583804997453125000e58 * a * a * pow(x, 0.4e1) + 0.323500887405204874662304675577479849786192195138535156250e57 * a * x * x - 0.13114900840751548972796135496384318234575359262373046875e56) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.90124912322097291039202873011448596903612199166948671488000000000e65;
return retval;
}

double HO_76( const double a, const double x )
{
double retval = sqrt(0.68926206486932613546e20) * pow(a, 0.1e1 / 0.4e1) * (0.274877906944e12 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.391701017395200e15 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.264496111996108800e18 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.112675343710342348800e21 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.34013869382559596544000e23 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.7748359445347076092723200e25 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.1385019250855789851574272000e28 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.199442772123233738626695168000e30 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.23571642630314687483942535168000e32 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.2317878191980944269254349291520000e34 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.191572632567225043853871968944128000e36 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.13410084279705753069771037826088960000e38 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.799576275177455526785098130380554240000e39 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.40778390034050231866040004649408266240000e41 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.1784054563989697644139250203411611648000000e43 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.67080451606012631419635807648276597964800000e44 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.2169633356631971047478845653623946215424000000e46 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.60366857510995429732793764362595679993856000000e47 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.1443774008804640694442650864338746679853056000000e49 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.29635361233358414254349149320637431849615360000000e50 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.520841473676274130520186299310202864756989952000000e51 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.7812622105144111957802794489653042971354849280000000e52 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.99610931840587427461985629743076297884774328320000000e53 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.1074065699846334000459671138099257472844523192320000000e55 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.9733720404857401879165769689024520847653491430400000000e55 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.73586926260721958206493218849025377608260395213824000000e56 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.459918289129512238790582617806408610051627470086400000000e57 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.2350693477773062553818533379899421784708318180441600000000e58 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.9696610595813883034501450192085114861921812494321600000000e58 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.31764758848355823733711647180968479720088696102088000000000e59 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.81000135063307350520964700311469623286226175060324400000000e59 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.156774454961240033266383290925425077328179693665144000000000e60 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.222913678148013172300638741784588781826005501930126625000000e60 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.222913678148013172300638741784588781826005501930126625000000e60 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.147516404656773422846010932063330811502503640983172031250000e60 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.59006561862709369138404372825332324601001456393268812500000e59 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.12293033721397785237167577671944234291875303415264335937500e59 * a * a * pow(x, 0.4e1) - 0.996732463897117721932506297725208185827727303940351562500e57 * a * x * x + 0.13114900840751548972796135496384318234575359262373046875e56) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.360499649288389164156811492045794387614448796667794685952000000000e66;
return retval;
}

double HO_77( const double a, const double x )
{
double retval = sqrt(0.54156305096875624929e20) * pow(a, 0.3e1 / 0.4e1) * x * (0.274877906944e12 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.402146377859072e15 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.278989049639731200e18 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.122197203742202265600e21 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.37957506412421578752000e23 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.8904831004354102375219200e25 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.1640715112552243362634137600e28 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.243763388150619013877071872000e30 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.29754368566134933381370085376000e32 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.3025027470890384893772625346560000e34 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.258791100134672427662248098398208000e36 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.18774117991588054297679452956524544000e38 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.1161648550729510859668916151684956160000e40 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.61567373188664075562452556039302676480000e41 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.2803514314840953440790250319646818304000000e43 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.109897761141765374878977812530155277516800000e45 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.3712483743570261570130469229534307968614400000e46 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.108098791356898792777328368742322496733184000000e48 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.2711478016535544718831319915953255959724032000000e49 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.58510841409451228143202166607412365446676480000000e50 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.1083913337110084001352820136402314069899681792000000e52 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.17187768631317046307166147877236694536980668416000000e53 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.232425507628037330744633136067178028397806766080000000e54 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.2667840609295732839851441213988478239000912445440000000e55 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.25844705902552411886060836760513382940321339315200000000e56 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.209859011928725584514813994495368669475409275239424000000e57 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.1416548330518897695474994462843738518959012607866112000000e58 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.7869712947327209419305524793576325105327847821478400000000e58 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.35554238851317571126505317370978754493713312479179200000000e59 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.128730864806494654078726149101819628339306821045304000000000e60 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.366882964698509764124369524940185940767024439979116400000000e60 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.804775535467698837434100893417182063617989094147739200000000e60 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.1320334862876693405165321778262564323123263357586134625000000e61 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.1560395747036092206104471192492121472782038513510886375000000e61 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.1262084795396839284349204640986274720632531150633805156250000e61 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.649072180489803060522448101078655570611016020325956937500000e60 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.189312719309525892652380696147941208094879672595070773437500e60 * a * a * pow(x, 0.4e1) - 0.25582799906692688196267661641613676769578334134469023437500e59 * a * x * x + 0.1009847364737869270905302433221592504062302663202724609375e58) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.1982748071086140402862463206251869131879468381672870772736000000000e67;
return retval;
}

double HO_78( const double a, const double x )
{
double retval = sqrt(0.1388623207612195511e19) * pow(a, 0.1e1 / 0.4e1) * (0.549755813888e12 * pow(a, 0.39e2) * pow(x, 0.78e2) - 0.825458354552832e15 * pow(a, 0.38e2) * pow(x, 0.76e2) + 0.588139077618892800e18 * pow(a, 0.37e2) * pow(x, 0.74e2) - 0.264760608108104908800e21 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.84591014290539518361600e23 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.20428729951165293684326400e26 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.3878053902396211584407961600e28 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.594173258617133846325362688000e30 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.74865830585758864636995698688000e32 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.7865071424315000723808825901056000e34 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.696058821051877564057081092243456000e36 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.52299328690852436972107047521746944000e38 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.3355873590996364705710202215978762240000e40 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.184702119565992226687357668117908029440000e42 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.8746964662303774735265580997298073108480000e43 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.357167723710737468356677890723004651929600000e45 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.12590162260803495759572895647985913980518400000e47 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.383259351174459356210527852813688852054016000000e48 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.10071204061417737527087759687826379278974976000000e50 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.228192281496859789758488449768908225242038272000000e51 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.4449749489188765900290524770493710392219746304000000e52 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.74480330735707200664386640801359009660249563136000000e53 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.1066422917352171282240081447837640365589936926720000000e55 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.13005722970316697594275775918193831415129448171520000000e56 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.134392470693272541807516351154669591289670964439040000000e57 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.1169214495031471113725392255045625444220137390619648000000e58 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.8499289983113386172849966777062431113754075647196672000000e58 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.51153134157626861225485911158246113184631010839609600000000e59 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.252111875491160958897037704994212986409967124852361600000000e60 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.1004100745490658301814063962994193101046593204153371200000000e61 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.3179652360720417955744535882814944819980878479819008800000000e61 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.7846561470810063664982483710817525120275393667940457200000000e61 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.14712302757768869371842156957782859600516363127388357250000000e62 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.20285144711469198679358125502397579146166500675641522875000000e62 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.19688522808190692835847592399385885641867485949887360437500000e62 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.12656907519551159680187737971033783626914812396356160281250000e62 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.4922130702047673208961898099846471410466871487471840109375000e61 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.997729196361014839654438804022933394013555031244291914062500e60 * a * a * pow(x, 0.4e1) + 0.78768094449553803130613589791284215316859607729812519531250e59 * a * x * x - 0.1009847364737869270905302433221592504062302663202724609375e58) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.3965496142172280805724926412503738263758936763345741545472000000000e67;
return retval;
}

double HO_79( const double a, const double x )
{
double retval = sqrt(0.219402466802726890738e21) * pow(a, 0.3e1 / 0.4e1) * x * (0.549755813888e12 * pow(a, 0.39e2) * pow(x, 0.78e2) - 0.846898831294464e15 * pow(a, 0.38e2) * pow(x, 0.76e2) + 0.619506495091900416e18 * pow(a, 0.37e2) * pow(x, 0.74e2) - 0.286521753980003942400e21 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.94122396182431295078400e23 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.23389415451334176826982400e26 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.4572630720735831569675059200e28 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.722149037396208828610825420800e30 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.93879374861507147719407304704000e32 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.10185912172473525527555692560384000e35 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.932010963781327585771345869275136000e36 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.72485034501356886329762399196807168000e38 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.4820254794340232940929199546587676672000e40 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.275310706522894073741533127949334609920000e42 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.13549219771019572629136880368363681873920000e44 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.575841840268331836738317415655456479641600000e45 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.21162187629861195000133165025338025626828800000e47 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.672833083172939758680704452717364873605939200000e48 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.18502909787255843363719372449727534024163328000000e50 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.439687566786632277827331403213262190100512768000000e51 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.9013595119125961695460293765871874897060511744000000e52 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.159025571030293752769906611440739507112424742912000000e54 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.2407068870594900894199040982262102539474429063168000000e55 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.31134912565303609392357160531433717630158375925760000000e56 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.342484038218339703315928765845770893931742135183360000000e57 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.3185101555430559240838137522365669313565201857205248000000e58 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.24868292913553981765005458347701187332835999115871744000000e59 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.161643903938100881472535479260057717663433994253166336000000e60 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.865949485382683293602868638893166344625539254927676800000000e60 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.3777331375893428849681478717930535951556231577529348800000000e61 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.13220659815627000973885175512756875830446810521352720800000000e62 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.36463432717293825266683306656152028500103299986311536400000000e62 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.77484794524249378691702026644323060562719512470912014850000000e62 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.123271264015851284282253224206877596349781042567360023625000000e63 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.141399391077005884911996345413771360518866490003736497687500000e63 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.111099521560504623859425699967963211836252242145792962468750000e63 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.55549760780252311929712849983981605918126121072896481234375000e62 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.15764121302504034466540133103562347625414169493659812242187500e62 * a * a * pow(x, 0.4e1) + 0.2074226487171583482439491197837151003343969670218396347656250e61 * a * x * x - 0.79777941814291672401518892224505807820921910393015244140625e59) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.313274195231610183652269186587795322836956004304313582092288000000000e69;
return retval;
}

double HO_80( const double a, const double x )
{
double retval = sqrt(0.548506167006817226845e21) * pow(a, 0.1e1 / 0.4e1) * (0.1099511627776e13 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.1737228371886080e16 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.1304224200193474560e19 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.619506495091900416000e21 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.209160880405402877952000e24 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.53461521031620975604531200e26 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.10759131107613721340411904000e29 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.1750664333081718372389879808000e31 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.234698437153767869298518261760000e33 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.26286224961222001361434045317120000e35 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.2485362570083540228723588984733696000e37 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.199958715865812100220034204680847360000e39 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.13772156555257808402654855847393361920000e41 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.815735426734500959234172230960991436800000e42 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.41689906987752531166575016518042098073600000e44 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.1842693888858661877562615730097460734853120000e46 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.70540625432870650000443883417793418756096000000e47 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.2340288984949355682367667661625616951672832000000e49 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.67283308317293975868070445271736487360593920000000e50 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.1675000254425265820294595821764808343240048640000000e52 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.36054380476503846781841175063487499588242046976000000e53 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.669581351706500011662764679750482135210209443840000000e54 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.10698083869310670640884626587831566842108573614080000000e56 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.146517235601428750081680755442041024141921769062400000000e57 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.1712420191091698516579643829228854469658710675916800000000e58 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.16987208295629649284470066785950236339014409905094656000000e59 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.142104530934594181514316904844006784759062852090695680000000e60 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.994731716542159270600218333908047493313439964634869760000000e60 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.5772996569217888624019124259287775630836928366184512000000000e61 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.27471500915588573452228936130403897829499866018395264000000000e62 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.105765278525016007791081404102055006643574484170821766400000000e63 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.324119401931500669037184948054684697778695999878324768000000000e63 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.774847945242493786917020266443230605627195124709120148500000000e63 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.1408814445895443248940036848078601101140354772198400270000000000e64 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.1885325214360078465493284605516951473584886533383153302500000000e64 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.1777592344968073981750811199487411389380035874332687399500000000e64 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.1110995215605046238594256999679632118362522421457929624687500000e64 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.420376568066774252441070216094995936677711186497594993125000000e63 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.82969059486863339297579647913486040133758786808735853906250000e62 * a * a * pow(x, 0.4e1) - 0.6382235345143333792121511377960464625673752831441219531250000e61 * a * x * x + 0.79777941814291672401518892224505807820921910393015244140625e59) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.6265483904632203673045383731755906456739120086086271641845760000000000e70;
return retval;
}

double HO_81( const double a, const double x )
{
double retval = sqrt(0.1097012334013634453690e22) * pow(a, 0.3e1 / 0.4e1) * x * (0.1099511627776e13 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.1781208836997120e16 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.1371976106697031680e19 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.669067014699252449280e21 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.232082620723803193344000e24 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.60991312726215479210803200e26 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.12630284343720455486570496000e29 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.2116474790740584897963884544000e31 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.292470360145464575587384295424000e33 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.33796574950142573178986629693440000e35 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.3300235543881422270928044389564416000e37 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.274519592968318307081741874222858240000e39 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.19570959315366359309035847783137935360000e41 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.1201355810281719594508508194688005570560000e43 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.63714763509584057065897666753988866867200000e44 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.2926631470540227687893566159566555284766720000e46 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.116607972654337196939509276670229937127424000000e48 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.4033263995338251282378320863652659001819136000000e49 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.121109954971129156562526801489125677249069056000000e51 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.3155233037405733289392145617743011065173114880000000e52 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.71229385819434429008027687320548474796283068416000000e53 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.1390668961236576947299588181020232126975050383360000000e55 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.23420129551734170862477155503090727411102553047040000000e56 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.339082745249020821617604034023009227299876094115840000000e57 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.4203213196315987267968216671743551880071380749977600000000e58 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.44385931353096825549744368053611907853553780719763456000000e59 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.396912655369038920781367906633260329844279000667115520000000e60 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.2984195149626477811800655001724142479940319893904609280000000e61 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.18704508884265959141821962600092393043911647906437818880000000e62 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.96747459746203236940458427241857205399543006412609408000000000e62 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.407951788596490315765599701536497882768073010373169670400000000e63 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.1381772187181660746947998989075234764214440841586542432000000000e64 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.3691922562625999808251684798935392885635459123614043060500000000e64 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.7607598007835393544276198979624445946157915769871361458000000000e64 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.11747026335628181208073542542067159181567369938771955192500000000e65 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.13089543631128544774710518832589120230889355074631607214500000000e65 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.9998956940445416147348312997116689065262701793121366622187500000e64 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.4864357430486959206818098214813524410127800872329313491875000000e64 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.1344098763687186096620790296198473850166892346301520833281250000e64 * a * a * pow(x, 0.4e1) - 0.172320354318870012387280807204932544893191326448912927343750000e63 * a * x * x + 0.6462013286957625464523030270184970433494674741834234775390625e61) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.56389355141689833057408453585803158110652080774776444776611840000000000e71;
return retval;
}

double HO_82( const double a, const double x )
{
double retval = sqrt(0.26756398390576450090e20) * pow(a, 0.1e1 / 0.4e1) * (0.2199023255552e13 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.3651478115844096e16 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.2884667711516835840e19 * pow(a, 0.39e2) * pow(x, 0.78e2) - 0.1443776189614176337920e22 * pow(a, 0.38e2) * pow(x, 0.76e2) + 0.514345267550050320384000e24 * pow(a, 0.37e2) * pow(x, 0.74e2) - 0.138924656765268591535718400e27 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.29590951891002209997108019200e29 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.5104439201197881224501133312000e31 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.726744531270548339338348855296000e33 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.86603723309740343771153238589440000e35 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.8729655309621826652132246449815552000e37 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.750353554113403372690094456209145856000e39 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.55338574615863498735894466145424506880000e41 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.3518256301539321669632059713014873456640000e43 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.193504096584662691829763284215818040115200000e45 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.9230145407088410400279708657094520513495040000e46 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.382474150306226005961590427478354193777950720000e48 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.13780318650739025214792596284146584922882048000000e50 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.431783317723156123396834683569926327583637504000000e51 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.11760414048512278624097997302496677606554337280000000e53 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.278133792247315389459917636204046425395010076672000000e54 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.5701742741069965483928311542182951720597706571776000000e55 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.101076348591694842669638250065970507774232071045120000000e57 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.1544710283912205965146862821660375368810546650972160000000e58 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.20274322476347703292552574534292426715638424794009600000000e59 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.227477898184621230942439886274761027749463126188787712000000e60 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.2169789182684079433604811222928489803148725203646898176000000e61 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.17478857304955084326260979295812834525364730807155568640000000e62 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.117982286808446819202261610246736633046211932948300088320000000e63 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.661107641599055452426465919486024236896877210486164288000000000e63 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.3041095151355655081161743229635711489725635168236355724800000000e64 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.11330531934889618124973591710416925066558414901009647942400000000e65 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.33637516681703553808515350390300246291345294237372392329000000000e65 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.77977879580312783828831039541150570948118636641181454944500000000e65 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.137608022788787265580290069778501007555503476425614332255000000000e66 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.178890429625423445254377090712051309822154519353298631931500000000e66 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.163982893823304824816512333152713700670308309407190412603875000000e66 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.99719327324982663739771013403677250407619917882750926583437500000e65 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.36738699540783086640968268096091618571228390798908236109687500000e65 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.7065134527073670507878513095402234340620844384405430021093750000e64 * a * a * pow(x, 0.4e1) + 0.529885089530525288090888482155167575546563328830407251582031250e63 * a * x * x - 0.6462013286957625464523030270184970433494674741834234775390625e61) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.112778710283379666114816907171606316221304161549552889553223680000000000e72;
return retval;
}

double HO_83( const double a, const double x )
{
double retval = sqrt(0.1110390533208922678735e22) * pow(a, 0.3e1 / 0.4e1) * x * (0.2199023255552e13 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.3741638069321728e16 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.3030726836150599680e19 * pow(a, 0.39e2) * pow(x, 0.78e2) - 0.1556278230363332935680e22 * pow(a, 0.38e2) * pow(x, 0.76e2) + 0.569208762755389021224960e24 * pow(a, 0.37e2) * pow(x, 0.74e2) - 0.157955431664620453389926400e27 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.34592239534551879292393881600e29 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.6140122517382958574399913984000e31 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.900295464111276300971387387904000e33 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.110586292841668438969318750814208000e36 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.11500974455533517652809150084677632000e38 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.1020972868711679998906194096153427968000e40 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.77849181239265599916597299831698882560000e41 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.5123074965399363132972999231232184156160000e43 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.292015273027763698579460956180234496901120000e45 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.14454756014874303079683317330921607596605440000e47 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.622457930890524676368862852562811727128821760000e48 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.23342172408394675363832356971105439767330816000000e50 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.762510965340892728551856994389444365732806656000000e51 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.21691430356144869462225195024604983140977999872000000e53 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.536862901314585519190073576858973332739205496832000000e54 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.11542552378263588662586581902467926653892918181888000000e56 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.215111203413094152348204480909629542186186202480640000000e57 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.3465160907154407975869989572913815016520956000829440000000e58 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.48079107586767410665196105324179183354228264511508480000000e59 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.572141380282532186915833653357732281915316347686950912000000e60 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.5809435553638019128683849403324666247140135222667501568000000e61 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.50025695045216275830333147639740181572595608861859041280000000e62 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.362686289077817999769915320388116316401318164248478049280000000e63 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.2194877370108864102055866852693600466497632338814065436160000000e64 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.10974386850544320510279334263468002332488161694070327180800000000e65 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.44782578599801824017752767236409751453540401751609560915200000000e65 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.146942836030599735058251267494469496956929443247468871753000000000e66 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.380715529715644768105469193053852787570226284777532985905500000000e66 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.761431059431289536210938386107705575140452569555065971811000000000e66 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.1142146589146934304316407579161558362710678854332598957716500000000e67 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.1237325471575845496342774877425021559603235425526982204192875000000e67 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.919633796441506787822332679167245753759161464918702989602812500000e66 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.435616008840713741600052321710800620201708062329911942443437500000e66 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.117281233149422930430783317383677090054306016781130138350156250000e66 * a * a * pow(x, 0.4e1) + 0.14660154143677866303847914672959636256788252097641267293769531250e65 * a * x * x - 0.536347102817482913555411512425352545980058003572241486357421875e63) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.4680316476760256143764901647621662123184122704306444916458782720000000000e73;
return retval;
}

double HO_84( const double a, const double x )
{
double retval = sqrt(0.46636402394774752506870e23) * pow(a, 0.1e1 / 0.4e1) * (0.4398046511104e13 * pow(a, 0.42e2) * pow(x, 0.84e2) - 0.7665795068854272e16 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.6364526355916259328e19 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.3351983880782563246080e22 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.1258250949248754678497280e25 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.358601520535895083371724800e27 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.80715225580621051682252390400e29 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.14736294041719100578559793561600e32 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.2224259381921976743576368840704000e34 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.281492381778792390103720456617984000e36 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.30190057945775483838624018972278784000e38 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.2766507128121971609939364647641546752000e40 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.217977707469943679766472439528756871168000e42 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.14839251623915396661025239152534602383360000e44 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.876045819083291095738382868540703490703360000e45 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.44970352046275609581236987251756112522772480000e47 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.2011017930569387415960941523664468656877731840000e49 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.78429699292206109222476719422914277618231541760000e50 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.2668788378693124549931499480363055280064823296000000e52 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.79220876083311697166387668785513851471397912576000000e53 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.2049840168655690164180280929825170906822420987904000000e55 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.46170209513054354650346327609871706615571672727552000000e56 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.903467054334995439862458819820444077181982050418688000000e57 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.15319658747419487893319953901303182178303173898403840000000e59 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.224369168738247916437581824846169522319731901053706240000000e60 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.2827051526101923747113530993061735981228621953276698624000000e61 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.30499536656599600425590209367454497797485709919004383232000000e62 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.280143892253211144649865626782545016806535409626410631168000000e63 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.2176117734466907998619491922328697898407908985490868295680000000e64 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.14182284545318814197899447355866341475830855112337038202880000000e65 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.76820707953810243571955339844276016327417131858492290265600000000e65 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.341976054762123019771930222532583556554308522466836646988800000000e66 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.1234319822657037774489310646953543774438207323278738522725200000000e67 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.3553344944012684502317712468502626017322111991256974535118000000000e67 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.7995026124028540130214853054130908538974751980328192704015500000000e67 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.13705759069763211651796890949938700352528146251991187492598000000000e68 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.17322556602061836948798848283950301834445295957377750858700250000000e68 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.15449847780217314035415189010009728663153912610634210225327250000000e68 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.9147936185654988573601098755926813024235869308928150791312187500000e67 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.3283874528183842052061932886742958521520568469871643873804375000000e67 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.615726474034470384761612416264304722785106588100933226338320312500e66 * a * a * pow(x, 0.4e1) - 0.45053156636668564738654567043729613862324872300068284854023437500e65 * a * x * x + 0.536347102817482913555411512425352545980058003572241486357421875e63) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.393146584047861516076251738400219618347466307161741372982537748480000000000e75;
return retval;
}

double HO_85( const double a, const double x )
{
double retval = sqrt(0.79281884071117079261679e23) * pow(a, 0.3e1 / 0.4e1) * x * (0.4398046511104e13 * pow(a, 0.42e2) * pow(x, 0.84e2) - 0.7850513022320640e16 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.6678823953739284480e19 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.3606564935019213619200e22 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.1388978320599274645094400e25 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.406415056607347761154621440e27 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.93983481840449169767006208000e29 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.17642042162621458439120879616000e32 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.2740029673382145263825961615360000e34 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.357117200764139599385316997201920000e36 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.39479306544475632712046794040672256000e38 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.3732588982386787092775333254754467840000e40 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.303739428441724799674592743605644820480000e42 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.21378582848013707054019412338397308518400000e44 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.1306384116176837598908114803964206959820800000e46 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.69499634980607760261911707570895810262466560000e47 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.3225217435818828874654340179461883694992588800000e49 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.130716165487010182037461199038190462697052569600000e51 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.4629530860998277280493417465935912220520611840000000e52 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.143271797171946686364743656314227178192953671680000000e54 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.3871920318571859199007197311891989490664572977152000000e55 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.91266693223479538262312508066025466565664934461440000000e56 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.1873041454109136887519731699627749916108987177697280000000e58 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.33388999834119396690569130297712063721942814906777600000000e59 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.515442684939218186410660948970929983707492205123379200000000e60 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.6865696563390386242990003840292787382983796172243410944000000e61 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.78559412600332304126520236249504009478372283124708259840000000e62 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.768136478758804751459308976661816981566306768330480762880000000e63 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.6378276118265075168367476324066873150505940129887027763200000000e64 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.44647932827855526178572334268468112053541580909209194342400000000e65 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.261190407042954828144648155470538455513218248318873786903040000000e66 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.1263824550207845942635394300663895752483314104768744130176000000000e67 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.4996056425040390991980543094811962896535601070413941639602000000000e67 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.15896543170583062247210818938038063761704185224044359762370000000000e68 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.39975130620142700651074265270654542694873759901640963520077500000000e68 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.77665968061991532693515715382985968664326162094616729124722000000000e68 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.113262870090404318511377084933521204302142319721316063306886250000000e69 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.119385187392588335728208278713711539669825688354900715377528750000000e69 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.86397175086741558750677043805975456340005432362099201917948437500000e68 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.39875619270803796346466327910450210618464045705584247039053125000000e68 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.10467350058585996540947411076493180287346811997715864847751445312500e68 * a * a * pow(x, 0.4e1) - 0.1276506104705609334261879399572339059432538048501934737530664062500e67 * a * x * x + 0.45589503739486047652209978556154966408304930303640526340380859375e65) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.3341745964406822886648139776401866755953463610874801670351570862080000000000e76;
return retval;
}

double HO_86( const double a, const double x )
{
double retval = sqrt(0.1843764745839932075853e22) * pow(a, 0.1e1 / 0.4e1) * (0.8796093022208e13 * pow(a, 0.43e2) * pow(x, 0.86e2) - 0.16074859998085120e17 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.14009240488331182080e20 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.7754114610291309281280e22 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.3062875271065067166105600e25 * pow(a, 0.39e2) * pow(x, 0.78e2) - 0.919781443900839669981511680e27 * pow(a, 0.38e2) * pow(x, 0.76e2) + 0.218448092926449421620609024000e30 * pow(a, 0.37e2) * pow(x, 0.74e2) - 0.42144878499595706271233212416000e32 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.6732644340310414076829505683456000e34 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.903296448991647221974625345863680000e36 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.102885465540148618582909826893873152000e39 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.10031332890164490311833708122152632320000e41 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.842631962773817186194031482260821114880000e42 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.61285270830972626888188982036738951086080000e44 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.3874104620386483914003374935893855122227200000e46 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.213463164583295263661585958967751417234718720000e48 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.10272914795571084563713824275323036954420838400000e50 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.432368855072418294431602427587860761228712345600000e51 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.15925586161834073844897356082819538038590904729600000e53 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.513390606532808959473664768459314055191417323520000000e54 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.14477615104225212657157346470552656356397968523264000000e56 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.356769800782692740479948895167190460211235652894720000000e57 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.7670550716827893920318901246094594894541566537236480000000e58 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.143572699286713405769447260280161874004354104099143680000000e60 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.2333056363409092843753517979552630452570754191611084800000000e61 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.32802772469531845383174462792509984163144803934051852288000000e62 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.397418204919328126757690606909255577361177432277935902720000000e63 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.4128733573328575539093785749557266275918898879776334100480000000e64 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.36568783078053097631973530924650072729567390078018959175680000000e65 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.274265873085398232239801481934875545471755425585142193817600000000e66 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.1727875000438008863110749336189715936472059181186395821050880000000e67 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.9057409276489562588886992488091252892797084417509332932928000000000e67 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.39060077504861238664575155104893528100187426550508998273252000000000e68 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.136710271267014335326013042867127348350655992926781493956382000000000e69 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.381984581481363583999154090364032296862127039060124762525185000000000e69 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.834909156666408976455293940367099163141506242517129838090761500000000e69 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.1391515261110681627425489900611831938569177070861883063484602500000000e70 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.1711187685960432812104318661563198735267501533086910253744578750000000e70 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.1486031411491954810511645153462777849048093436628106272988713125000000e70 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.857325814322281621449026050074679528296976982670061311339642187500000e69 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.300064035012798567507159117526137834903941943934521458968874765625000e69 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.54889762502341201373260814181610579555599136085583193713818554687500e68 * a * a * pow(x, 0.4e1) + 0.3920697321595800098090058155829327111114224006113085265272753906250e67 * a * x * x - 0.45589503739486047652209978556154966408304930303640526340380859375e65) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.6683491928813645773296279552803733511906927221749603340703141724160000000000e76;
return retval;
}

double HO_87( const double a, const double x )
{
double retval = sqrt(0.35646118419572020133158e23) * pow(a, 0.3e1 / 0.4e1) * x * (0.8796093022208e13 * pow(a, 0.43e2) * pow(x, 0.86e2) - 0.16453091998040064e17 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.14684384608250757120e20 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.8328493470312887746560e22 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.3373039855476719537356800e25 * pow(a, 0.39e2) * pow(x, 0.78e2) - 0.1039233579472377289459630080e28 * pow(a, 0.38e2) * pow(x, 0.76e2) + 0.253399787794681329079906467840e30 * pow(a, 0.37e2) * pow(x, 0.74e2) - 0.50227457937874334871195746304000e32 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.8249859966295859502593901330432000e34 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.1138939000902511714663658044784640000e37 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.133597544805864624130047088653238272000e39 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.13426553252989394725069732409650446336000e41 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.1163634615259080876172710142169705349120000e43 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.87406861676960959660203957986824405647360000e44 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.5712662745315662720649044396996023654809600000e46 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.325812198574503297167683832108673215779307520000e48 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.16249883403903351946238231126420076636992962560000e50 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.709737554552837577651875683021582758998074982400000e51 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.27167176393716949500119019200103917830537425715200000e53 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.911530260578660805596098670529802506156189941760000000e54 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.26798989661012627684525300913576193680991984287744000000e56 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.689754948179872631594567863989901556408388928929792000000e57 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.15519486334047134210877776939772785019188750900920320000000e59 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.304654264340099178096144186448148366789727001381109760000000e60 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.5204510349143360959142463185155867932657836273593958400000000e61 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.77130843374304609414491304404009962761989133574662463488000000e62 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.987868109370901343654830937174435292297783903090869243904000000e63 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.10884843056957153693974526067014611091058915228501244446720000000e65 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.102628520251310306257474102917566333144269772154440304783360000000e66 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.822797619256194696719404445804626636415266276755426581452800000000e66 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.5567597223633584114467970083277973573076635139378386534497280000000e67 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.31519784282183677809326733858557560066933853772932478606589440000000e68 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.147748988822735989731219064961988562813752439560620993468388000000000e69 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.566371123820487960636339749020956157452717684982380474962154000000000e69 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.1749087294151506937259284519035305780368686968327939702089005000000000e70 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.4272770389998681232447680753643389834900649594058252700817426500000000e70 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.8070788514441953439067841423548625243701227010998921768210694500000000e70 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.11451794513735204204082747965846022305251741029120091698136796250000000e71 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.11753157527254551683137557122841970260653102635149567795456185625000000e71 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.8287482871782055674007251817388568773537444165810592676283207812500000e70 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.3729367292301925053303263317824855948091849874614766704327443515625000e70 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.955081867540736903894738166760024084267424967889147570620442851562500e69 * a * a * pow(x, 0.4e1) + 0.113700222326278202844611686519050486222312496177279472692909863281250e69 * a * x * x - 0.3966286825335286145742268134385482077522528936416725791613134765625e67) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.193821265935595727425592107031308271845300889430738496880391110000640000000000e78;
return retval;
}

double HO_88( const double a, const double x )
{
double retval = sqrt(0.3240556219961092739378e22) * pow(a, 0.1e1 / 0.4e1) * (0.17592186044416e14 * pow(a, 0.44e2) * pow(x, 0.88e2) - 0.33671444089012224e17 * pow(a, 0.43e2) * pow(x, 0.86e2) + 0.30767282036334919680e20 * pow(a, 0.42e2) * pow(x, 0.84e2) - 0.17875790863110588334080e23 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.7420687682048782982184960e25 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.2344937307527415422370447360e28 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.586820561208735709448204451840e30 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.119459899960349769423384477696000e33 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.20166324362056545450785092141056000e35 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.2863618059412029454011483084029952000e37 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.345781880674002556571886582396616704000e39 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.35804142007971719266852619759067856896000e41 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.3199995191962472409474952890966689710080000e43 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.248122704115244014519288654930340248289280000e45 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.16757144052925943980570530231188336054108160000e47 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.988671499122630694853661283640111827192381440000e48 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.51071062126553391831034440683034526573406453760000e50 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.2313218696320359512346854077996269733030762905600000e52 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.91950443178734290615787449600351721887972825497600000e53 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.3208586517236886035698267320264904821669788594995200000e55 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.98262962090379634843259436683112710163637275721728000000e56 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.2639062410427338764361824870917884215823401119383552000000e58 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.62077945336188536843511107759091140076755003603681280000000e59 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.1276646441044225127260032781306526489404570291501793280000000e61 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.22899845536230788220226838014685818903694479603813416960000000e62 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.357237590365200296235538673029098774897633881819489304576000000e63 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.4829577423591073235645840137297239206789165748444249636864000000e64 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.56345069941895854415868134935134457412540267065182912430080000000e65 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.564456861382206684416107566046614832293483746849421676308480000000e66 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.4827079366303008887420506082053809600302895490298502611189760000000e67 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.34996325405696814433798669094890119602195992304664143931125760000000e68 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.213364693602474126709288659965620406606936856309081393644605440000000e69 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.1083492584700063924695606476387916127300851223444553952101512000000000e70 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.4530968990563903685090717992167649259621741479859043799697232000000000e70 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.15391968188533261047881703767510690867244445321285869378383244000000000e71 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.41778199368875994272821767368957589496806351586347359741325948000000000e71 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.88778673658861487829746255659034877680713497120988139450317639500000000e71 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.143965416744099709994183117284921423266021887223224009919434010000000000e72 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.172379643733066758019350837801682230489578838648860327666690722500000000e72 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.145859698543364179862527631986038810414259017318266431102584457500000000e72 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.82046080430642351172671792992146830858020697241524867495203757343750000e71 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.28015734781194949180912319558294039805177799058081662071532990312500000e71 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.5002809782356240925162914206838221393781749831800296798488033984375000e70 * a * a * pow(x, 0.4e1) - 0.349033240629505180825319595825922422821982546404671869661955859375000e69 * a * x * x + 0.3966286825335286145742268134385482077522528936416725791613134765625e67) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.775285063742382909702368428125233087381203557722953987521564440002560000000000e78;
return retval;
}

double HO_89( const double a, const double x )
{
double retval = sqrt(0.144204751788268626902321e24) * pow(a, 0.3e1 / 0.4e1) * x * (0.17592186044416e14 * pow(a, 0.44e2) * pow(x, 0.88e2) - 0.34445500274966528e17 * pow(a, 0.43e2) * pow(x, 0.86e2) + 0.32215154132162445312e20 * pow(a, 0.42e2) * pow(x, 0.84e2) - 0.19168016708636654960640e23 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.8153595107436317103882240e25 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.2641764814809366741657845760e28 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.678273116202304910920651898880e30 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.141759081286281726382416246865920e33 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.24586340660589486919450317815808000e35 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.3589605736446065090239746401107968000e37 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.446008512753423587462288490337665024000e39 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.47560725950887806190296763560552824832000e41 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.4381531878225539145281089343015928987648000e43 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.350522550258043131622487147441274319011840000e45 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.24448947880498508430668478534028883751075840000e47 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.1491385820710409014270777190575761908815626240000e49 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.79742535601109681981790617908597769561985515520000e50 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.3743208435863854483615818417121236477086143610880000e52 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.154407347979383997449152509706251004679803423948800000e54 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.5599298039883977591708741009874049590757082057932800000e55 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.178477625021301785735716119689735330705381990596608000000e57 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.4997373500596450000600051351312589259750695736705024000000e58 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.122776380776017328423833079790202477040693229349502976000000e60 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.2642361238440372937817277152006531571093180370782781440000000e61 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.49709420798159515892687526422122875181190455725351075840000000e62 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.815234501089816060640075433322815152971523473895757643776000000e63 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.11617091640529878864121074924850115929844209503014546423808000000e65 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.143277463566535172657493257406484763134745250537179405893632000000e66 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.1522323050394436209485865859943900608306668286957531187619840000000e67 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.13858389148418315838078227138799646916998635439889249432125440000000e68 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.107402515900241947745106260325697263606739424659141683098972160000000e69 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.703313249282229528782470027294082081037680748574379408680366080000000e69 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.3857233601532227571916359055940981413191030355462612069481382720000000e70 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.17532880006964670781437995708822642787231956161193691224915376000000000e71 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.65232627084736201583879601681354832723083601599735351175052796000000000e71 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.195697881254208604751638805044064498169250804799206053525158388000000000e72 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.464782467978745436285142161979653183151970661398114377122251171500000000e72 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.854194806014991612632153162557200444711729864191129125521975126000000000e72 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.1180137560941764727978632658796132193351732049211428397102728792500000000e73 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.1180137560941764727978632658796132193351732049211428397102728792500000000e73 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.811344573147463250485309952922340882929315783832857023008126044843750000e72 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.356200056503764353871599491526881363237260588024181132052348019687500000e72 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.89050014125941088467899872881720340809315147006045283013087004921875000e71 * a * a * pow(x, 0.4e1) - 0.10354652805341987031151148009502365210385482210005265466638023828125000e71 * a * x * x + 0.352999527454840466971061863960307904899505075341088595453568994140625e69) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.34500185336536039481755395051572872388463558318671452444709617580113920000000000e80;
return retval;
}

double HO_90( const double a, const double x )
{
double retval = sqrt(0.721023758941343134511605e24) * pow(a, 0.1e1 / 0.4e1) * (0.35184372088832e14 * pow(a, 0.45e2) * pow(x, 0.90e2) - 0.70456705107886080e17 * pow(a, 0.44e2) * pow(x, 0.88e2) + 0.67427066788246978560e20 * pow(a, 0.43e2) * pow(x, 0.86e2) - 0.41074321518507117772800e23 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.17898135601689476569497600e26 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.5943970833321075168730152960e28 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.1565245652774549794432273612800e31 * pow(a, 0.39e2) * pow(x, 0.78e2) - 0.335745192520140930905722689945600e33 * pow(a, 0.38e2) * pow(x, 0.76e2) + 0.59804612417650103317581854146560000e35 * pow(a, 0.37e2) * pow(x, 0.74e2) - 0.8974014341115162725599366002769920000e37 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.1146879032794517796331598975153995776000e40 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.125896039281761839915491432954404536320000e42 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.11949632395160561305312061844588897239040000e44 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.985844672600746307688245102178584022220800000e45 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.70980816427253734153553647356858049599897600000e47 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.4474157462131227042812331571727285726446878720000e49 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.247476834624133495805557090061165491744092979200000e51 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.12031741400990960840193702055032545819205461606400000e53 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.514691159931279991497175032354170015599344746496000000e54 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.19382185522675307048222565034179402429543745585152000000e56 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.642519450076686428648578030883047190539375166147788800000e57 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.18740150627236687502250192567422209724065109012643840000000e59 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.480429316080067806875868573092096649289669158324142080000000e60 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.10809659611801525654707042894572174609017556062293196800000000e62 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.213040374849255068111517970380526607919387667394361753600000000e63 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.3668555254904172272880339449952668188371855632530909396992000000e64 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.55028328823562584093205091749290022825577834487963640954880000000e65 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.716387317832675863287466287032423815673726252685897029468160000000e66 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.8059357325617603461983995729114767926329420342716341581516800000000e67 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.77953438959853026589190027655748013908117324349377028055705600000000e68 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.644415095401451686470637561954183581640436547954850098593832960000000e69 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.4521299459671475542173021604033384806670804812263867627230924800000000e70 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.26703924933684652420959408848822179014399440922433468173332649600000000e71 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.131496600052235030860784967816169820904239671208952684186865320000000000e72 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.533721494329659831140833104665630449552502194906925600523159240000000000e72 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.1761280931287877442764749245396580483523257243192854481726425492000000000e73 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.4647824679787454362851421619796531831519706613981143771222511715000000000e73 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.9609691567668655642111723078768505003006960972150202662122220167500000000e73 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.15173197212108403645439562755950271057379412061289793677035084475000000000e74 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.17702063414126470919679489881941982900275980738171425956540931887500000000e74 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.14604202316654338508735579152602135892727684108991426414146268807187500000e74 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.8014501271334697962110988559354830672838363230544075471177830442968750000e73 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.2671500423778232654036996186451610224279454410181358490392610147656250000e73 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.465959376240389416401801660427606434467346699450236945998711072265625000e72 * a * a * pow(x, 0.4e1) + 0.31769957470935642027395567756427711440955456780697973590821209472656250e71 * a * x * x - 0.352999527454840466971061863960307904899505075341088595453568994140625e69) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.1035005560096081184452661851547186171653906749560143573341288527403417600000000000e82;
return retval;
}

double HO_91( const double a, const double x )
{
double retval = sqrt(0.2678088247496417356757390e25) * pow(a, 0.3e1 / 0.4e1) * x * (0.35184372088832e14 * pow(a, 0.45e2) * pow(x, 0.90e2) - 0.72040001851883520e17 * pow(a, 0.44e2) * pow(x, 0.88e2) + 0.70527161812993966080e20 * pow(a, 0.43e2) * pow(x, 0.86e2) - 0.43973685390401737850880e23 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.19623257105466775515955200e26 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.6677794392990343708079554560e28 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.1803004486107392801181479731200e31 * pow(a, 0.39e2) * pow(x, 0.78e2) - 0.396789772978348372888581360844800e33 * pow(a, 0.38e2) * pow(x, 0.76e2) + 0.72562929733415458691999316364492800e35 * pow(a, 0.37e2) * pow(x, 0.74e2) - 0.11186785000568216548349894606192640000e38 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.1469943549074663654453176151253712896000e40 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.166036805429569962787097397084794388480000e42 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.16230097730740463862438770565038651473920000e44 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.1380182541641044830763543143050017631109120000e46 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.102527845950477615999577490626572738310963200000e48 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.6674562771376092801572494639789885264043704320000e49 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.381701558488070307089927037212984063537499340800000e51 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.19208569605090832218554857666806345079784158003200000e53 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.851579919159026895022598689895081298537097671475200000e54 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.33278846840819866818646290907741992850726053740544000000e56 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.1146456273666244411902364721771711653707512551361740800000e58 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.34803136879153848218464643339498389487549488166338560000000e59 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.930192931133748306929873194710229682667231774627594240000000e60 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.21859533881643085212852020075690397542679946703748464640000000e62 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.450852886308888632515072914061114449317773900764812083200000000e63 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.8142403126738528703222216827943726954678996647812506222592000000e64 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.128399433921646029550811880748343386593014947138581828894720000000e66 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.1761925565480364961058363030268934249359705107957206207610880000000e67 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.20954329046605769001158388895698396608456492891062488111943680000000e68 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.214962513495352285442917955050699068655717470175554834941491200000000e69 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.1891670118759100111897678004446151804170313737544882547485122560000000e70 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.14187525890693250839232585033346138531277353031586619106138419200000000e71 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.90002117369085310011381711305289566307790708294127614954565596800000000e71 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.478647624190135512333257282850858148091432403200587770440189764800000000e72 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.2111680694956480201470252718459668300403378249414357810765543080000000000e73 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.7632217368914135585313913396718515428600781387169036087481177132000000000e73 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.22260633992666228790498914073762336666752279045909688588486766635000000000e74 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.51440113685755744907774517656937291486684320497980496603124825602500000000e74 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.92050729753457648782333347386098311081435099838491414974012845815000000000e74 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.123914443898885296437756429173593880301931865167199981695786523212500000000e75 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.120816582801413164026812518444254033294383568538019982153391860132187500000e75 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.81035512854606390505788884322365510136476783775501207541909174478906250000e74 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.34729505509117024502480950423870932915632907332357660375103931919531250000e74 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.8480460647575087378512790219782437107305709929994312417176541515234375000e73 * a * a * pow(x, 0.4e1) + 0.963688709951714474830998888611640580375648855681171865588243354003906250e72 * a * x * x - 0.32122956998390482494366629620388019345854961856039062186274778466796875e71) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.13455072281249055397884604070113420231500787744281866453436750856244428800000000000e83;
return retval;
}

double HO_92( const double a, const double x )
{
double retval = sqrt(0.58219309728182986016465e23) * pow(a, 0.1e1 / 0.4e1) * (0.70368744177664e14 * pow(a, 0.46e2) * pow(x, 0.92e2) - 0.147281781563850752e18 * pow(a, 0.45e2) * pow(x, 0.90e2) + 0.147465883790805565440e21 * pow(a, 0.44e2) * pow(x, 0.88e2) - 0.94083233858533950750720e23 * pow(a, 0.43e2) * pow(x, 0.86e2) + 0.42984277469117698749235200e26 * pow(a, 0.42e2) * pow(x, 0.84e2) - 0.14984319125734429783983390720e29 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.4146910318047003442717403381760e31 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.936016900359180777070499620454400e33 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.175678671986163742096419397514035200e36 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.27815789731142592498599737939722240000e38 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.3756522403190807116935894608759488512000e40 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.436439602843441045040370300908602392576000e42 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.43916735036121255157187261528928115752960000e44 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.3847781631241700740310483913957624910970880000e46 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.294767557107623145998785285551396622644019200000e48 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.19808379837632275411118371189053853041678090240000e50 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.1170551446030082275075776247453151128181664645120000e52 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.60937531160977812555415410529178749908280777113600000e53 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.2798048305808231226502824266798124266621892349132800000e55 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.113394589235386212863535509759713457120992479412224000000e57 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.4056691429895941765192982861653748928503505950972313600000e58 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.128075543715286161443949887489354073314182116452125900800000e60 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.3565739569346035176564513913055880450224388469405777920000000e61 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.87438135526572340851408080302761590170719786814993858560000000e62 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.1885384797291716099608486731528296788056145403198305075200000000e64 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.35671480364759268604592568960515375230022271028511932022784000000e65 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.590637396039571735933734651442379578327868756837476412915712000000e66 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.8531429053904925074598389409723260575846993154319103742115840000000e67 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.107099904015985041561476209911347360443222074776541605905489920000000e69 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.1163326543621906485926379521450842018607412191538296753801011200000000e70 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.10877103182864825643411648525565372873979303990883074648039454720000000e71 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.87016825462918605147293188204522982991834431927064597184315637760000000e71 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.591442485568274894360508388577617150022624654504267183987145350400000000e72 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.3387352417345574394973820770944534586493213930342621144653650643200000000e73 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.16189551994666348211271937508190790303092566578843409882535830280000000000e74 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.63833090721827315804443639318009401766479262510868301822569845104000000000e74 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.204797832732529304872590009478613497334120967222369135014078253042000000000e75 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.525832273232169836835028402715358979641661942868245076387498217270000000000e75 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.1058583392164762960996833494940130577436503648142651272201147726872500000000e76 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.1628589834099635324610513069138662426825390227911771188001765733650000000000e76 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.1852520936288335181744458616145228510513881384249639726352008522026875000000e76 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.1491053436524757585306515471531525386511172821469222218771128810411875000000e76 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.798778626709691563557061859749031457059556868644226188627390434149218750000e75 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.260067459858969346274392233406661404624041771186492247460080606467187500000e75 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.44329680657778865842225948876135466697279847361333905817059194284179687500e74 * a * a * pow(x, 0.4e1) - 0.2955312043851924389481729925075697779818656490755593721137279618945312500e73 * a * x * x + 0.32122956998390482494366629620388019345854961856039062186274778466796875e71) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.26910144562498110795769208140226840463001575488563732906873501712488857600000000000e83;
return retval;
}

double HO_93( const double a, const double x )
{
double retval = sqrt(0.10828791609442035399062490e26) * pow(a, 0.3e1 / 0.4e1) * x * (0.70368744177664e14 * pow(a, 0.46e2) * pow(x, 0.92e2) - 0.150518743796023296e18 * pow(a, 0.45e2) * pow(x, 0.90e2) + 0.154093563961178849280e21 * pow(a, 0.44e2) * pow(x, 0.88e2) - 0.100571732745329395630080e24 * pow(a, 0.43e2) * pow(x, 0.86e2) + 0.47029856525034658631516160e26 * pow(a, 0.42e2) * pow(x, 0.84e2) - 0.16789658779437373131451269120e29 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.4761267402202115063860722401280e31 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.1101893313081060914779195755724800e34 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.212183331100171792402168882711756800e36 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.34491579266616814698263675045255577600e38 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.4785706623243083039384084912529211392000e40 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.571674409358310101250062506823943979008000e42 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.59192121135641691733600222060729199493120000e44 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.5340950622469823415654850805941180846571520000e46 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.421744350938599270429031254711998244706058240000e48 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.29240941665076216083079500326698544966286704640000e50 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.1784611220996682812820445754313820572473685442560000e52 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.96054074541880280807688697952773283753730716467200000e53 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.4565236709476587790609871172144308013962034885427200000e55 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.191739941798016687205614589230060936586405465187942400000e57 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.7118345339251369512508441625166012270770302895102361600000e58 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.233549520892580647338967441892351545455273271177406054400000e60 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.6767628162228189212663261100289732283078941380708925440000000e61 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.173015885190877185088956414216102720976105110080732528640000000e63 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.3896461914402879939190872578491813361982700499943163822080000000e64 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.77149945905177022795979277054137904567257469898874643677184000000e65 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.1339738483699516376630178599613202458158336448436226985394176000000e67 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.20344176974696359793273082438570852142404368291068632000430080000000e68 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.269197056040178617978845608696089311384314944708604577005690880000000e69 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.3091124815909637234032951299855094506585409537516045660099829760000000e70 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.30653654424437235904160100390229687190305311247034119462656645120000000e71 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.261050476388755815441879564613568948975503295781193791552946913280000000e72 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.1896694867512053971569906211645461894900141133410236141751879916800000000e73 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.11667547215301422916020938211031174686809959093402361720473685548800000000e74 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.60225133420158815345931607530469739927504347673297484763033288641600000000e74 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.258107714657823494339706889416298885403590061456989220412999808464000000000e75 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.906961830672629778721470041976716916765392854841920455062346549186000000000e75 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.2573810600557462885560928497501493952982871615091936426528280747690000000000e76 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.5791073851254291492512089119378361394211461133956856959688631682302500000000e76 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.10097256971417739012585181028659707046317419413052981365610947548630000000000e77 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.13252649774985782454018050100115865498291612979632038042364368657576875000000e77 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.12606179054254768675773267168402896449594461126967060576883179942573125000000e77 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.8254045809333479490089639217406658389615420975990337282483034486208593750000e76 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.3455181966697735600502639672402787232862269245763397001969642343064062500000e76 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.824532060234686904665402649096119680569405160920810648197301013685742187500e75 * a * a * pow(x, 0.4e1) - 0.91614673359409656073933627677346631174378351213423405355255668187304687500e74 * a * x * x + 0.2987435000850314871976096554696085799164511452611632783323554397412109375e73) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.2502643444312324304006536357041096163059146520436427160339235659261463756800000000000e85;
return retval;
}

double HO_94( const double a, const double x )
{
double retval = sqrt(0.230399821477490114873670e24) * pow(a, 0.1e1 / 0.4e1) * (0.140737488355328e15 * pow(a, 0.47e2) * pow(x, 0.94e2) - 0.307581780800569344e18 * pow(a, 0.46e2) * pow(x, 0.92e2) + 0.321884333607795818496e21 * pow(a, 0.45e2) * pow(x, 0.90e2) - 0.214857792683203708846080e24 * pow(a, 0.44e2) * pow(x, 0.88e2) + 0.102809453798912974682849280e27 * pow(a, 0.43e2) * pow(x, 0.86e2) - 0.37576855363502692246581411840e29 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.10916076483097532097631900139520e32 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.2589449285740493149731110025953280e34 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.511416233933747397071894230125772800e36 * pow(a, 0.39e2) * pow(x, 0.78e2) - 0.85321275027946857411494354059316428800e38 * pow(a, 0.38e2) * pow(x, 0.76e2) + 0.12158281691482427181137945453452591104000e41 * pow(a, 0.37e2) * pow(x, 0.74e2) - 0.1492705402213365264375163212262520389632000e43 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.158973125335723400655954882105958421495808000e45 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.14766157603298923560928116934072676458168320000e47 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.1201332393582676709706937513422055606132408320000e49 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.85895266141161384744046032209676975838467194880000e50 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.5411401766893167238874900029209649477823433277440000e52 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.300969433564558213197424586918689622428356244930560000e54 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.14797663816924112148873375523502239769394182042419200000e56 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.643698376036198878475991835272347429968646918845235200000e57 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.24782387477393656821325685657985376053792906375541555200000e59 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.844371344765483878840882289918501741261372595795237273600000e60 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.25446281889977991439613861737089393384376819591465559654400000e62 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.677645550330935641598412622346402323823078347816202403840000000e63 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.15924670432776987577562696625140454609842341173680756490240000000e65 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.329640677958483642855547820140407410423736462295191659347968000000e66 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.5996924641321644733487466112554334812708744102524063648907264000000e67 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.95617631781072891028383487461283005069300530968022570402021376000000e68 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.1331817014093515267895341432496441856322400252768885802028154880000000e70 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.16142540705305883333283190121465493534390472029250460669410222080000000e71 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.169496677405711774999473496275387682111099956307129837028807331840000000e72 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.1533671548783940415721042442104717575231081862714513525373563115520000000e73 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.11885954503075538221838078926311561208040884436037479821645114145280000000e74 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.78339245588452411007569156559780744325724011055701571551751888684800000000e74 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.435474041653456049424428546758781196398877590868458735978856087100800000000e75 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.2021843764819617372327703967094341268994788814746415559901831832968000000000e76 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.7750401098475199927256198540528308197813357123194592979623688693044000000000e76 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.24193819645240151124272727876514043158038993181864202409365839028286000000000e77 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.60484549113100377810681819691285107895097482954660506023414597570715000000000e77 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.118642769414158433397875877086751557794229678103372531045928633696402500000000e78 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.177964154121237650096813815630127336691344517155058796568892950544603750000000e78 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.197496805183324709253781185638312044376979890989150615704503152433645625000000e78 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.155176061215469414413685217287245177724769914348618340910681048340721562500000e78 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.81196776217396786611812032301465499972263327275439829546286595062005468750000e77 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.25835337887353523012849283005011749991174695042185400310182098428819921875000e77 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.4305889647892253835474880500835291665195782507030900051697016404803320312500e76 * a * a * pow(x, 0.4e1) + 0.280818890079929597965753076141432065121464076545493481632414113356738281250e75 * a * x * x - 0.2987435000850314871976096554696085799164511452611632783323554397412109375e73) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.5005286888624648608013072714082192326118293040872854320678471318522927513600000000000e85;
return retval;
}

double HO_95( const double a, const double x )
{
double retval = sqrt(0.437759660807231218259973e24) * pow(a, 0.3e1 / 0.4e1) * x * (0.140737488355328e15 * pow(a, 0.47e2) * pow(x, 0.94e2) - 0.314196442753269760e18 * pow(a, 0.46e2) * pow(x, 0.92e2) + 0.336033095524622008320e21 * pow(a, 0.45e2) * pow(x, 0.90e2) - 0.229342587695554520678400e24 * pow(a, 0.44e2) * pow(x, 0.88e2) + 0.112263196676973937872076800e27 * pow(a, 0.43e2) * pow(x, 0.86e2) - 0.41997661876855950157943930880e29 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.12494304408364645171988319436800e32 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.3037008421547491965734017931673600e34 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.614994205363367123061138631163904000e36 * pow(a, 0.39e2) * pow(x, 0.78e2) - 0.105266508151363005897298229034221568000e39 * pow(a, 0.38e2) * pow(x, 0.76e2) + 0.15400490142544407762774730907706615398400e41 * pow(a, 0.37e2) * pow(x, 0.74e2) - 0.1942561824798215070077267194040266260480000e43 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.212710519815404550173460757747409155522560000e45 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.20330216990049242583886537807781221210521600000e47 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.1703381752094840110778493489180526605710131200000e49 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.125539235129389716164374970152604810840836669440000e51 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.8160050283410331550684373059919312704654383513600000e52 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.468722888338246397602546487824188756240882676531200000e54 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.23826746823860858544796113131062928442244869390336000000e56 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.1072830626726998130793319725453912383281078198075392000000e58 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.42805942006407225418653457045611104092915020103208140800000e59 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.1513495806655112613016675802684106894713781067934859264000000e61 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.47399936853880572289476801274970438657172507082141728768000000e62 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.1313802597580385427588759165773637158432498837602841395200000000e64 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.32188163640719442975924599561454110381596221521269614182400000000e65 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.695908097912354357139489842518637866450110309289849058623488000000e66 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.13249019556408284876309518155643297842030946273018280154562560000000e68 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.221553049248827430431620275824924036136184157121027907029073920000000e69 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.3244169649714973088463011181722101957708410872129337210068582400000000e70 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.41447063973082673423294677338897888804516076831859290907945164800000000e71 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.460062410101217674998570918461766565730128452833638129078191329280000000e72 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.4415115064681040590712091878786308171119781119935720754863287756800000000e73 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.36424699283618584873374757999987042411738194239469696227622123993600000000e74 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.256628563134585484335140340454454162446337277596263768876428600864000000000e75 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.1532223479891789803530396738595711616959013745648280737703382528688000000000e76 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.7683006306314546014845275074958496822180197496036379127626960965278400000000e76 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.32012526276310608395188646145660403425750822900151579698445670688660000000000e77 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.109448231728467350324090911822325433333985921537004725185226414651770000000000e78 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.302422745565501889053409098456425539475487414773302530117072987853575000000000e78 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.663003711432061833694012254308317528850107024695317085256660011832837500000000e78 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.1127106309434505117279820832324139799045181941982039044936322020115823750000000e79 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.1443245884031988259931477895049203401216391511074562191686753806245871875000000e79 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.1340156892315417669936372331117117443986649260283522035137699962942595312500000e79 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.857077082294743858680238118737691388596112899018531534099691836765613281250000e78 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.350622442756940669460097412210873749880228004143944718495328478676841796875000e78 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.81811903309952822874022729515870541638719867633587100982243311691263085937500e77 * a * a * pow(x, 0.4e1) + 0.8892598185864437268915514077812015395513029090607293585026446922963378906250e76 * a * x * x - 0.283806325080779912837729172696128150920628587998105114415737667754150390625e75) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.47550225441934161776124190783780827098123783888292116046445477525967811379200000000000e86;
return retval;
}

double HO_96( const double a, const double x )
{
double retval = sqrt(0.145919886935743739419991e24) * pow(a, 0.1e1 / 0.4e1) * (0.281474976710656e15 * pow(a, 0.48e2) * pow(x, 0.96e2) - 0.641762946900295680e18 * pow(a, 0.47e2) * pow(x, 0.94e2) + 0.701286460225298104320e21 * pow(a, 0.46e2) * pow(x, 0.92e2) - 0.489264187083849644113920e24 * pow(a, 0.45e2) * pow(x, 0.90e2) + 0.244937883658852228084531200e27 * pow(a, 0.44e2) * pow(x, 0.88e2) - 0.93762221864608632910758543360e29 * pow(a, 0.43e2) * pow(x, 0.86e2) + 0.28558410076262046107401872998400e32 * pow(a, 0.42e2) * pow(x, 0.84e2) - 0.7111044108989249480743066376601600e34 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.1475986092872081095346732714793369600e37 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.259117558526432014516426409930391552000e39 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.38906501412743766979641425451048291532800e41 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.5040160410287260722362639206158528675840000e43 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.567228052841078800462562020659757748060160000e45 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.55762880886992208230088789415628492463144960000e47 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.4809548476503077959845158087097957474946252800000e49 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.365205047649133719750909004080304904264252129280000e51 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.24480150850230994652053119179757938113963150540800000e53 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.1451528944531343682898208478423294212874991514419200000e55 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.76245589836354747343347562019401371015183582049075200000e56 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.3551439316061786915729610125640537544654603690180608000000e58 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.146763229736253344292526138442095214032851497496713625600000e60 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.5381318423662622624059291742876824514537888241546166272000000e61 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.175015151460482113068837420092198542734175410764830998528000000e63 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.5045001974708680041940835196570766688380795536394910957568000000e64 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.128752654562877771903698398245816441526384886085078456729600000000e66 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.2904659886938522534147435864425618920835243030079369983819776000000e67 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.57813903518872515823896079224625299674316856464079767947182080000000e68 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.1012813939423211110544549832342509879479699003981841860704337920000000e70 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.15572014318631870824622453672266089397000372186220818608329195520000000e71 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.209416744285049297296646790764957753959660177676762733008565043200000000e72 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.2453666187206494266659044898462755017227351748446070021750353756160000000e73 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.24932414482904699806374165903734446142794058089048776027463272038400000000e74 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.218548195701711509240248547999922254470429165436818177365732743961600000000e75 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.1642422804061347099744898178908506639656558576616088120809143045529600000000e76 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.10506675290686558652779863350370593944861808541588210772823194482432000000000e77 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.56736046569707416725011262092001207302253766124576338173245250205132800000000e77 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.256100210210484867161509169165283227406006583201212637587565365509280000000000e78 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.955184567812078693737520684994840145460240769777495783434703255142720000000000e78 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.2903258357428818134912727345181685178964679181823704289123900683394320000000000e79 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.7072039588608659559402797379288720307734474930083382242737706792883600000000000e79 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.13525275713214061407357849987889677588542183303784468539235864241389885000000000e80 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.19793086409581553279060268274960503788110512151879710057418337914229100000000000e80 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.21442510277046682718981957297873879103786388164536352562203199407081525000000000e80 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.16455879980059082086660571879763674661045367661155805454714083265899775000000000e80 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.8414938626166576067042337893060969997125472099454673243887883488244203125000000e79 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.2617980905918490331968727344507857332439035764274787231431785974120418750000000e79 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.426844712921492988907944675734976738984625396349150092081269452302242187500000e78 * a * a * pow(x, 0.4e1) - 0.27245407207754871632422000578828302488380344447818090983910816104398437500000e77 * a * x * x + 0.283806325080779912837729172696128150920628587998105114415737667754150390625e75) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.380401803535473294208993526270246616784990271106336928371563820207742491033600000000000e87;
return retval;
}

double HO_97( const double a, const double x )
{
double retval = sqrt(0.28308458065534285447478254e26) * pow(a, 0.3e1 / 0.4e1) * x * (0.281474976710656e15 * pow(a, 0.48e2) * pow(x, 0.96e2) - 0.655273745782407168e18 * pow(a, 0.47e2) * pow(x, 0.94e2) + 0.731449318729612001280e21 * pow(a, 0.46e2) * pow(x, 0.92e2) - 0.521523364254213356912640e24 * pow(a, 0.45e2) * pow(x, 0.90e2) + 0.266954772077625462069657600e27 * pow(a, 0.44e2) * pow(x, 0.88e2) - 0.104539488745598130946477916160e30 * pow(a, 0.43e2) * pow(x, 0.86e2) + 0.32590185616440217322564490362880e32 * pow(a, 0.42e2) * pow(x, 0.84e2) - 0.8310497332192255417253945042534400e34 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.1767538901340640324057198436234035200e37 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.318157002241315258330295718522126336000e39 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.49012086195274615545782055438333562060800e41 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.6518607463971523867589013373298363754086400e43 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.753713988021707447189979671287623309066240000e45 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.76183090789271045046741022159379771393310720000e47 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.6761249307547805247898265716644954711156326400000e49 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.528729695850238370385644379041635458412424724480000e51 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.36531917422652407403833116314407999954683470807040000e53 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.2234893771738735511763908292175548232521812331724800000e55 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.121242987116826401513192024850523491614308318996070400000e57 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.5838807011152429336030036986222578675110111151652864000000e58 * pow(a, 0.29e2) * pow(x, 0.58e2) + 0.249754969902045164848684832085670802827835004511951257600000e60 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.9490688856277716264250023619255490507457730171454147788800000e61 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.320310748899372923918438297149872804626698393286577487872000000e63 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.9595395912681214981730608118967928799469356216280516919296000000e64 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.254877703930594772952219278160085608735904774494951230668800000000e66 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.5994723596447589059836197422325213517468480296121252945330176000000e67 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.124621080918458534109287104106414534853527446155905277575036928000000e69 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.2284719816838406458670263575284266472314669846191596755542343680000000e70 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.36841107046519304146058000151458796866074051269839497683120291840000000e71 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.520857030657686713789095864210279541899667621401179105175148953600000000e72 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.6432584328622430915295333922996952342460895124304561948913089576960000000e73 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.69098405852621596606236974076064036452886389561078036418969639649280000000e74 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.642399241911091405948609368363407838897928152950647369832608368614400000000e75 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.5139193935288731247588874946907262711183425223605178958660866948915200000000e76 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.35143017351606765148953336033998193539710187190829532584960340165376000000000e77 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.203829500639319237863929348997189522530319085706811288992769972959180800000000e78 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.993668815616681284586655576361298922335305542820705033839753618176006400000000e78 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.4028387090337897099675630714978238874332319768192047434485487641254080000000000e79 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.13410288603361683766025454880124926779027327649376157906905636489964240000000000e80 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.36104623162896840908530070831105572097381266748320425133976713626826800000000000e80 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.77173632010691997441983026401488160358152457674534908723875225377342285000000000e80 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.127995292115294044537923068178077924496447978582155458371305251845348180000000000e81 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.159994115144117555672403835222597405620559973227694322964131564806685225000000000e81 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.145110941642339178400552315667006949283763696648373920827933279708388925000000000e81 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.90694338526461986500345197291879343302352310405233700517458299817743078125000000e80 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.36277735410584794600138078916751737320940924162093480206983319927097231250000000e80 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.8280787430676963984814126709258548736301732689173511786376627374663498437500000e79 * a * a * pow(x, 0.4e1) - 0.880934833050740849448311352048781780457631137146118275146449720708882812500000e78 * a * x * x + 0.27529213532835651545259729751524430639300973035816196098326553772152587890625e77) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.36898974942940909538272372048213921828144056297314682052041690560151021630259200000000000e89;
return retval;
}

double HO_98( const double a, const double x )
{
double retval = sqrt(0.28308458065534285447478254e26) * pow(a, 0.1e1 / 0.4e1) * (0.562949953421312e15 * pow(a, 0.49e2) * pow(x, 0.98e2) - 0.1337850564305747968e19 * pow(a, 0.48e2) * pow(x, 0.96e2) + 0.1525149643308552683520e22 * pow(a, 0.47e2) * pow(x, 0.94e2) - 0.1111071515150280629944320e25 * pow(a, 0.46e2) * pow(x, 0.92e2) + 0.581368170302384339618365440e27 * pow(a, 0.45e2) * pow(x, 0.90e2) - 0.232837952206104928017155358720e30 * pow(a, 0.44e2) * pow(x, 0.88e2) + 0.74275306753747472037472559431680e32 * pow(a, 0.43e2) * pow(x, 0.86e2) - 0.19391160441781929306925871765913600e35 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.4224849081253237847746474310998425600e37 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.779484655491222382909224510379209523200e39 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.123158575567613136499657472639915104665600e42 * pow(a, 0.39e2) * pow(x, 0.78e2) - 0.16811145564979193132203245015348411786854400e44 * pow(a, 0.38e2) * pow(x, 0.76e2) + 0.1996323535841279184449135345572623899688960000e46 * pow(a, 0.37e2) * pow(x, 0.74e2) - 0.207387302704126733738350560322756044348456960000e48 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.18931498061133854694115144006605873191237713920000e50 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.1523985593921275302876269092531772791894635970560000e52 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.108488724467270785623504406024605575622999398154240000e54 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.6844362175949877504776969144787616462098050265907200000e55 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.383284281853193140267510272108106521877490814890803200000e57 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.19073436236431269164364787488327090338693029762066022400000e59 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.843999553462083660523141846358473747487166566971421491200000e60 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.33217410996972006924875082667394216776102055600089517260800000e62 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.1162609384894020242370627893358797587163571946003133104128000000e64 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.36167261517029194931138445986879116244153727276749640695808000000e65 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.999120599407931509972699570387535586244746716020208824221696000000e66 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.24478454685494321994331139474494621862996294542495116193431552000000e68 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.530994170869953754030875487062114105028073466229509443580592128000000e69 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.10177388275007446952258446835357187013038074769398931001961349120000000e71 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.171925166217090086014937334040141052041678905925917655854561361920000000e72 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.2552199450222664897566569734630369755308371344865777615358229872640000000e73 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.33178592852894643668365406550194806819008827483255108999656988344320000000e74 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.376202431864273137078401303303015309576825898721424864947723593646080000000e75 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.3703242688663938693115512829389056953646879940539026014329154124953600000000e76 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.31477562853643478891481859049806984105998479494581721121797810062105600000000e77 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.229601046697164198973161795422121531126106556313419612888407555747123200000000e78 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.1426806504475234665047505442980326657712233599947679022949389810714265600000000e79 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.7490734148494981991499403575646714952989226399725314870484296506249894400000000e79 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.32898494571092826314017650838988950807047278106901720714964815736908320000000000e80 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.119473480284495000824590416204749347667698009967169406806977488728772320000000000e81 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.353825306996389040903594694144834606554336414133540166312971793542902640000000000e81 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.840335104116423972146037398593982190566548983567157894993308009664393770000000000e81 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.1567942328412352045589557585181454575081487737631404365048489335105515205000000000e82 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.2239917612017645779413653693116363678687839625187720521497841907293593150000000000e82 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.2370145380158206580542354489227780171634807045256774040189576901903685775000000000e82 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.1777609035118654935406765866920835128726105283942580530142182676427764331250000000e82 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.888804517559327467703382933460417564363052641971290265071091338213882165625000000e81 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.270505722735447490170594805835779258719189934513001385021636494239007615625000000e81 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.43165806819486301622967256250390307242423925720159795482176036314735257812500000e80 * a * a * pow(x, 0.4e1) + 0.2697862926217893851435453515649394202651495357509987217636002269670953613281250e79 * a * x * x - 0.27529213532835651545259729751524430639300973035816196098326553772152587890625e77) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.516585649201172733535813208674994905594016788162405548728583667842114302823628800000000000e90;
return retval;
}

double HO_99( const double a, const double x )
{
double retval = sqrt(0.155696519360438569961130397e27) * pow(a, 0.3e1 / 0.4e1) * x * (0.562949953421312e15 * pow(a, 0.49e2) * pow(x, 0.98e2) - 0.1365435112023392256e19 * pow(a, 0.48e2) * pow(x, 0.96e2) + 0.1589366470395228585984e22 * pow(a, 0.47e2) * pow(x, 0.94e2) - 0.1182753548385782606069760e25 * pow(a, 0.46e2) * pow(x, 0.92e2) + 0.632477459999297248595804160e27 * pow(a, 0.45e2) * pow(x, 0.90e2) - 0.258999519869712223299981803520e30 * pow(a, 0.44e2) * pow(x, 0.88e2) + 0.84520176650816088870227395215360e32 * pow(a, 0.43e2) * pow(x, 0.86e2) - 0.22584998632193070604537191821475840e35 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.5039277819808078878637360925166796800e37 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.952703467822605134666829957130144972800e39 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.154337961787262031816026453055083485593600e42 * pow(a, 0.39e2) * pow(x, 0.78e2) - 0.21614330012116105455689886448305100868812800e44 * pow(a, 0.38e2) * pow(x, 0.76e2) + 0.2635147067310488523472858656155863547589427200e46 * pow(a, 0.37e2) * pow(x, 0.74e2) - 0.281251273530254063562968568108943128636948480000e48 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.26397440958482417108695764178225090787782164480000e50 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.2186588026060960217170299132762978353587955957760000e52 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.160304234660594145921297555170685850547417021153280000e54 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.10424490083369813430352614543599600457657030404997120000e56 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.602303871483589220420373284741310248664628423399833600000e57 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.30955248973880256512657605923678392516895245023680921600000e59 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.1416202640555021735454085471008286457647957459833402163200000e61 * pow(a, 0.29e2) * pow(x, 0.58e2) - 0.57693398047372433080046196211789955453229886042260740505600000e62 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.2092696892809236436267130208045835656894429502805639587430400000e64 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.67557714909167741475145399107566651097570169818834234507264000000e65 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.1939469398850690578182299166046392608592743625215699482312704000000e67 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.49456469670692609743648628734183011519114962443000336798973952000000e68 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.1118477083321817481894822834449985029739984535249392232222949376000000e70 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.22390254205016383294968583037785811428683764492677648204314968064000000e71 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.395827708267253918964623164417999166328516550852694137897711042560000000e72 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.6162627940781556703880253749473331848183628369310048388304018472960000000e73 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.84222581857347941619696801242802201925176254380570661306821585797120000000e74 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.1006595696069271366777344027756716639137993620903271935941206372188160000000e76 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.10474886462220855160526736288843332526029746117524673583388178810583040000000e77 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.94432688560930436674445577149420952317995438483745163365393430186316800000000e77 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.733242052355459861236871540219033276822082228226727150837172516740812800000000e78 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.4870822204932697649644932374312149624603831944648973216275503146921113600000000e79 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.27466025211148267302164479777371288160960496798992821191775753856249612800000000e80 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.130278038501527592203509897322396245195907221303330814031260670318156947200000000e81 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.514255415137608916592802226272616757352265347249990055386555277571672160000000000e81 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.1668033590125834049974089272397077430899014523772403641189724169559398160000000000e82 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.4378588174080314381181984340042328256109913124902559558123025945093420170000000000e82 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.9130958265460167794903894172527294290180428589735825419988261422085059135000000000e82 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.14783456239316462144130114374568000279339741526238955441885756588137714790000000000e83 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.18049568664281727036437930341042325922449684421570817690674470252958837825000000000e83 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.15998481316067894418660892802287516158534947555483224771279644087849878981250000000e83 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.9776849693152602144737212268064593207993579061684192915782004720352703821875000000e82 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.3825723792972757360984126539677449516171400502398162445306001847094536278125000000e82 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.854682975025828772134751673757728083399993729259163950547085519031758104687500000e81 * a * a * pow(x, 0.4e1) + 0.89029476565190497097369966016430008687499346797829578181988074899141469238281250e80 * a * x * x - 0.2725392139750729502980713245400918633290796330545803413734328823443106201171875e79) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.8523663211819350103340917943137415942301277004679691554021630519394885996589875200000000000e91;
return retval;
}

double HO_deriv_0( const double a, const double x )
{
double retval = -pow(a, 0.5e1 / 0.4e1) * x * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1);
return retval;
}

double HO_deriv_1( const double a, const double x )
{
double retval = -sqrt(0.2e1) * pow(a, 0.3e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * (a * x * x - 0.1e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1);
return retval;
}

double HO_deriv_2( const double a, const double x )
{
double retval = -(a * x * x - 0.5e1 / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * sqrt(0.2e1) * x * exp(-a * x * x / 0.2e1) * pow(a, 0.5e1 / 0.4e1);
return retval;
}

double HO_deriv_3( const double a, const double x )
{
double retval = -sqrt(0.3e1) * pow(a, 0.3e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * (0.2e1 * a * a * pow(x, 0.4e1) - 0.9e1 * a * x * x + 0.3e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.3e1;
return retval;
}

double HO_deriv_4( const double a, const double x )
{
double retval = -pow(a, 0.5e1 / 0.4e1) * sqrt(0.6e1) * (a * a * pow(x, 0.4e1) - 0.7e1 * a * x * x + 0.27e2 / 0.4e1) * exp(-a * x * x / 0.2e1) * x * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.3e1;
return retval;
}

double HO_deriv_5( const double a, const double x )
{
double retval = -0.2e1 / 0.15e2 * (pow(a, 0.3e1) * pow(x, 0.6e1) - 0.10e2 * a * a * pow(x, 0.4e1) + 0.75e2 / 0.4e1 * a * x * x - 0.15e2 / 0.4e1) * sqrt(0.15e2) * pow(a, 0.3e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1);
return retval;
}

double HO_deriv_6( const double a, const double x )
{
double retval = (-0.8e1 * pow(a, 0.3e1) * pow(x, 0.7e1) + 0.108e3 * a * a * pow(x, 0.5e1) - 0.330e3 * a * pow(x, 0.3e1) + 0.195e3 * x) * sqrt(0.5e1) * pow(a, 0.5e1 / 0.4e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * exp(-a * x * x / 0.2e1) / 0.60e2;
return retval;
}

double HO_deriv_7( const double a, const double x )
{
double retval = -sqrt(0.70e2) * pow(a, 0.3e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * (0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.140e3 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.630e3 * a * a * pow(x, 0.4e1) - 0.735e3 * a * x * x + 0.105e3) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.420e3;
return retval;
}

double HO_deriv_8( const double a, const double x )
{
double retval = -pow(a, 0.5e1 / 0.4e1) * sqrt(0.70e2) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.4e1) * pow(x, 0.8e1) - 0.22e2 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.273e3 / 0.2e1 * a * a * pow(x, 0.4e1) - 0.525e3 / 0.2e1 * a * x * x + 0.1785e4 / 0.16e2) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.105e3;
return retval;
}

double HO_deriv_9( const double a, const double x )
{
double retval = -0.2e1 / 0.315e3 * sqrt(0.35e2) * pow(a, 0.3e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * (pow(a, 0.5e1) * pow(x, 0.10e2) - 0.27e2 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.441e3 / 0.2e1 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.630e3 * a * a * pow(x, 0.4e1) + 0.8505e4 / 0.16e2 * a * x * x - 0.945e3 / 0.16e2);
return retval;
}

double HO_deriv_10( const double a, const double x )
{
double retval = (-0.32e2 * pow(a, 0.5e1) * pow(x, 0.11e2) + 0.1040e4 * pow(a, 0.4e1) * pow(x, 0.9e1) - 0.10800e5 * pow(a, 0.3e1) * pow(x, 0.7e1) + 0.42840e5 * a * a * pow(x, 0.5e1) - 0.59850e5 * a * pow(x, 0.3e1) + 0.19845e5 * x) * sqrt(0.7e1) * pow(a, 0.5e1 / 0.4e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * exp(-a * x * x / 0.2e1) / 0.5040e4;
return retval;
}

double HO_deriv_11( const double a, const double x )
{
double retval = -sqrt(0.154e3) * pow(a, 0.3e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * (0.32e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.1232e4 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.15840e5 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.83160e5 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.173250e6 * a * a * pow(x, 0.4e1) - 0.114345e6 * a * x * x + 0.10395e5) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.55440e5;
return retval;
}

double HO_deriv_12( const double a, const double x )
{
double retval = (-0.64e2 * pow(a, 0.6e1) * pow(x, 0.13e2) + 0.2880e4 * pow(a, 0.5e1) * pow(x, 0.11e2) - 0.44880e5 * pow(a, 0.4e1) * pow(x, 0.9e1) + 0.300960e6 * pow(a, 0.3e1) * pow(x, 0.7e1) - 0.873180e6 * a * a * pow(x, 0.5e1) + 0.956340e6 * a * pow(x, 0.3e1) - 0.259875e6 * x) * sqrt(0.231e3) * pow(a, 0.5e1 / 0.4e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * exp(-a * x * x / 0.2e1) / 0.332640e6;
return retval;
}

double HO_deriv_13( const double a, const double x )
{
double retval = -sqrt(0.6006e4) * pow(a, 0.3e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * (0.64e2 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.3328e4 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.61776e5 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.514800e6 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.1981980e7 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.3243240e7 * a * a * pow(x, 0.4e1) + 0.1756755e7 * a * x * x - 0.135135e6) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.4324320e7;
return retval;
}

double HO_deriv_14( const double a, const double x )
{
double retval = (-0.128e3 * pow(a, 0.7e1) * pow(x, 0.15e2) + 0.7616e4 * pow(a, 0.6e1) * pow(x, 0.13e2) - 0.165984e6 * pow(a, 0.5e1) * pow(x, 0.11e2) + 0.1681680e7 * pow(a, 0.4e1) * pow(x, 0.9e1) - 0.8288280e7 * pow(a, 0.3e1) * pow(x, 0.7e1) + 0.18918900e8 * a * a * pow(x, 0.5e1) - 0.17027010e8 * a * pow(x, 0.3e1) + 0.3918915e7 * x) * sqrt(0.858e3) * pow(a, 0.5e1 / 0.4e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * exp(-a * x * x / 0.2e1) / 0.8648640e7;
return retval;
}

double HO_deriv_15( const double a, const double x )
{
double retval = -sqrt(0.715e3) * pow(a, 0.3e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * (0.128e3 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.8640e4 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.218400e6 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.2642640e7 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.16216200e8 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.49189140e8 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.66216150e8 * a * a * pow(x, 0.4e1) - 0.30405375e8 * a * x * x + 0.2027025e7) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.21621600e8;
return retval;
}

double HO_deriv_16( const double a, const double x )
{
double retval = -pow(a, 0.5e1 / 0.4e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.8e1) * pow(x, 0.16e2) - 0.76e2 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.2205e4 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.31395e5 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.1876875e7 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.3648645e7 / 0.4e1 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.27432405e8 / 0.16e2 * a * a * pow(x, 0.4e1) - 0.20945925e8 / 0.16e2 * a * x * x + 0.66891825e8 / 0.256e3) * sqrt(0.1430e4) / 0.675675e6;
return retval;
}

double HO_deriv_17( const double a, const double x )
{
double retval = -0.2e1 / 0.11486475e8 * pow(0.3141592654e1, -0.1e1 / 0.4e1) * pow(a, 0.3e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * sqrt(0.12155e5) * (pow(a, 0.9e1) * pow(x, 0.18e2) - 0.85e2 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.2805e4 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.46410e5 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.3318315e7 / 0.8e1 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.16081065e8 / 0.8e1 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.80405325e8 / 0.16e2 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.11486475e8 / 0.2e1 * a * a * pow(x, 0.4e1) + 0.585810225e9 / 0.256e3 * a * x * x - 0.34459425e8 / 0.256e3);
return retval;
}

double HO_deriv_18( const double a, const double x )
{
double retval = -0.2e1 / 0.34459425e8 * pow(a, 0.5e1 / 0.4e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * x * sqrt(0.12155e5) * (pow(a, 0.9e1) * pow(x, 0.18e2) - 0.189e3 / 0.2e1 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.3519e4 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.133875e6 / 0.2e1 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.5638815e7 / 0.8e1 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.66621555e8 / 0.16e2 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.213648435e9 / 0.16e2 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.682296615e9 / 0.32e2 * a * a * pow(x, 0.4e1) + 0.3618239625e10 / 0.256e3 * a * x * x - 0.1274998725e10 / 0.512e3);
return retval;
}

double HO_deriv_19( const double a, const double x )
{
double retval = -sqrt(0.461890e6) * pow(a, 0.3e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * (0.512e3 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.53504e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.2232576e7 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.48372480e8 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.592562880e9 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.4190266080e10 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.16761064320e11 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.35617261680e11 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.35355370050e11 * a * a * pow(x, 0.4e1) - 0.12439852425e11 * a * x * x + 0.654729075e9) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.167610643200e12;
return retval;
}

double HO_deriv_20( const double a, const double x )
{
double retval = -0.2e1 / 0.654729075e9 * pow(a, 0.5e1 / 0.4e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.10e2) * pow(x, 0.20e2) - 0.115e3 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.21375e5 / 0.4e1 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.130815e6 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.14753025e8 / 0.8e1 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.123009705e9 / 0.8e1 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.2400673275e10 / 0.32e2 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.3273645375e10 / 0.16e2 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.72674927325e11 / 0.256e3 * a * a * pow(x, 0.4e1) - 0.42557389875e11 / 0.256e3 * a * x * x + 0.26843892075e11 / 0.1024e4) * sqrt(0.46189e5);
return retval;
}

double HO_deriv_21( const double a, const double x )
{
double retval = -0.2e1 / 0.13749310575e11 * pow(0.3141592654e1, -0.1e1 / 0.4e1) * pow(a, 0.3e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * (pow(a, 0.11e2) * pow(x, 0.22e2) - 0.126e3 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.25935e5 / 0.4e1 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.712215e6 / 0.4e1 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.22892625e8 / 0.8e1 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.27776385e8 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.5194183995e10 / 0.32e2 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.17677685025e11 / 0.32e2 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.261236900925e12 / 0.256e3 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.114577588125e12 / 0.128e3 * a * a * pow(x, 0.4e1) + 0.288735522075e12 / 0.1024e4 * a * x * x - 0.13749310575e11 / 0.1024e4) * sqrt(0.1939938e7);
return retval;
}

double HO_deriv_22( const double a, const double x )
{
double retval = (-0.2048e4 * pow(a, 0.11e2) * pow(x, 0.23e2) + 0.281600e6 * pow(a, 0.10e2) * pow(x, 0.21e2) - 0.15966720e8 * pow(a, 0.9e1) * pow(x, 0.19e2) + 0.488759040e9 * pow(a, 0.8e1) * pow(x, 0.17e2) - 0.8881931520e10 * pow(a, 0.7e1) * pow(x, 0.15e2) + 0.99277073280e11 * pow(a, 0.6e1) * pow(x, 0.13e2) - 0.684410126400e12 * pow(a, 0.5e1) * pow(x, 0.11e2) + 0.2842397157600e13 * pow(a, 0.4e1) * pow(x, 0.9e1) - 0.6741090556200e13 * pow(a, 0.3e1) * pow(x, 0.7e1) + 0.8267918759100e13 * a * a * pow(x, 0.5e1) - 0.4335615934650e13 * a * pow(x, 0.3e1) + 0.618718975875e12 * x) * sqrt(0.176358e6) * pow(a, 0.5e1 / 0.4e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * exp(-a * x * x / 0.2e1) / 0.14079294028800e14;
return retval;
}

double HO_deriv_23( const double a, const double x )
{
double retval = -sqrt(0.2028117e7) * pow(a, 0.3e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * (0.2048e4 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.306176e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.19041792e8 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.646060800e9 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.13179640320e11 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.168040414080e12 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.1349265677760e13 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.6714203015520e13 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.19877574717000e14 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.32466705371100e14 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.25509554220150e14 * a * a * pow(x, 0.4e1) - 0.7273385294175e13 * a * x * x + 0.316234143225e12) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.161911881331200e15;
return retval;
}

double HO_deriv_24( const double a, const double x )
{
double retval = -0.2e1 / 0.316234143225e12 * pow(a, 0.5e1 / 0.4e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * (pow(a, 0.12e2) * pow(x, 0.24e2) - 0.162e3 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.22011e5 / 0.2e1 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.823515e6 / 0.2e1 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.149906295e9 / 0.16e2 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.540571185e9 / 0.4e1 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.20001133845e11 / 0.16e2 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.117458396055e12 / 0.16e2 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.6791504694975e13 / 0.256e3 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.7122797606925e13 / 0.128e3 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.31307180179275e14 / 0.512e3 * a * a * pow(x, 0.4e1) - 0.14863004731575e14 / 0.512e3 * a * x * x + 0.15495473018025e14 / 0.4096e4) * exp(-a * x * x / 0.2e1) * x * sqrt(0.676039e6);
return retval;
}

double HO_deriv_25( const double a, const double x )
{
double retval = -0.2e1 / 0.1581170716125e13 * (pow(a, 0.13e2) * pow(x, 0.26e2) - 0.175e3 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.25875e5 / 0.2e1 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.531300e6 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.214512375e9 / 0.16e2 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.3475100475e10 / 0.16e2 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.36681616125e11 / 0.16e2 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.125489739375e12 / 0.8e1 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.17392877877375e14 / 0.256e3 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.45552775393125e14 / 0.256e3 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.133345397059875e15 / 0.512e3 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.23717560741875e14 / 0.128e3 * a * a * pow(x, 0.4e1) + 0.197646339515625e15 / 0.4096e4 * a * x * x - 0.7905853580625e13 / 0.4096e4) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * pow(a, 0.3e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * sqrt(0.1352078e7);
return retval;
}

double HO_deriv_26( const double a, const double x )
{
double retval = (-0.8192e4 * pow(a, 0.13e2) * pow(x, 0.27e2) + 0.1544192e7 * pow(a, 0.12e2) * pow(x, 0.25e2) - 0.123801600e9 * pow(a, 0.11e2) * pow(x, 0.23e2) + 0.5557094400e10 * pow(a, 0.10e2) * pow(x, 0.21e2) - 0.154714560000e12 * pow(a, 0.9e1) * pow(x, 0.19e2) + 0.2796797203200e13 * pow(a, 0.8e1) * pow(x, 0.17e2) - 0.33410388211200e14 * pow(a, 0.7e1) * pow(x, 0.15e2) + 0.263428060896000e15 * pow(a, 0.6e1) * pow(x, 0.13e2) - 0.1346856274764000e16 * pow(a, 0.5e1) * pow(x, 0.11e2) + 0.4306807855350000e16 * pow(a, 0.4e1) * pow(x, 0.9e1) - 0.8096798768058000e16 * pow(a, 0.3e1) * pow(x, 0.7e1) + 0.8057645969373000e16 * a * a * pow(x, 0.5e1) - 0.3494387282636250e16 * a * pow(x, 0.3e1) + 0.419010239773125e15 * x) * sqrt(0.104006e6) * pow(a, 0.5e1 / 0.4e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * exp(-a * x * x / 0.2e1) / 0.6476475253248000e16;
return retval;
}

double HO_deriv_27( const double a, const double x )
{
double retval = -sqrt(0.156009e6) * pow(a, 0.3e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * (0.8192e4 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.1658880e7 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.143769600e9 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.7026739200e10 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.214832217600e12 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.4308579475200e13 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.57825671904000e14 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.520431047136000e15 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.3100901655852000e16 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.11886789680766000e17 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.27908114902668000e17 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.36999394757325000e17 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.24049606592261250e17 * a * a * pow(x, 0.4e1) - 0.5763367260275625e16 * a * x * x + 0.213458046676875e15) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.29144138639616000e17;
return retval;
}

double HO_deriv_28( const double a, const double x )
{
double retval = -0.2e1 / 0.14230536445125e14 * pow(a, 0.5e1 / 0.4e1) * (pow(a, 0.14e2) * pow(x, 0.28e2) - 0.217e3 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.81081e5 / 0.4e1 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.2149875e7 / 0.2e1 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.574999425e9 / 0.16e2 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.12727689975e11 / 0.16e2 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.762682345425e12 / 0.64e2 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.1942581165525e13 / 0.16e2 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.213458046676875e15 / 0.256e3 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.966095307552375e15 / 0.256e3 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.11079263207887875e17 / 0.1024e4 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.9434845663117875e16 / 0.512e3 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.68633877274837875e17 / 0.4096e4 * a * a * pow(x, 0.4e1) - 0.27393782656865625e17 / 0.4096e4 * a * x * x + 0.12167108660581875e17 / 0.16384e5) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * x * sqrt(0.44574e5);
return retval;
}

double HO_deriv_29( const double a, const double x )
{
double retval = -0.4e1 / 0.412685556908625e15 * pow(0.3141592654e1, -0.1e1 / 0.4e1) * pow(a, 0.3e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * (pow(a, 0.15e2) * pow(x, 0.30e2) - 0.232e3 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.93177e5 / 0.4e1 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.5343975e7 / 0.4e1 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.778439025e9 / 0.16e2 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.9464179725e10 / 0.8e1 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.1258735903425e13 / 0.64e2 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.14411241669825e14 / 0.64e2 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.451988943280875e15 / 0.256e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.596101359979125e15 / 0.64e2 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.32785574798851875e17 / 0.1024e4 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.69743859117557625e17 / 0.1024e4 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.337989471108163875e18 / 0.4096e4 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.101107961442613125e18 / 0.2048e4 * a * a * pow(x, 0.4e1) + 0.179518217255251875e18 / 0.16384e5 * a * x * x - 0.6190283353629375e16 / 0.16384e5) * sqrt(0.646323e6);
return retval;
}

double HO_deriv_30( const double a, const double x )
{
double retval = (-0.32768e5 * pow(a, 0.15e2) * pow(x, 0.31e2) + 0.8110080e7 * pow(a, 0.14e2) * pow(x, 0.29e2) - 0.873062400e9 * pow(a, 0.13e2) * pow(x, 0.27e2) + 0.53992673280e11 * pow(a, 0.12e2) * pow(x, 0.25e2) - 0.2134169856000e13 * pow(a, 0.11e2) * pow(x, 0.23e2) + 0.56763445939200e14 * pow(a, 0.10e2) * pow(x, 0.21e2) - 0.1041816904128000e16 * pow(a, 0.9e1) * pow(x, 0.19e2) + 0.13316912088480000e17 * pow(a, 0.8e1) * pow(x, 0.17e2) - 0.118224586207728000e18 * pow(a, 0.7e1) * pow(x, 0.15e2) + 0.718989948036360000e18 * pow(a, 0.6e1) * pow(x, 0.13e2) - 0.2918512258457796000e19 * pow(a, 0.5e1) * pow(x, 0.11e2) + 0.7582409298934470000e19 * pow(a, 0.4e1) * pow(x, 0.9e1) - 0.11802806927586675000e20 * pow(a, 0.3e1) * pow(x, 0.7e1) + 0.9879692232392482500e19 * a * a * pow(x, 0.5e1) - 0.3652267178641331250e19 * a * pow(x, 0.3e1) + 0.377607284571391875e18 * x) * sqrt(0.1077205e7) * pow(a, 0.5e1 / 0.4e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * exp(-a * x * x / 0.2e1) / 0.16903600410977280000e20;
return retval;
}

double HO_deriv_31( const double a, const double x )
{
double retval = -sqrt(0.66786710e8) * pow(a, 0.3e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * (0.32768e5 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.8634368e7 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.994222080e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.66115768320e11 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.2827319040000e13 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.81935705779200e14 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.1652370066547200e16 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.23444341528608000e17 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.233933755687632000e18 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.1624539970053000000e19 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.7687323138290796000e19 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.23948968238521326000e20 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.46567438241569245000e20 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.51940604192519542500e20 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.28784817594376593750e20 * a * a * pow(x, 0.4e1) - 0.5948862302837829375e19 * a * x * x + 0.191898783962510625e18) * pow(0.3141592654e1, -0.1e1 / 0.4e1) / 0.524011612740295680000e21;
return retval;
}

double HO_deriv_32( const double a, const double x )
{
double retval = -pow(a, 0.5e1 / 0.4e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.16e2) * pow(x, 0.32e2) - 0.280e3 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.34410e5 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.2454270e7 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.452812815e9 / 0.4e1 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.7123518675e10 / 0.2e1 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.628691938875e12 / 0.8e1 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.9849507042375e13 / 0.8e1 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.1755936585277875e16 / 0.128e3 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.3452147436362625e16 / 0.32e2 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.75338041111207875e17 / 0.128e3 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.277187132390293125e18 / 0.128e3 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.5266555515415569375e19 / 0.1024e4 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.3774009417929375625e19 / 0.512e3 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.11705825821713148125e20 / 0.2048e4 * a * a * pow(x, 0.4e1) - 0.4029874463212723125e19 / 0.2048e4 * a * x * x + 0.12473420957563190625e20 / 0.65536e5) * sqrt(0.66786710e8) / 0.63966261320836875e17;
return retval;
}

double HO_deriv_33( const double a, const double x )
{
double retval = -0.2e1 / 0.2110886623587616875e19 * pow(0.3141592654e1, -0.1e1 / 0.4e1) * pow(a, 0.3e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * (pow(a, 0.17e2) * pow(x, 0.34e2) - 0.297e3 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.38874e5 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.2966700e7 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.588741615e9 / 0.4e1 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.20045250225e11 / 0.4e1 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.963994306275e12 / 0.8e1 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.4149366796575e13 / 0.2e1 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.3284915380621875e16 / 0.128e3 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.29038651964697375e17 / 0.128e3 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.180933139164652875e18 / 0.128e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.388061985346410375e18 / 0.64e2 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.17684539046500701375e20 / 0.1024e4 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.31663299353814253125e20 / 0.1024e4 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.65437485331216123125e20 / 0.2048e4 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.2110886623587616875e19 / 0.128e3 * a * a * pow(x, 0.4e1) + 0.208977775735174070625e21 / 0.65536e5 * a * x * x - 0.6332659870762850625e19 / 0.65536e5) * sqrt(0.1101980715e10);
return retval;
}

double HO_deriv_34( const double a, const double x )
{
double retval = -0.2e1 / 0.2110886623587616875e19 * pow(a, 0.5e1 / 0.4e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.17e2) * pow(x, 0.34e2) - 0.629e3 / 0.2e1 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.43758e5 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.3565155e7 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.759030195e9 / 0.4e1 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.55762241535e11 / 0.8e1 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.1456014084525e13 / 0.8e1 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.54863849865825e14 / 0.16e2 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.5995835021050875e16 / 0.128e3 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.118388350317612375e18 / 0.256e3 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.417709839799877625e18 / 0.128e3 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.4132220481326062125e19 / 0.256e3 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.55603738757492800875e20 / 0.1024e4 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.243221047628928744375e21 / 0.2048e4 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.322965653408905381875e21 / 0.2048e4 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.466505943812863329375e21 / 0.4096e4 * a * a * pow(x, 0.4e1) + 0.2404299864266295620625e22 / 0.65536e5 * a * x * x - 0.436953531082636693125e21 / 0.131072e6) * sqrt(0.64822395e8);
return retval;
}

double HO_deriv_35( const double a, const double x )
{
double retval = -0.2e1 / 0.14776206365113318125e20 * pow(0.3141592654e1, -0.1e1 / 0.4e1) * pow(a, 0.3e1 / 0.4e1) * (pow(a, 0.18e2) * pow(x, 0.36e2) - 0.665e3 / 0.2e1 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.98175e5 / 0.2e1 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.4260795e7 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.970852575e9 / 0.4e1 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.76732657155e11 / 0.8e1 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.1084265807625e13 / 0.4e1 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.89064691340625e14 / 0.16e2 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.10698450723835875e17 / 0.128e3 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.234542958176401875e18 / 0.256e3 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.1860707468199454875e19 / 0.256e3 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.10511788943724193125e20 / 0.256e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.164926343772224409375e21 / 0.1024e4 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.865228972712746516875e21 / 0.2048e4 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.179425363004947434375e21 / 0.256e3 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.2763150590276190489375e22 / 0.4096e4 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.21351618197588744690625e23 / 0.65536e5 * a * a * pow(x, 0.4e1) - 0.7757508341684492015625e22 / 0.131072e6 * a * x * x + 0.221643095476699771875e21 / 0.131072e6) * exp(-a * x * x / 0.2e1) * sqrt(0.181502706e9);
return retval;
}

double HO_deriv_36( const double a, const double x )
{
double retval = -0.2e1 / 0.44328619095339954375e20 * pow(a, 0.5e1 / 0.4e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * (pow(a, 0.18e2) * pow(x, 0.36e2) - 0.351e3 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.219555e6 / 0.4e1 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.5065830e7 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.1232587125e10 / 0.4e1 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.52267172265e11 / 0.4e1 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.6375482948835e13 / 0.16e2 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.71096857957125e14 / 0.8e1 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.18692897418570375e17 / 0.128e3 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.226313380696528125e18 / 0.128e3 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.8021369169632944125e19 / 0.512e3 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.12831632020959877125e20 / 0.128e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.464331090927954875625e21 / 0.1024e4 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.1438665183366942155625e22 / 0.1024e4 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.11662648595321583234375e23 / 0.4096e4 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.7212899592798886861875e22 / 0.2048e4 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.155992410596501299445625e24 / 0.65536e5 * a * a * pow(x, 0.4e1) - 0.47209979336537051409375e23 / 0.65536e5 * a * x * x + 0.16179945969799083346875e23 / 0.262144e6) * exp(-a * x * x / 0.2e1) * x * sqrt(0.90751353e8);
return retval;
}

double HO_deriv_37( const double a, const double x )
{
double retval = -0.2e1 / 0.1640158906527578311875e22 * pow(0.3141592654e1, -0.1e1 / 0.4e1) * pow(a, 0.3e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * sqrt(0.6715600122e10) * (pow(a, 0.19e2) * pow(x, 0.38e2) - 0.370e3 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.244755e6 / 0.4e1 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.23974335e8 / 0.4e1 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.1553972805e10 / 0.4e1 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.17634213135e11 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.9257961895875e13 / 0.16e2 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.223513651486125e15 / 0.16e2 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.32031225593742375e17 / 0.128e3 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.213146056728730125e18 / 0.64e2 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.16777639608218614125e20 / 0.512e3 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.120704335112419183125e21 / 0.512e3 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.1247278129494998225625e22 / 0.1024e4 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.281643448595644760625e21 / 0.64e2 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.43815673645808163474375e23 / 0.4096e4 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.67715131998067161733125e23 / 0.4096e4 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.975894549383909095565625e24 / 0.65536e5 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.221421452381223072103125e24 / 0.32768e5 * a * a * pow(x, 0.4e1) + 0.303429397707601987696875e24 / 0.262144e6 * a * x * x - 0.8200794532637891559375e22 / 0.262144e6);
return retval;
}

double HO_deriv_38( const double a, const double x )
{
double retval = -0.2e1 / 0.1640158906527578311875e22 * pow(a, 0.5e1 / 0.4e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.19e2) * pow(x, 0.38e2) - 0.779e3 / 0.2e1 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.272061e6 / 0.4e1 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.56468475e8 / 0.8e1 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.1946280105e10 / 0.4e1 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.188706349755e12 / 0.8e1 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.13290318632745e14 / 0.16e2 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.692548452450855e15 / 0.32e2 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.53901176723769375e17 / 0.128e3 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.1570320948552481125e19 / 0.256e3 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.34133818513272352875e20 / 0.512e3 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.548613036844289542125e21 / 0.1024e4 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.3210735313990350271125e22 / 0.1024e4 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.26756127616586252259375e23 / 0.2048e4 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.153656618598109620118125e24 / 0.4096e4 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.580225738885399013281875e24 / 0.8192e4 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.5373394886199564775175625e25 / 0.65536e5 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.6824701210061253355711875e25 / 0.131072e6 * a * a * pow(x, 0.4e1) + 0.3895377403002998490703125e25 / 0.262144e6 * a * x * x - 0.631461179013117650071875e24 / 0.524288e6) * sqrt(0.353452638e9);
return retval;
}

double HO_deriv_39( const double a, const double x )
{
double retval = -0.4e1 / 0.21322065784858518054375e23 * pow(0.3141592654e1, -0.1e1 / 0.4e1) * pow(a, 0.3e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * (pow(a, 0.20e2) * pow(x, 0.40e2) - 0.819e3 / 0.2e1 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.301587e6 / 0.4e1 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.66212055e8 / 0.8e1 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.4844995155e10 / 0.8e1 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.250324749675e12 / 0.8e1 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.18874486125495e14 / 0.16e2 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.1058423106575835e16 / 0.32e2 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.89181946942963875e17 / 0.128e3 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.2832588505283662125e19 / 0.256e3 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.67689097729709581125e20 / 0.512e3 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.1208147835236331614625e22 / 0.1024e4 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.1987598051517835882125e22 / 0.256e3 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.75681618115486827819375e23 / 0.2048e4 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.506837503137048149941875e24 / 0.4096e4 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.2295675749503100443854375e25 / 0.8192e4 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.26564247958535876564600625e26 / 0.65536e5 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.44968236740266614576676875e26 / 0.131072e6 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.38486328741669625088146875e26 / 0.262144e6 * a * a * pow(x, 0.4e1) - 0.12473408484142233061809375e26 / 0.524288e6 * a * x * x + 0.319830986772877770815625e24 / 0.524288e6) * sqrt(0.765814049e9);
return retval;
}

double HO_deriv_40( const double a, const double x )
{
double retval = -0.2e1 / 0.106610328924292590271875e24 * pow(a, 0.5e1 / 0.4e1) * (pow(a, 0.20e2) * pow(x, 0.40e2) - 0.430e3 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.166725e6 / 0.2e1 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.19328985e8 / 0.2e1 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.11990139525e11 / 0.16e2 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.82364917635e11 / 0.2e1 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.13267211732775e14 / 0.8e1 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.399267975731625e15 / 0.8e1 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.145239170735684025e18 / 0.128e3 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.1252794016579730625e19 / 0.64e2 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.65540237484321975375e20 / 0.256e3 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.646123205601773274375e21 / 0.256e3 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.37998198043723333040625e23 / 0.2048e4 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.51218872866036540039375e23 / 0.512e3 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.791216916661907745384375e24 / 0.2048e4 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.2116791924866495214463125e25 / 0.2048e4 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.119703092652661666000978125e27 / 0.65536e5 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.65108450878764403344609375e26 / 0.32768e5 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.155970911216240059567753125e27 / 0.131072e6 * a * a * pow(x, 0.4e1) - 0.42111079925095573157390625e26 / 0.131072e6 * a * x * x + 0.25906309928603099436065625e26 / 0.1048576e7) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * x * sqrt(0.3829070245e10);
return retval;
}

double HO_deriv_41( const double a, const double x )
{
double retval = -0.2e1 / 0.4371023485895996201146875e25 * pow(0.3141592654e1, -0.1e1 / 0.4e1) * pow(a, 0.3e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * (pow(a, 0.21e2) * pow(x, 0.42e2) - 0.451e3 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.183885e6 / 0.2e1 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.11240970e8 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.14753773125e11 / 0.16e2 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.860794139205e12 / 0.16e2 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.18473966526015e14 / 0.8e1 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.297636127363575e15 / 0.4e1 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.233049087725679225e18 / 0.128e3 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.4352928362692284375e19 / 0.128e3 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.124145516903983950375e21 / 0.256e3 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.84098575967214934125e20 / 0.16e2 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.87883011885739606160625e23 / 0.2048e4 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.532829169964589080708125e24 / 0.2048e4 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.2350716926314363591359375e25 / 0.2048e4 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.3667118405050407202520625e25 / 0.1024e4 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.497505730285171910475298125e27 / 0.65536e5 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.676259776460766269406009375e27 / 0.65536e5 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.1079642801016311061683278125e28 / 0.131072e6 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.109275587147399905028671875e27 / 0.32768e5 * a * a * pow(x, 0.4e1) + 0.537635888765207532741065625e27 / 0.1048576e7 * a * x * x - 0.13113070457687988603440625e26 / 0.1048576e7) * sqrt(0.313983760090e12);
return retval;
}

double HO_deriv_42( const double a, const double x )
{
double retval = -0.2e1 / 0.13113070457687988603440625e26 * pow(a, 0.5e1 / 0.4e1) * (pow(a, 0.21e2) * pow(x, 0.42e2) - 0.945e3 / 0.2e1 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.202335e6 / 0.2e1 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.52103415e8 / 0.4e1 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.18058618305e11 / 0.16e2 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.2233249130385e13 / 0.32e2 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.25492749507225e14 / 0.8e1 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.1755026819971425e16 / 0.16e2 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.368771161803469425e18 / 0.128e3 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.14869603286956843425e20 / 0.256e3 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.230356968953675689125e21 / 0.256e3 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.5466407437868970718125e22 / 0.512e3 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.197211160643119020523125e24 / 0.2048e4 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.2671520648023147328533125e25 / 0.4096e4 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.6676036070732792599460625e25 / 0.2048e4 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.48048653973865591807385625e26 / 0.4096e4 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.1925237162651463781323328125e28 / 0.65536e5 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.6394807359865842442277878125e28 / 0.131072e6 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.6560906252329890297921459375e28 / 0.131072e6 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.7435110949509089538150834375e28 / 0.262144e6 * a * a * pow(x, 0.4e1) + 0.7618693935916721378599003125e28 / 0.1048576e7 * a * x * x - 0.1114610988903479031292453125e28 / 0.2097152e7) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * x * sqrt(0.134564468610e12);
return retval;
}

double HO_deriv_43( const double a, const double x )
{
double retval = -0.4e1 / 0.563862029680583509947946875e27 * pow(0.3141592654e1, -0.1e1 / 0.4e1) * pow(a, 0.3e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * (pow(a, 0.22e2) * pow(x, 0.44e2) - 0.989e3 / 0.2e1 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.111069e6 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.60162375e8 / 0.4e1 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.21992957805e11 / 0.16e2 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.2877693940485e13 / 0.32e2 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.139514865484995e15 / 0.32e2 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.2559670695326745e16 / 0.16e2 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.575925906448517625e18 / 0.128e3 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.24995184339865664925e20 / 0.256e3 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.52409257486815103875e20 / 0.32e2 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.10848716299770726502125e23 / 0.512e3 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.430332413224238817917625e24 / 0.2048e4 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.6474458253260606649665625e25 / 0.4096e4 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.36389098019346348394243125e26 / 0.4096e4 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.149599625190646098954110625e27 / 0.4096e4 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.6990750052827759597071818125e28 / 0.65536e5 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.27854784266220825391428575625e29 / 0.131072e6 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.17855630939885144481684984375e29 / 0.65536e5 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.53942800839442489118353584375e29 / 0.262144e6 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.82887718363045775962348190625e29 / 0.1048576e7 * a * a * pow(x, 0.4e1) - 0.24246067276265090927761715625e29 / 0.2097152e7 * a * x * x + 0.563862029680583509947946875e27 / 0.2097152e7) * sqrt(0.2893136075115e13);
return retval;
}

double HO_deriv_44( const double a, const double x )
{
double retval = -0.2e1 / 0.563862029680583509947946875e27 * pow(a, 0.5e1 / 0.4e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * (pow(a, 0.22e2) * pow(x, 0.44e2) - 0.517e3 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.486717e6 / 0.4e1 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.34616505e8 / 0.2e1 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.26656745115e11 / 0.16e2 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.1842333157665e13 / 0.16e2 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.378683206316415e15 / 0.64e2 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.1847860157137995e16 / 0.8e1 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.888382260291851325e18 / 0.128e3 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.20694937571716733325e20 / 0.128e3 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.1498904764122911970825e22 / 0.512e3 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.10534260754849835878875e23 / 0.256e3 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.914908407947331268345875e24 / 0.2048e4 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.7603837437288020741938125e25 / 0.2048e4 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.190983305291079201049524375e27 / 0.8192e4 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.222377821229338795742596875e27 / 0.2048e4 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.23972329128522722181051943125e29 / 0.65536e5 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.56423793770037056562124550625e29 / 0.65536e5 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.353541492609725860737362690625e30 / 0.262144e6 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.171602011032790914860825165625e30 / 0.131072e6 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.738095396851883814521862459375e30 / 0.1048576e7 * a * a * pow(x, 0.4e1) - 0.179871987468106139673395053125e30 / 0.1048576e7 * a * x * x + 0.50183720641571932385367271875e29 / 0.4194304e7) * exp(-a * x * x / 0.2e1) * x * sqrt(0.526024740930e12);
return retval;
}

double HO_deriv_45( const double a, const double x )
{
double retval = -0.4e1 / 0.1691586089041750529843840625e28 * pow(0.3141592654e1, -0.1e1 / 0.4e1) * pow(a, 0.3e1 / 0.4e1) * (pow(a, 0.23e2) * pow(x, 0.46e2) - 0.540e3 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.532125e6 / 0.4e1 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.79414335e8 / 0.4e1 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.32162805675e11 / 0.16e2 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.1172393827605e13 / 0.8e1 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.509991315008175e15 / 0.64e2 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.21140772984205875e17 / 0.64e2 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.1354418855854789725e19 / 0.128e3 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.2111728323644564625e19 / 0.8e1 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.2634169910914229913225e22 / 0.512e3 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.40093081977413554464375e23 / 0.512e3 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.1898525352459877137871875e25 / 0.2048e4 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.8674800456624361691506875e25 / 0.1024e4 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.483998787381502084851534375e27 / 0.8192e4 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.2535107162014462271465604375e28 / 0.8192e4 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.78054615251497917305651503125e29 / 0.65536e5 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.53566892819655433445054953125e29 / 0.16384e5 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.1610577910777640032247985590625e31 / 0.262144e6 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.1953781932843221861969635921875e31 / 0.262144e6 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.5600841540817236004312956309375e31 / 0.1048576e7 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.1023409583870259070555523578125e31 / 0.524288e6 * a * a * pow(x, 0.4e1) + 0.1141820610103181607644592421875e31 / 0.4194304e7 * a * x * x - 0.25373791335626257947657609375e29 / 0.4194304e7) * exp(-a * x * x / 0.2e1) * sqrt(0.52602474093e11);
return retval;
}

double HO_deriv_46( const double a, const double x )
{
double retval = -0.4e1 / 0.1691586089041750529843840625e28 * pow(a, 0.5e1 / 0.4e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * x * (pow(a, 0.23e2) * pow(x, 0.46e2) - 0.1127e4 / 0.2e1 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.580635e6 / 0.4e1 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.181624905e9 / 0.8e1 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.38638128375e11 / 0.16e2 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.5934395011545e13 / 0.32e2 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.681830753168565e15 / 0.64e2 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.59920211104728975e17 / 0.128e3 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.2042198670274287525e19 / 0.128e3 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.108863235994780141875e21 / 0.256e3 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.4555842685430783721975e22 / 0.512e3 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.149712284936836025729325e24 / 0.1024e4 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.3851294286418607908254375e25 / 0.2048e4 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.77063438977102133756825625e26 / 0.4096e4 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.1187621491085478088718203125e28 / 0.8192e4 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.13899921931664435550357849375e29 / 0.16384e5 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.242436300704225155118579113125e30 / 0.65536e5 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.1535309558815662653971344271875e31 / 0.131072e6 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.6817279892848148163107327034375e31 / 0.262144e6 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.20209754913801580635717662578125e32 / 0.524288e6 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.37233501405897970912392775996875e32 / 0.1048576e7 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.38089443966953096680493759353125e32 / 0.2097152e7 * a * a * pow(x, 0.4e1) + 0.17702448421821919294815792140625e32 / 0.4194304e7 * a * x * x - 0.2359762594213241989132157671875e31 / 0.8388608e7) * sqrt(0.2287064091e10);
return retval;
}

double HO_deriv_47( const double a, const double x )
{
double retval = -0.4e1 / 0.79504546184962274902660509375e29 * pow(0.3141592654e1, -0.1e1 / 0.4e1) * (-0.207081765e9 / 0.8e1 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.46225251765e11 / 0.16e2 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.7468679963745e13 / 0.32e2 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.1175e4 / 0.2e1 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.7648344991338362183998125e25 / 0.2048e4 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.36765594373363507018478986875e29 / 0.16384e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.721171274246745714593241665625e30 / 0.65536e5 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.632385e6 / 0.4e1 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.274555974048043770707625e24 / 0.1024e4 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.1523545039728436725e19 / 0.64e2 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.84188763336152475e17 / 0.128e3 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.905255519743575e15 / 0.64e2 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.173176286182465641075e21 / 0.256e3 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.2828122644104885155267614375e28 / 0.8192e4 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.1192568192774434123539907640625e31 / 0.8388608e7 + pow(a, 0.24e2) * pow(x, 0.48e2) - 0.5217886278373513111468748521875e31 / 0.131072e6 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.166890809939203749194420625e27 / 0.4096e4 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.7761446280723232822725e22 / 0.512e3 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.96103328660689398740671520165625e32 / 0.524288e6 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.221261152032750011054104197590625e33 / 0.1048576e7 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.301719752771931833255596633078125e33 / 0.2097152e7 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.210289524659225217117537047296875e33 / 0.4194304e7 * a * a * pow(x, 0.4e1) - 0.56050705060398403806375659109375e32 / 0.8388608e7 * a * x * x + 0.27022711864422177658582055353125e32 / 0.262144e6 * pow(a, 0.6e1) * pow(x, 0.12e2)) * pow(a, 0.3e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * sqrt(0.214984024554e12);
return retval;
}

double HO_deriv_48( const double a, const double x )
{
double retval = -0.2e1 / 0.79504546184962274902660509375e29 * pow(a, 0.5e1 / 0.4e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * (-0.29430225e8 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.27541874745e11 / 0.8e1 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.1168838508915e13 / 0.4e1 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.612e3 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.7444389124902672525758175e25 / 0.1024e4 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.11759036257067680382428501875e29 / 0.2048e4 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.2061701407552461278190090879375e31 / 0.65536e5 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.171879e6 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.61884044944162246730925e23 / 0.128e3 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.9002766143849853375e19 / 0.256e3 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.14665139419845915e17 / 0.16e2 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.298489657861395e15 / 0.16e2 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.115679114699120109983371041140625e33 / 0.16777216e8 - 0.34025839220601753525e20 / 0.32e2 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.1637334162376512458312829375e28 / 0.2048e4 * pow(a, 0.10e2) * pow(x, 0.20e2) + pow(a, 0.24e2) * pow(x, 0.48e2) - 0.2112607615146349210984907938125e31 / 0.16384e5 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.44125067257721320292296875e26 / 0.512e3 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.3258862839979126154775e22 / 0.128e3 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.53029532305369837360074559753125e32 / 0.65536e5 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.596734622148931847994402229865625e33 / 0.524288e6 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.261490452402340922154850415334375e33 / 0.262144e6 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.510180672868902918050372488659375e33 / 0.1048576e7 * a * a * pow(x, 0.4e1) - 0.113293978313571241736291225859375e33 / 0.1048576e7 * a * x * x + 0.25240994598636100010763458296875e32 / 0.65536e5 * pow(a, 0.6e1) * pow(x, 0.12e2)) * exp(-a * x * x / 0.2e1) * x * sqrt(0.35830670759e11);
return retval;
}

double HO_deriv_49( const double a, const double x )
{
double retval = -0.2e1 / 0.556531823294735924318623565625e30 * pow(0.3141592654e1, -0.1e1 / 0.4e1) * pow(a, 0.3e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * sqrt(0.71661341518e11) * (0.32695909785e11 / 0.8e1 * pow(a, 0.21e2) * pow(x, 0.42e2) + pow(a, 0.25e2) * pow(x, 0.50e2) - 0.2912190861195e13 / 0.8e1 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.391204305687195e15 / 0.16e2 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.186543e6 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.182579722741949107520570625e27 / 0.1024e4 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.5681698392006714276932637279375e31 / 0.65536e5 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.26191243807055341422933376726875e32 / 0.65536e5 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.33370470e8 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.14221999455688667322654975e26 / 0.1024e4 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.423037672697929263975e21 / 0.256e3 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.13174183578828246975e20 / 0.256e3 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.1267357727641005e16 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.58435841445947272053455474390625e32 / 0.16777216e8 + 0.5399951469144155898975e22 / 0.128e3 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.7293579450586282768848058125e28 / 0.512e3 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.637e3 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.89382816166934895332232952321875e32 / 0.65536e5 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.3694150630816428934871094375e28 / 0.2048e4 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.54911194809608754141525e23 / 0.64e2 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.2956853577164931965904847004165625e34 / 0.524288e6 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.3238458679752068343610070528371875e34 / 0.524288e6 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.4211276306871266739319024521084375e34 / 0.1048576e7 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.175307524337841816160366423171875e33 / 0.131072e6 * a * a * pow(x, 0.4e1) + 0.2863356230851416330619318245140625e34 / 0.16777216e8 * a * x * x - 0.109513095450553035774253592746875e33 / 0.32768e5 * pow(a, 0.6e1) * pow(x, 0.12e2));
return retval;
}

double HO_deriv_50( const double a, const double x )
{
double retval = -0.2e1 / 0.2782659116473679621593117828125e31 * (0.38673991125e11 / 0.8e1 * pow(a, 0.21e2) * pow(x, 0.42e2) + pow(a, 0.25e2) * pow(x, 0.50e2) - 0.7221286281825e13 / 0.16e2 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.509633400709125e15 / 0.16e2 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.202125e6 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.739928350059477962057049375e27 / 0.2048e4 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.5902019986040674477399002913453125e34 / 0.33554432e8 + 0.15134177359966536745359720609375e32 / 0.65536e5 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.155900260756281794184127242421875e33 / 0.131072e6 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.75480825e8 / 0.2e1 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.26692941921337588818796875e26 / 0.1024e4 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.1300784287707536506875e22 / 0.512e3 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.19105417744188150375e20 / 0.256e3 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.55660981281530625e17 / 0.32e2 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.8834021988692052277125e22 / 0.128e3 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.140661889404164024827783978125e30 / 0.4096e4 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.1325e4 / 0.2e1 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.301407170795478135422646002015625e33 / 0.65536e5 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.8133720731173296707213390625e28 / 0.2048e4 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.383957588228107188920625e24 / 0.256e3 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.13589579571818626711986923099953125e35 / 0.524288e6 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.36373992417505115453591371876640625e35 / 0.1048576e7 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.30400550847474949865904812272265625e35 / 0.1048576e7 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.28341383101284426945925905079453125e35 / 0.2097152e7 * a * a * pow(x, 0.4e1) + 0.48209569192906499444100766372265625e35 / 0.16777216e8 * a * x * x - 0.1703962499143220311872127579453125e34 / 0.131072e6 * pow(a, 0.6e1) * pow(x, 0.12e2)) * pow(a, 0.5e1 / 0.4e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * x * sqrt(0.71661341518e11);
return retval;
}

double HO_deriv_51( const double a, const double x )
{
double retval = -0.4e1 / 0.141915614940157660701249009234375e33 * pow(0.3141592654e1, -0.1e1 / 0.4e1) * (-0.8912454029325e13 / 0.16e2 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.1377e4 / 0.2e1 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.82512074400525e14 / 0.2e1 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.75852171252482625e17 / 0.32e2 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.85153425e8 / 0.2e1 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.8751471672781395191305546875e28 / 0.1024e4 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.446914080834674476661164761609375e33 / 0.131072e6 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.2980227913743310874726229193921875e34 / 0.33554432e8 + 0.1943556584094979700828786288859375e34 / 0.131072e6 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.45586445625e11 / 0.8e1 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.1470247241027274392139331875e28 / 0.2048e4 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.57110085814220450636625e23 / 0.512e3 * pow(a, 0.16e2) * pow(x, 0.32e2) + pow(a, 0.26e2) * pow(x, 0.52e2) - 0.1979454350859294684375e22 / 0.512e3 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.27469978746618783375e20 / 0.256e3 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.661669378069806635153625e24 / 0.256e3 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.39057117957889544227181351259375e32 / 0.65536e5 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.437325e6 / 0.2e1 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.6277036814660819607939860023828125e34 / 0.131072e6 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.330105511497314226616045228125e30 / 0.4096e4 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.49267544231954521076979375e26 / 0.1024e4 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.187502064139268304822061329867328125e36 / 0.1048576e7 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.48960887154354392941930908185859375e35 / 0.262144e6 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.243385279622370388102642050836953125e36 / 0.2097152e7 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.620880815363189765567964415400390625e36 / 0.16777216e8 * a * a * pow(x, 0.4e1) - 0.151991623600908854611037688890015625e36 / 0.33554432e8 * a * x * x + 0.58390391347044868619636120132765625e35 / 0.524288e6 * pow(a, 0.6e1) * pow(x, 0.12e2)) * pow(a, 0.3e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * sqrt(0.1827364208709e13);
return retval;
}

double HO_deriv_52( const double a, const double x )
{
double retval = -0.2e1 / 0.141915614940157660701249009234375e33 * pow(a, 0.5e1 / 0.4e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * x * sqrt(0.281132955186e12) * (-0.5475843848475e13 / 0.8e1 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.715e3 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.1700553728498625e16 / 0.32e2 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.51334297716326625e17 / 0.16e2 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.47918325e8 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.73722397371510473091557926875e29 / 0.4096e4 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.618677876895981435867536530453125e33 / 0.65536e5 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.12025106779667869058069014632140625e35 / 0.262144e6 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.53555631675e11 / 0.8e1 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.1433944840014255271345768125e28 / 0.1024e4 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.182483068813788577960125e24 / 0.1024e4 * pow(a, 0.16e2) * pow(x, 0.32e2) + pow(a, 0.26e2) * pow(x, 0.52e2) - 0.1491458257831125709125e22 / 0.256e3 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.39174198625941253875e20 / 0.256e3 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.562447814837019589603125e24 / 0.128e3 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.97864207128045229866293408484375e32 / 0.65536e5 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.944775e6 / 0.4e1 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.312923930943047641846254065361796875e36 / 0.67108864e8 - 0.11001088224805554957322747271390625e35 / 0.65536e5 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.377713517397245016456747403125e30 / 0.2048e4 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.89504195601064384025510625e26 / 0.1024e4 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.447901449152797594690997567478046875e36 / 0.524288e6 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.2286654766727440351843513897124765625e37 / 0.2097152e7 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.913226982139914546612537374423203125e36 / 0.1048576e7 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.6521732084574945297525898219365703125e37 / 0.16777216e8 * a * a * pow(x, 0.4e1) - 0.1330175058834097753752806963553796875e37 / 0.16777216e8 * a * x * x + 0.236100278055442294853311268362921875e36 / 0.524288e6 * pow(a, 0.6e1) * pow(x, 0.12e2));
return retval;
}

double HO_deriv_53( const double a, const double x )
{
double retval = -0.4e1 / 0.7521527591828356017166197489421875e34 * pow(0.3141592654e1, -0.1e1 / 0.4e1) * pow(a, 0.3e1 / 0.4e1) * (0.2178951260911425e16 / 0.32e2 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.1019031e7 / 0.4e1 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.138066275350478475e18 / 0.32e2 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.55429548780412681875e20 / 0.256e3 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.62716965675e11 / 0.8e1 * pow(a, 0.23e2) * pow(x, 0.46e2) + pow(a, 0.27e2) * pow(x, 0.54e2) - 0.1688333915112986760306666103125e31 / 0.4096e4 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.35805093220359385397621223342890625e35 / 0.262144e6 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.147366225780637049373367350811265625e36 / 0.262144e6 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.837574960950e12 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.152135583559631774005655626875e30 / 0.4096e4 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.7551799327211716356404625e25 / 0.1024e4 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.742e3 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.288355598665462853650125e24 / 0.1024e4 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.1113342079789431867375e22 / 0.128e3 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.160177638361385352191108625e27 / 0.1024e4 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.829170579839901556576491487940625e33 / 0.32768e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.215226375e9 / 0.4e1 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.903419036307383650506295498451671875e36 / 0.524288e6 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.238537463149534843706184682284375e33 / 0.65536e5 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.687152590603576215021028125e27 / 0.256e3 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.12244211194208582667500217713057765625e38 / 0.2097152e7 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.12222482336721078527895070920310546875e38 / 0.2097152e7 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.58179015922792333792780537580678203125e38 / 0.16777216e8 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.8897967141132945168307611629986078125e37 / 0.8388608e7 * a * a * pow(x, 0.4e1) + 0.8371460209704960247105977805726546875e37 / 0.67108864e8 * a * x * x - 0.157952079428395476360490147277859375e36 / 0.67108864e8 - 0.249881861106297605459188116593015625e36 / 0.65536e5 * pow(a, 0.6e1) * pow(x, 0.12e2)) * exp(-a * x * x / 0.2e1) * sqrt(0.7450023312429e13);
return retval;
}

double HO_deriv_54( const double a, const double x )
{
double retval = -0.4e1 / 0.22564582775485068051498592468265625e35 * pow(a, 0.5e1 / 0.4e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * (0.2777817357990675e16 / 0.32e2 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.1097577e7 / 0.4e1 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.369035109007089525e18 / 0.64e2 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.77845014660843304875e20 / 0.256e3 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.17216776657695106923293426053286671875e38 / 0.134217728e9 + 0.73220012775e11 / 0.8e1 * pow(a, 0.23e2) * pow(x, 0.46e2) + pow(a, 0.27e2) * pow(x, 0.54e2) - 0.7380431114636770695054854679375e31 / 0.8192e4 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.102892531043769602247900989185359375e36 / 0.262144e6 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.946385148171814912983440966463140625e36 / 0.524288e6 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.16332711738525e14 / 0.16e2 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.307981791108522859572424805625e30 / 0.4096e4 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.25040176716544112129131125e26 / 0.2048e4 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.1539e4 / 0.2e1 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.450903542314719906286875e24 / 0.1024e4 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.6589781499294204836625e22 / 0.512e3 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.282596280086712122600194125e27 / 0.1024e4 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.8625527720152742166464541322603125e34 / 0.131072e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.482282775e9 / 0.8e1 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.3286907557628991579501628302877359375e37 / 0.524288e6 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.566556623800057985708622668034375e33 / 0.65536e5 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.10364156659655318498282679375e29 / 0.2048e4 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.60721292248830318126582712332102796875e38 / 0.2097152e7 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.148136485921059471758088259554163828125e39 / 0.4194304e7 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.453209645045617591814349229725115078125e39 / 0.16777216e8 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.388088259155567685417724291861700484375e39 / 0.33554432e8 * a * a * pow(x, 0.4e1) + 0.152107852489544843735152011828578578125e39 / 0.67108864e8 * a * x * x - 0.16780528057369062274297786598900203125e38 / 0.1048576e7 * pow(a, 0.6e1) * pow(x, 0.12e2)) * exp(-a * x * x / 0.2e1) * x * sqrt(0.2483341104143e13);
return retval;
}

double HO_deriv_55( const double a, const double x )
{
double retval = -0.4e1 / 0.1241052052651678742832422585754609375e37 * pow(0.3141592654e1, -0.1e1 / 0.4e1) * pow(a, 0.3e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * (-0.490264033705070625e18 / 0.64e2 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.539207955e9 / 0.8e1 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.108544457062302636375e21 / 0.256e3 * pow(a, 0.20e2) * pow(x, 0.40e2) + pow(a, 0.28e2) * pow(x, 0.56e2) - 0.9668497008697697795625e22 / 0.512e3 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.19828676792925e14 / 0.16e2 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.1595e4 / 0.2e1 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.1313282595398601844267113847359375e34 / 0.65536e5 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.2922826293935652986932132494990703125e37 / 0.524288e6 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.5708839442197722217029143894471203125e37 / 0.262144e6 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.3524096648197125e16 / 0.32e2 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.15796126322276889315660390331875e32 / 0.8192e4 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.983721228149947262215865625e27 / 0.2048e4 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.1180575e7 / 0.4e1 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.41032222350639511472105625e26 / 0.2048e4 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.698065484027973780844125e24 / 0.1024e4 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.8687364368561751199826958100282265625e37 / 0.134217728e9 - 0.19235533553516661081174849375e29 / 0.2048e4 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.286063850044766037018889563339515625e36 / 0.262144e6 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.21307411125e11 / 0.2e1 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.66603126825640092532006678768830703125e38 / 0.1048576e7 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.21806109404880527948927211208828125e35 / 0.131072e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.612252958227786407583736059375e30 / 0.4096e4 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.822817510908063006497896174355306015625e39 / 0.4194304e7 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.3146066953472005613080191254887934765625e40 / 0.16777216e8 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.3591356429963427946008464478656688609375e40 / 0.33554432e8 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.2111029541560505541557950818368590546875e40 / 0.67108864e8 * a * a * pow(x, 0.4e1) - 0.477805040270896315990482695515524609375e39 / 0.134217728e9 * a * x * x + 0.281117093744584806141586631167142578125e39 / 0.2097152e7 * pow(a, 0.6e1) * pow(x, 0.12e2)) * sqrt(0.273167521455730e15);
return retval;
}

double HO_deriv_56( const double a, const double x )
{
double retval = -0.2e1 / 0.8687364368561751199826958100282265625e37 * pow(a, 0.5e1 / 0.4e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * x * sqrt(0.1912172650190110e16) * (-0.161901146014232625e18 / 0.16e2 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.150405255e9 / 0.2e1 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.150314952733974653625e21 / 0.256e3 * pow(a, 0.20e2) * pow(x, 0.40e2) + pow(a, 0.28e2) * pow(x, 0.56e2) - 0.3517644441833881734375e22 / 0.128e3 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.5995905490575e13 / 0.4e1 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.826e3 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.2975182025212105269012407006926875e34 / 0.65536e5 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.2176572772079741586013290155844140625e37 / 0.131072e6 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.76005921201024576183584092242077390625e38 / 0.1048576e7 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.2225017883763675e16 / 0.16e2 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.8285823368016042715966561336875e31 / 0.2048e4 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.3380423856733455137432701875e28 / 0.4096e4 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.634095e6 / 0.2e1 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.16623310593336007211776125e26 / 0.512e3 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.535216637113908773648625e24 / 0.512e3 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.981672173647477885580446265331896015625e39 / 0.268435456e9 - 0.8792954362386451682267968125e28 / 0.512e3 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.385564319625554223808068541892390625e36 / 0.131072e6 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.197854531875e12 / 0.16e2 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.62797233864174944387320582839183234375e38 / 0.262144e6 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.13420764918752556814943607285046875e35 / 0.32768e5 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.598178177578871777524339828125e30 / 0.2048e4 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.1057489171773107714233481536025268515625e40 / 0.1048576e7 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.19763753938477983979606329678142154296875e41 / 0.16777216e8 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.7250474302001637551375579230495578890625e40 / 0.8388608e7 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.11931226223782709097842344254927663609375e41 / 0.33554432e8 * a * a * pow(x, 0.4e1) - 0.2250027371457493560755182147973106796875e40 / 0.33554432e8 * a * x * x + 0.611537800853604485975697686877445546875e39 / 0.1048576e7 * pow(a, 0.6e1) * pow(x, 0.12e2));
return retval;
}

double HO_deriv_57( const double a, const double x )
{
double retval = -0.4e1 / 0.495179769008019818390136611716089140625e39 * (0.206793369416798789625e21 / 0.256e3 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.229024230435e12 / 0.16e2 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.10158957148016250448875e23 / 0.256e3 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.855e3 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.813251253796458785933625e24 / 0.512e3 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.2797045165789875e16 / 0.16e2 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.495179769008019818390136611716089140625e39 / 0.268435456e9 + 0.680295e6 / 0.2e1 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.64449167796646893715718202017203125e35 / 0.65536e5 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.243166710096748729989404776210907390625e39 / 0.1048576e7 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.903899578347972684362947783291273828125e39 / 0.1048576e7 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.106344798854419125e18 / 0.8e1 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.6595801118987942968899588567646875e34 / 0.65536e5 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.126809233394898586309334431875e30 / 0.4096e4 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.83742120e8 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.5737146371231724514292101875e28 / 0.4096e4 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.6663352347539749726239375e25 / 0.128e3 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.1149909579016325275852672093125e31 / 0.2048e4 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.783566197948706970964784456103890625e36 / 0.16384e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.28905633932175e14 / 0.16e2 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.2514484281586178558318745651701179921875e40 / 0.1048576e7 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.1009703628814134668212918498269515625e37 / 0.131072e6 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.8530724551307157279000055760625e31 / 0.1024e4 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.113726286948841884956934708490795139296875e42 / 0.16777216e8 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.104284859353088973752962770427408373015625e42 / 0.16777216e8 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.114386526640852578048121557306416591484375e42 / 0.33554432e8 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.8087936227130990367038897991362789296875e40 / 0.8388608e7 * a * a * pow(x, 0.4e1) + 0.28225246833457129648237786867817081015625e41 / 0.268435456e9 * a * x * x - 0.2535920635222889372967669314546032265625e40 / 0.524288e6 * pow(a, 0.6e1) * pow(x, 0.12e2) + pow(a, 0.29e2) * pow(x, 0.58e2)) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * pow(a, 0.3e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * sqrt(0.54496920530418135e17);
return retval;
}

double HO_deriv_58( const double a, const double x )
{
double retval = -0.4e1 / 0.495179769008019818390136611716089140625e39 * pow(a, 0.5e1 / 0.4e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * (0.282699923621330840625e21 / 0.256e3 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.264405276135e12 / 0.16e2 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.29120605021207043969625e23 / 0.512e3 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.1769e4 / 0.2e1 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.1224956359268696304124875e25 / 0.512e3 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.3500982368608725e16 / 0.16e2 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.728973e6 / 0.2e1 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.57936032973938318751645983570782429453125e41 / 0.536870912e9 - 0.302294618343576821480507810157211875e36 / 0.131072e6 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.749872851436912571213298724491423328125e39 / 0.1048576e7 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.6229463211720498805880174252376802453125e40 / 0.2097152e7 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.555881331295815525e18 / 0.32e2 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.14326188603299737855906184551456875e35 / 0.65536e5 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.451060260199747496756867784375e30 / 0.8192e4 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.372296925e9 / 0.4e1 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.9623213460316906554634905375e28 / 0.4096e4 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.84606565753356065442898875e26 / 0.1024e4 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.2176460516022647165023474636875e31 / 0.2048e4 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.34986852616344646179745058333654671875e38 / 0.262144e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.69435982590975e14 / 0.32e2 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.9817992874637797847971363740694672453125e40 / 0.1048576e7 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.2573296482315394089663820964599921875e37 / 0.131072e6 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.69021316824212454348273178426875e32 / 0.4096e4 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.605304748545894286486052144848949086171875e42 / 0.16777216e8 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.1356561483189770559807058919016616737046875e43 / 0.33554432e8 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.956390205862089477238709851868454566203125e42 / 0.33554432e8 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.757261914751664440936756249077024586453125e42 / 0.67108864e8 * a * a * pow(x, 0.4e1) + 0.550474843213915364777035200024385761328125e42 / 0.268435456e9 * a * x * x - 0.45691587776649101424180787353802770703125e41 / 0.2097152e7 * pow(a, 0.6e1) * pow(x, 0.12e2) + pow(a, 0.29e2) * pow(x, 0.58e2)) * exp(-a * x * x / 0.2e1) * x * sqrt(0.1879204156221315e16);
return retval;
}

double HO_deriv_59( const double a, const double x )
{
double retval = -0.4e1 / 0.29215606371473169285018060091249259296875e41 * (-0.41438783026467166465125e23 / 0.512e3 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.83121915391515e14 / 0.32e2 * pow(a, 0.25e2) * pow(x, 0.50e2) + pow(a, 0.30e2) * pow(x, 0.60e2) + 0.914840825276621290422375e24 / 0.256e3 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.390108e6 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.132984589056119767580488875e27 / 0.1024e4 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.722745054329222925e18 / 0.32e2 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.413026845e9 / 0.4e1 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.1598152552174823697791215125383109375e37 / 0.32768e5 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.20620962380711750172600048762818260265625e41 / 0.2097152e7 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.29215606371473169285018060091249259296875e41 / 0.536870912e9 + 0.73110684804341659702854718340901104578125e41 / 0.2097152e7 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.384129229550923481625e21 / 0.256e3 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.693352338020461973503265639012364375e36 / 0.131072e6 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.16235895113778138047129138383125e32 / 0.8192e4 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.304475880555e12 / 0.16e2 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.791930712890490933752369251875e30 / 0.8192e4 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.15961394213296716494233798875e29 / 0.4096e4 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.137267113234669712580273624511875e33 / 0.4096e4 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.2234469607817062712201243673989594765625e40 / 0.1048576e7 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.8727801116109075e16 / 0.32e2 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.194391285683784680480834451775974508828125e42 / 0.2097152e7 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.94795680331632963547931549805619171875e38 / 0.262144e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.30519054842508232763680835849806875e35 / 0.65536e5 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.8077141308166615534997993013227378553609375e43 / 0.33554432e8 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.3558460856045432018915199719114159782359375e43 / 0.16777216e8 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.7512306251651467595487643851463226207203125e43 / 0.67108864e8 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.8190108319469645122900062845580209022890625e43 / 0.268435456e9 * a * a * pow(x, 0.4e1) - 0.1723720775916916987816065545383706298515625e43 / 0.536870912e9 * a * x * x + 0.3003895527830559496486856905745719296796875e43 / 0.16777216e8 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.1829e4 / 0.2e1 * pow(a, 0.29e2) * pow(x, 0.58e2)) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * pow(a, 0.3e1 / 0.4e1) * sqrt(0.221746090434115170e18) * exp(-a * x * x / 0.2e1);
return retval;
}

double HO_deriv_60( const double a, const double x )
{
double retval = -0.4e1 / 0.29215606371473169285018060091249259296875e41 * pow(a, 0.5e1 / 0.4e1) * (-0.29281429866644956625625e23 / 0.256e3 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.49593747838635e14 / 0.16e2 * pow(a, 0.25e2) * pow(x, 0.50e2) + pow(a, 0.30e2) * pow(x, 0.60e2) + 0.5422105379078511550552125e25 / 0.1024e4 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.3535088370948253483487185271041160374921875e43 / 0.1073741824e10 + 0.1668225e7 / 0.4e1 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.103543347951763046052350625e27 / 0.512e3 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.467560774077271875e18 / 0.16e2 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.228700815e9 / 0.2e1 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.31004159512191579737149573432432321875e38 / 0.262144e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.32878624229308208479532585488704037265625e41 / 0.1048576e7 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.521037685822796896072380911253028233984375e42 / 0.4194304e7 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.518911415358265054125e21 / 0.256e3 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.778587140803119237385463779032796875e36 / 0.65536e5 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.59710523352324557280764186615625e32 / 0.16384e5 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.349758641925e12 / 0.16e2 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.686690751044578517306871676875e30 / 0.4096e4 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.26191476990930905444206040625e29 / 0.4096e4 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.134315132304891869298977417533125e33 / 0.2048e4 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.6448040868272095255209303173512830609375e40 / 0.1048576e7 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.21671070798502125e17 / 0.64e2 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.392450331474810581348099742264703253671875e42 / 0.1048576e7 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.124908238946295431116839708483890390625e39 / 0.131072e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.63829207654121416349827235398021875e35 / 0.65536e5 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.22228826905946140274002741102518322796296875e44 / 0.16777216e8 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.95739542079317575747004182919023822715859375e44 / 0.67108864e8 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.32478015749621006521845076801438759918359375e44 / 0.33554432e8 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.99128552418408463384066277889608736794296875e44 / 0.268435456e9 * a * a * pow(x, 0.4e1) - 0.17383285791026535724585745754293309281640625e44 / 0.268435456e9 * a * x * x + 0.13992504809125255774233649689157410399609375e44 / 0.16777216e8 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.945e3 * pow(a, 0.29e2) * pow(x, 0.58e2)) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * x * sqrt(0.7391536347803839e16);
return retval;
}

double HO_deriv_61( const double a, const double x )
{
double retval = -0.4e1 / 0.1782151988659863326386101665566204817109375e43 * pow(0.3141592654e1, -0.1e1 / 0.4e1) * pow(a, 0.3e1 / 0.4e1) * sqrt(0.901767434432068358e18) * (pow(a, 0.31e2) * pow(x, 0.62e2) + 0.7972184334553414102252125e25 / 0.1024e4 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.26800880434092765e17 / 0.64e2 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.976e3 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.319612117412550510826653375e27 / 0.1024e4 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.1782151988659863326386101665566204817109375e43 / 0.1073741824e10 - 0.505677495e9 / 0.4e1 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.42538850865146603702880770625e29 / 0.4096e4 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.697058304425360002125e21 / 0.256e3 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.400823779125e12 / 0.16e2 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.641363853175422668192527122686642578125e39 / 0.262144e6 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.1782555384407515730160854482625439450234375e43 / 0.4194304e7 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.6040800896626289976451591359906226717734375e43 / 0.4194304e7 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.10277141667809794903125e23 / 0.64e2 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.73490430437700738964583723227232521875e38 / 0.262144e6 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.2070814622239157061829289195593125e34 / 0.16384e5 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.29498339722005e14 / 0.8e1 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.108331385725136093678584066265625e33 / 0.16384e5 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.588466786655060261957740606875e30 / 0.2048e4 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.131181604547932688655881493825181875e36 / 0.65536e5 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.50626697114255163736445320956392818546875e41 / 0.524288e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.2408457498469147125e19 / 0.64e2 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.61526675798971471982377319406452309162109375e44 / 0.16777216e8 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.18055675194594498954956023557874361859375e41 / 0.1048576e7 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.214257814687174166077503566260153125e36 / 0.8192e4 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.589179447450950815703245210636187312536359375e45 / 0.67108864e8 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.499596607487648352496903833580392750396328125e45 / 0.67108864e8 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.1016420684199008717148873316594592147358046875e46 / 0.268435456e9 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.133661399149489749478957624917465361283203125e45 / 0.134217728e9 * a * a * pow(x, 0.4e1) + 0.108711271308251662909552201599538493843671875e45 / 0.1073741824e10 * a * x * x - 0.28503630897414420111108619972298269771828125e44 / 0.4194304e7 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.1781505e7 / 0.4e1 * pow(a, 0.29e2) * pow(x, 0.58e2)) * exp(-a * x * x / 0.2e1);
return retval;
}

double HO_deriv_62( const double a, const double x )
{
double retval = -0.4e1 / 0.1782151988659863326386101665566204817109375e43 * (pow(a, 0.31e2) * pow(x, 0.62e2) + 0.11634957624960825005725875e26 / 0.1024e4 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.33021752522133375e17 / 0.64e2 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.2015e4 / 0.2e1 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.978139290803798601658805625e27 / 0.2048e4 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.1116247845e10 / 0.8e1 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.68412212750924502198371758125e29 / 0.4096e4 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.931312486381727575125e21 / 0.256e3 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.458292539145e12 / 0.16e2 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.3212976358867597398577283873811004659375e40 / 0.524288e6 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.5871634766712740493489130406026397871328125e43 / 0.4194304e7 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.222768998582482915798262708195775602138671875e45 / 0.2147483648e10 - 0.44470296796732535578278708507893551370859375e44 / 0.8388608e7 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.114692901012757311118875e24 / 0.512e3 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.170477801219428244809000337554328503125e39 / 0.262144e6 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.7865821549295770499675679513695625e34 / 0.32768e5 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.139947049876095e15 / 0.32e2 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.194033548654354870010975016466875e33 / 0.16384e5 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.3989139715924597697153332516875e31 / 0.8192e4 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.265154307064970328134228551348771875e36 / 0.65536e5 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.603626004054580798396078826787760528828125e42 / 0.2097152e7 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.6175067721638941125e19 / 0.128e3 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.256622171423346466777406492215275631305234375e45 / 0.16777216e8 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.49148994796538989908929738465722794046875e41 / 0.1048576e7 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.7405439640969341579253485330394028125e37 / 0.131072e6 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.3349959697229090363607765830810219727579140625e46 / 0.67108864e8 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.6942670097155940898491456721824078565852421875e46 / 0.134217728e9 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.9078876280896230405719597251616102739960859375e46 / 0.268435456e9 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.6684852109463147337274267347538834268977265625e46 / 0.536870912e9 * a * a * pow(x, 0.4e1) + 0.2265115177586686287836735216934646322546015625e46 / 0.1073741824e10 * a * x * x - 0.1097233176193875974167181272120448780337515625e46 / 0.33554432e8 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.1900455e7 / 0.4e1 * pow(a, 0.29e2) * pow(x, 0.58e2)) * pow(a, 0.5e1 / 0.4e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * x * sqrt(0.29089272078453818e17);
return retval;
}

double HO_deriv_63( const double a, const double x )
{
double retval = -0.8e1 / 0.5346455965979589979158304996698614451328125e43 * pow(0.3141592654e1, -0.1e1 / 0.4e1) * pow(a, 0.3e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * (-0.2079e4 / 0.2e1 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.1484470217808117877811599125e28 / 0.2048e4 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.7881631891982793945e19 / 0.128e3 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.2025261e7 / 0.4e1 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.108987732037679724191888800875e30 / 0.4096e4 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.522840784095e12 / 0.16e2 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.6687883556857619439047721871875e31 / 0.8192e4 * pow(a, 0.19e2) * pow(x, 0.38e2) + pow(a, 0.32e2) * pow(x, 0.64e2) - 0.159018659858267383048875e24 / 0.512e3 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.165508154876295e15 / 0.32e2 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.130268694946166448981920568943129347328125e42 / 0.1048576e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.157073984098550699060892686014119424566796875e45 / 0.8388608e7 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.112275575285571389562324404930670903477890625e45 / 0.2147483648e10 + 0.1019552951330592719358885252855284264915390625e46 / 0.16777216e8 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.16859856448875324734474625e26 / 0.1024e4 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.7862370937579276802459111261656327471875e40 / 0.524288e6 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.527517516160835705445991538999135625e36 / 0.65536e5 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.40540551557942205e17 / 0.64e2 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.14731624040142173592371718557908125e35 / 0.32768e5 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.343290124542320154634801952210625e33 / 0.16384e5 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.15711747197025675226911002896856608125e38 / 0.131072e6 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.18668506052669853419486001533926921082484375e44 / 0.4194304e7 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.1237820393292169561875e22 / 0.256e3 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.4981244419358038714581982235378674551443765625e46 / 0.33554432e8 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.1745027902630515398999573335622798619703125e43 / 0.2097152e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.387449548225973283656818948987110234375e39 / 0.262144e6 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.44112657694236978324261101940205299195339234375e47 / 0.134217728e9 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.72096958701234770868949742880480815876159765625e47 / 0.268435456e9 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.70771037621671832554118483241299559492230390625e47 / 0.536870912e9 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.35965609283144701789797917712791579414084296875e47 / 0.1073741824e10 * a * a * pow(x, 0.4e1) - 0.7073361242990997542426437510632266919107109375e46 / 0.2147483648e10 * a * x * x + 0.17740221353152313316844603399681946209527796875e47 / 0.67108864e8 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.1230048225e10 / 0.8e1 * pow(a, 0.29e2) * pow(x, 0.58e2)) * sqrt(0.2077805148460987e16);
return retval;
}

double HO_deriv_64( const double a, const double x )
{
double retval = -pow(a, 0.5e1 / 0.4e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * exp(-a * x * x / 0.2e1) * x * (-0.1072e4 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.69847976716769202471394875e26 / 0.64e2 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.313046213909824395e18 / 0.4e1 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.539028e6 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.21507556876615289252944796625e29 / 0.512e3 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.14483549211838709253539848236056546548647890625e47 / 0.4294967296e10 + 0.74400345495e11 / 0.2e1 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.346779147392617304246918911875e30 / 0.256e3 * pow(a, 0.19e2) * pow(x, 0.38e2) + pow(a, 0.32e2) * pow(x, 0.64e2) - 0.6849272842883338242375e22 / 0.16e2 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.6099809147775e13 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.42086809136453775824928183812395635290625e41 / 0.131072e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.16684413621951318273453672868485412561640625e44 / 0.262144e6 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.968146920171067036029865828341572453238984375e45 / 0.4194304e7 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.1516495024502013335905125e25 / 0.64e2 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.588107630044056289508560973094118903125e39 / 0.16384e5 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.516860596642434984123850295787031875e36 / 0.32768e5 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.3099923008899255e16 / 0.4e1 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.850762482561402122355813533739375e33 / 0.1024e4 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.37515842047515598567610554119375e32 / 0.1024e4 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.1024004590194563428218689458057145625e37 / 0.4096e4 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.3588830969560871292282141388356321689578125e43 / 0.262144e6 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.409238579006798916375e21 / 0.64e2 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.669991939445818072721553166162043945515828125e45 / 0.1048576e7 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.153173080870767143308412097548514727078125e42 / 0.65536e5 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.53975730166652829861156846686480184375e38 / 0.16384e5 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.8088453413889368906913823005985255168328765625e46 / 0.4194304e7 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.64620237058143757593651251026208731266780234375e47 / 0.33554432e8 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.20386036598280176590530616952411816902914140625e47 / 0.16777216e8 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.29004523615439275636933804607089983398455078125e47 / 0.67108864e8 * a * a * pow(x, 0.4e1) - 0.4752999353755855491471733142065068247230703125e46 / 0.67108864e8 * a * x * x + 0.5505585937185200684537980365418535030543109375e46 / 0.4194304e7 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.169168860e9 * pow(a, 0.29e2) * pow(x, 0.58e2)) * sqrt(0.4155610296921974e16) / 0.5346455965979589979158304996698614451328125e43;
return retval;
}

double HO_deriv_65( const double a, const double x )
{
double retval = -0.2e1 / 0.347519637788673348645289824785409939336328125e45 * pow(0.3141592654e1, -0.1e1 / 0.4e1) * (0.573300e6 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.33659499124718951880611840625e29 / 0.512e3 * pow(a, 0.21e2) * pow(x, 0.42e2) + pow(a, 0.33e2) * pow(x, 0.66e2) + 0.538578179285490919575e21 / 0.64e2 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.185847480e9 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.1139417198575742571097019281875e31 / 0.512e3 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.7297912393562140321551086320493608726062890625e46 / 0.4294967296e10 - 0.14349074852385e14 / 0.2e1 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.64861854813333420273939016884375e32 / 0.1024e4 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.1105e4 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.2168083679531011393276125e25 / 0.64e2 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.3779848401904575e16 / 0.4e1 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.837441610368212886312346514634402947109375e42 / 0.131072e6 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.3527024915667456606185499404135227078908984375e46 / 0.4194304e7 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.10982041790046670148522849723612633367802921875e47 / 0.4194304e7 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.52185269960804576559088125e26 / 0.32e2 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.106219089725335719939104463907474698590625e42 / 0.131072e6 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.16808156152183490614700710801443046875e38 / 0.32768e5 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.99065257566400125e17 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.998302607826655806206466459722071875e36 / 0.32768e5 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.194033548654354870010975016466875e33 / 0.128e3 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.118105310562675994052630327898139809375e39 / 0.16384e5 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.13678212969347477143101659739028581469453125e44 / 0.65536e5 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.37547218596529143376875e23 / 0.64e2 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.25780124626502130189503241393626473555717734375e47 / 0.4194304e7 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.10700642799149386880657761020328482101953125e44 / 0.262144e6 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.689252354212520894084235814513911890625e39 / 0.8192e4 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.423502875926512394807978860031268792516997734375e48 / 0.33554432e8 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.333966371914915088048123521618778951702211328125e48 / 0.33554432e8 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.316729397880596889955317146309422618711129453125e48 / 0.67108864e8 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.2432637464520713440517028773497869575354296875e46 / 0.2097152e7 * a * a * pow(x, 0.4e1) + 0.474364305581539120900820610832084567194087890625e48 / 0.4294967296e10 * a * x * x - 0.22090313945496175586109180478531159073166796875e47 / 0.2097152e7 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.84521885175e11 / 0.2e1 * pow(a, 0.29e2) * pow(x, 0.58e2)) * pow(a, 0.3e1 / 0.4e1) * sqrt(0.135057334649964155e18) * exp(-a * x * x / 0.2e1);
return retval;
}

double HO_deriv_66( const double a, const double x )
{
double retval = -0.2e1 / 0.1042558913366020045935869474356229818008984375e46 * pow(a, 0.5e1 / 0.4e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * (0.609180e6 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.52237455230765381135647213125e29 / 0.512e3 * pow(a, 0.21e2) * pow(x, 0.42e2) + pow(a, 0.33e2) * pow(x, 0.66e2) + 0.705483325233361850175e21 / 0.64e2 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.203873670e9 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.3708241126647883298724021395625e31 / 0.1024e4 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.33666665927895e14 / 0.4e1 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.110933941538352576409601100890625e33 / 0.1024e4 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.970622348343764662766294480625649960566364453125e48 / 0.8589934592e10 - 0.2277e4 / 0.2e1 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.3079944702589576303857375e25 / 0.64e2 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.4593969596160945e16 / 0.4e1 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.4462633292584387780837793204651773927040625e43 / 0.262144e6 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.12359242433017541847159713978479396827755859375e47 / 0.4194304e7 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.86007430733002420777782399153891232115795296875e47 / 0.8388608e7 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.309632601767440487583922875e27 / 0.128e3 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.262096160601090445216616255805236310778125e42 / 0.131072e6 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.67904950854821302083390871637829909375e38 / 0.65536e5 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.999250692358443525e18 / 0.8e1 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.1901722810361332080977566136391841875e37 / 0.32768e5 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.5595508011194503954100279528923125e34 / 0.2048e4 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.253915212272318598219412071173799628125e39 / 0.16384e5 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.346979973895896205895415572563520954418984375e45 / 0.524288e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.102351747486165449146875e24 / 0.128e3 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.114393841139292503112066925370362894523506828125e48 / 0.4194304e7 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.30985339583623876793556821041472909043046875e44 / 0.262144e6 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.6334905589778209278519567897322824140625e40 / 0.32768e5 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.2561845265850542191543347530353084990799543671875e49 / 0.33554432e8 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.4937674853580733828668492927159366221403662109375e49 / 0.67108864e8 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.3010006590742815341956313288396349648567672421875e49 / 0.67108864e8 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.2071147537292935423256198297756086156456648359375e49 / 0.134217728e9 * a * a * pow(x, 0.4e1) + 0.10516291759123044203355115387831290174256625390625e50 / 0.4294967296e10 * a * x * x - 0.452341659407006303155558757183461118867461640625e48 / 0.8388608e7 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.95827606875e11 / 0.2e1 * pow(a, 0.29e2) * pow(x, 0.58e2)) * exp(-a * x * x / 0.2e1) * x * sqrt(0.36833818540899315e17);
return retval;
}

double HO_deriv_67( const double a, const double x )
{
double retval = -0.2e1 / 0.69851447195523343077703254781867397806601953125e47 * (-0.223333110e9 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.5979135334262255252269300243125e31 / 0.1024e4 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.2345e4 / 0.2e1 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.138764886827125957172775e24 / 0.128e3 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.108434260935e12 / 0.2e1 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.46942573156229195491220676376875e32 / 0.256e3 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.2782965306896775e16 / 0.2e1 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.9967473033505999175969190284023125e34 / 0.2048e4 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.1293435e7 / 0.2e1 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.456053880961813908190291875e27 / 0.128e3 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.1255117353410445525e19 / 0.8e1 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.43640012806965760408943390595948331354921875e44 / 0.131072e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.322874998753616874961608569663183324362524984375e48 / 0.8388608e7 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.966099246596545929643926554598442932740540859375e48 / 0.8388608e7 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.80417501009599852477554800625e29 / 0.512e3 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.11605366043171114306554176400241204602078125e44 / 0.262144e6 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.2147185921254266981059300135848344428125e40 / 0.65536e5 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.919939794813104840775e21 / 0.64e2 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.135137575463555264542193714843602096875e39 / 0.65536e5 * pow(a, 0.17e2) * pow(x, 0.34e2) + pow(a, 0.34e2) * pow(x, 0.68e2) + 0.3575068133956488479952214678402171875e37 / 0.32768e5 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.14282698253525346760649514668821173665625e41 / 0.32768e5 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.41763492256266232711358824800322553106660234375e47 / 0.4194304e7 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.8697008604630336153037875e25 / 0.128e3 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.2182668668236640804010352586315000699895296015625e49 / 0.8388608e7 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.1066063169998735004275617113129594951670234375e46 / 0.524288e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.633019965991151689448409621831338432840625e42 / 0.131072e6 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.33347080891142843985295533832863495712871772421875e50 / 0.67108864e8 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.1587956232911563999299787325374452176803417734375e49 / 0.4194304e7 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.23307099547572955473593652678883088401469518359375e50 / 0.134217728e9 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.177492527323824814760443970400725057826575562890625e51 / 0.4294967296e10 * a * a * pow(x, 0.4e1) - 0.32760328734700447903442826492695809571296316015625e50 / 0.8589934592e10 * a * x * x + 0.488960130368663401543922783473071784646213671875e48 / 0.8589934592e10 + 0.14419925791792889246166755611228611181275480234375e50 / 0.33554432e8 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.39395879117595e14 / 0.4e1 * pow(a, 0.29e2) * pow(x, 0.58e2)) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * pow(a, 0.3e1 / 0.4e1) * sqrt(0.4935731684480508210e19) * exp(-a * x * x / 0.2e1);
return retval;
}

double HO_deriv_68( const double a, const double x )
{
double retval = -0.2e1 / 0.69851447195523343077703254781867397806601953125e47 * pow(a, 0.5e1 / 0.4e1) * (-0.244315500e9 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.4777982961322880867102879709375e31 / 0.512e3 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.1207e4 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.93585621348526808325825e23 / 0.64e2 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.122468030685e12 / 0.2e1 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.629335797842454824105877197930625e33 / 0.2048e4 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.66987537860506886011517421335810834496531273046875e50 / 0.17179869184e11 + 0.13446116588059155e17 / 0.8e1 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.8778261180214859556858266482475625e34 / 0.1024e4 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.2743851e7 / 0.4e1 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.333576999455284215588832875e27 / 0.64e2 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.785352809606269905e18 / 0.4e1 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.479042654869607004260458590484667111616028125e45 / 0.524288e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.582672722996045439828130362558982930584645890625e48 / 0.4194304e7 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.7793200589212137165794340873760772990773696265625e49 / 0.16777216e8 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.122840646469736586248322840375e30 / 0.512e3 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.14747020689201274543075913041922662009509375e44 / 0.131072e6 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.8934095266757264711400584481327027515625e40 / 0.131072e6 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.1194351305934354442875e22 / 0.64e2 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.132563526407106592836628120275152533125e39 / 0.32768e5 * pow(a, 0.17e2) * pow(x, 0.34e2) + pow(a, 0.34e2) * pow(x, 0.68e2) + 0.6636099444327881859543732543585436875e37 / 0.32768e5 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.15812676885674136188448854036875054715625e41 / 0.16384e5 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.136399977171943410283896063264107648816333671875e48 / 0.4194304e7 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.24412938810400182930512625e26 / 0.256e3 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.4987934628724388984902346730037886845334496140625e49 / 0.4194304e7 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.1589743323682324129182937800280974927929296875e46 / 0.262144e6 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.1498066407383913257404729283848620837871875e43 / 0.131072e6 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.103890833541092929529946691984346734839956936015625e51 / 0.33554432e8 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.386932002086117761162714844949574847081099454609375e51 / 0.134217728e9 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.114076726796582355691633108826093709604555203046875e51 / 0.67108864e8 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.2432185480479805491959780709551753671187196046640625e52 / 0.4294967296e10 * a * a * pow(x, 0.4e1) - 0.374054499732027502181100929356899915254353458984375e51 / 0.4294967296e10 * a * x * x + 0.76035588852505929647901626982284860447172197265625e50 / 0.33554432e8 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.22993770384585e14 / 0.2e1 * pow(a, 0.29e2) * pow(x, 0.58e2)) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * sqrt(0.145168578955309065e18) * x * exp(-a * x * x / 0.2e1);
return retval;
}

double HO_deriv_69( const double a, const double x )
{
double retval = -0.2e1 / 0.1606583285497036890787174859982950149551844921875e49 * pow(0.3141592654e1, -0.1e1 / 0.4e1) * pow(a, 0.3e1 / 0.4e1) * sqrt(0.2225918210648072330e19) * (0.138065132205e12 / 0.2e1 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.1044567664460156976093260091410625e34 / 0.2048e4 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.2907867e7 / 0.4e1 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.34068393261255086741232225e26 / 0.256e3 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.13388777692290e14 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.30590910173476025728445474105596875e35 / 0.2048e4 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.1958650982993950245e19 / 0.8e1 * pow(a, 0.28e2) * pow(x, 0.56e2) + pow(a, 0.35e2) * pow(x, 0.70e2) + 0.12169064067008763034775609599206436875e38 / 0.32768e5 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.1067658735e10 / 0.4e1 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.186242270454116759795844306375e30 / 0.512e3 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.1544069858260230776475e22 / 0.64e2 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.9220511277357479949261039241629654581989921875e46 / 0.524288e6 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.30120827621665643095342865691147009658555085015625e50 / 0.16777216e8 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.86741399762938764542326176061390568798134042640625e50 / 0.16777216e8 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.946452127266829033005068038125e30 / 0.64e2 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.1282555998367708882066973203795912695701728125e46 / 0.524288e6 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.275317916243092670271777710941104924628125e42 / 0.131072e6 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.62804143769701014605925e23 / 0.32e2 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.33738248995437774706530672059641953140588743359375e50 / 0.17179869184e11 + 0.18303633832230429719659348710483439565625e41 / 0.131072e6 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.1242e4 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.128273444646358806660685462661069926875e39 / 0.16384e5 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.3477163312551651872691711090033954788821875e43 / 0.131072e6 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.1013556753446902571801873823947138375050602515625e49 / 0.2097152e7 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.1939145414415882967543874625e28 / 0.256e3 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.377744805419249458490775282847991186701551476015625e51 / 0.33554432e8 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.431456338047382768660249318996256595440011171875e48 / 0.4194304e7 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.9167066914908900391641783782816789897803125e43 / 0.32768e5 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.2690527177296493269480272991626113471563924114609375e52 / 0.134217728e9 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.1982845090960442930609531212190957074576887002578125e52 / 0.134217728e9 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.28180434777589325286541519349016935393229091036640625e53 / 0.4294967296e10 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.3250117986560505630062454741745508152543382276953125e52 / 0.2147483648e10 * a * a * pow(x, 0.4e1) + 0.2327939180685206454750616372115294766700623291796875e52 / 0.17179869184e11 * a * x * x - 0.18814875365709743143218692249133660640307161640625e50 / 0.1048576e7 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.16193726618824755e17 / 0.8e1 * pow(a, 0.29e2) * pow(x, 0.58e2)) * exp(-a * x * x / 0.2e1);
return retval;
}

double HO_deriv_70( const double a, const double x )
{
double retval = -0.2e1 / 0.11246082998479258235510224019880651046862914453125e50 * pow(a, 0.5e1 / 0.4e1) * (0.155372442225e12 / 0.2e1 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.1717810610989294694904198489196875e34 / 0.2048e4 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.3079125e7 / 0.4e1 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.47280101323354009268333175e26 / 0.256e3 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.62224893045315e14 / 0.4e1 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.105501334110475854585419269232473125e36 / 0.4096e4 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.4867992209195490375e19 / 0.16e2 * pow(a, 0.28e2) * pow(x, 0.56e2) + pow(a, 0.35e2) * pow(x, 0.70e2) + 0.22056046235076214550209186830135346875e38 / 0.32768e5 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.2329830195e10 / 0.8e1 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.280332978388383081177538396875e30 / 0.512e3 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.1988030747738859498675e22 / 0.64e2 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.52079991283832938472033042337204738638963765625e47 / 0.1048576e7 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.111881072399715783887360687489549505245970354609375e51 / 0.16777216e8 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.720101753250203216077185996714580148940866103515625e51 / 0.33554432e8 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.23801518311636181978164488810625e32 / 0.1024e4 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.3354313121137120370578016338712507212605234375e46 / 0.524288e6 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.1178830359671603296393750804983518841140625e43 / 0.262144e6 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.335565879661438525724625e24 / 0.128e3 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.36952619246201056226482081358900528934375e41 / 0.131072e6 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.2555e4 / 0.2e1 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.980051786019477368977170634676573765625e39 / 0.65536e5 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.4757093108356726233620824760409515392823012813671875e52 / 0.34359738368e11 + 0.7923037811884555733376714125971797275409375e43 / 0.131072e6 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.13626707463008356798669636966400415931235878265625e50 / 0.8388608e7 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.5600637377039661987005600625e28 / 0.512e3 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.1776799640305358564012165219322032618929519905703125e52 / 0.33554432e8 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.1324256188627375999609387187634052114965104296875e49 / 0.4194304e7 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.178599751962880300733710615079016768698578125e45 / 0.262144e6 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.17253240710355834462331540792455566807161667224453125e53 / 0.134217728e9 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.31077925583908625730597197955383519131836393929296875e53 / 0.268435456e9 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.283907365296608874155455605381887035678054275369140625e54 / 0.4294967296e10 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.183344891124207347013523182196114254017006094329296875e54 / 0.8589934592e10 * a * a * pow(x, 0.4e1) + 0.54712193787601591315757239856719367342988078814453125e53 / 0.17179869184e11 * a * x * x - 0.6534550944321499253202491961910652137768218062109375e52 / 0.67108864e8 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.19447199598051225e17 / 0.8e1 * pow(a, 0.29e2) * pow(x, 0.58e2)) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * sqrt(0.3116285494907301262e19) * x * exp(-a * x * x / 0.2e1);
return retval;
}

double HO_deriv_71( const double a, const double x )
{
double retval = -0.4e1 / 0.798471892892027334721225905411526224327266926171875e51 * pow(0.3141592654e1, -0.1e1 / 0.4e1) * pow(a, 0.3e1 / 0.4e1) * sqrt(0.110628135069209194801e21) * (0.2395415678676082004163677716234578672981800778515625e52 / 0.34359738368e11 - 0.72137261511315e14 / 0.4e1 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.180113310143344210020652132904660625e36 / 0.4096e4 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.2538882255e10 / 0.8e1 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.8038420183733914860489328725e28 / 0.512e3 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.23289778795738455e17 / 0.8e1 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.39529574126165720446297241639252281875e38 / 0.32768e5 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.2549510696197125235575e22 / 0.64e2 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.2627e4 / 0.2e1 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.1848588907664808691459194535482680240625e40 / 0.65536e5 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.698192620125e12 / 0.8e1 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.37115859348356018423143996670625e32 / 0.1024e4 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.446164371834496916225625e24 / 0.128e3 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.3950512159350575461019600433698222695904302734375e49 / 0.4194304e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.2863124570922807987122891522937170672188883627578125e52 / 0.33554432e8 * pow(a, 0.9e1) * pow(x, 0.18e2) + pow(a, 0.36e2) * pow(x, 0.72e2) + 0.993328932769137464920186854896569416881857585078125e51 / 0.4194304e7 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.2799920876497702555973326279453125e34 / 0.2048e4 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.143433979939497816738557800361966239420525453125e48 / 0.1048576e7 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.35475223355915533328722765050522371584490625e44 / 0.262144e6 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.65264924311950208905484425e26 / 0.256e3 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.2484259338649547151871342090372715096953125e43 / 0.262144e6 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.3257835e7 / 0.4e1 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.73559886910661915665800778779867408065625e41 / 0.131072e6 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.426426664421107125114647114586891364556428125e45 / 0.262144e6 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.400406894880934049326960769373168229343708537390625e51 / 0.16777216e8 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.209512015427107355406370801875e30 / 0.256e3 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.33396403774134794079213178742212247636545211912109375e53 / 0.67108864e8 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.44340548476550858974483995267828851538829893890625e50 / 0.8388608e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.8579541262635193593813833094918077454353015625e46 / 0.524288e6 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.222312318800982455038271985975578045879918384844609375e54 / 0.268435456e9 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.2538342147503754897078777153303241867136381558300390625e55 / 0.4294967296e10 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.2185417570845478815131995303111347275983729576932421875e55 / 0.8589934592e10 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.978128068792733485033501734129119624800901984560546875e54 / 0.17179869184e11 * a * a * pow(x, 0.4e1) - 0.170074513186001822295621117852655085781707855274609375e54 / 0.34359738368e11 * a * x * x + 0.102860923624335165763976590526013722720559252689296875e54 / 0.134217728e9 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.6029200898447802075e19 / 0.16e2 * pow(a, 0.29e2) * pow(x, 0.58e2)) * exp(-a * x * x / 0.2e1);
return retval;
}

double HO_deriv_72( const double a, const double x )
{
double retval = -0.2e1 / 0.2395415678676082004163677716234578672981800778515625e52 * pow(a, 0.5e1 / 0.4e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * sqrt(0.110628135069209194801e21) * x * (0.347335273408031890603733268854013907582361112884765625e54 / 0.68719476736e11 - 0.20861995489335e14 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.76135448473725527902026688190889375e35 / 0.1024e4 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.690832485e9 / 0.2e1 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.2867271279554650482152013375e28 / 0.128e3 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.13908415908462075e17 / 0.4e1 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.70085267446954232310977285833195884375e38 / 0.32768e5 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.3257030410931255683725e22 / 0.64e2 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.1350e4 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.861243888766913773524530400420813290625e39 / 0.16384e5 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.1566099754065e13 / 0.16e2 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.14359631211196357974390491113125e32 / 0.256e3 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.147639846679778979551025e24 / 0.32e2 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.11472287310754071138800919659459638708906095140625e50 / 0.4194304e7 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.2733961056445087326049678371526471243368332486484375e52 / 0.8388608e7 * pow(a, 0.9e1) * pow(x, 0.18e2) + pow(a, 0.36e2) * pow(x, 0.72e2) + 0.67838522996762858633666878737348064294108038604453125e53 / 0.67108864e8 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.2262336068210143665226447633798125e34 / 0.1024e4 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.96433014761583277920273323407197641192330671875e47 / 0.262144e6 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.156183126203316438940740485092559532040809375e45 / 0.524288e6 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.44812749507056870265701775e26 / 0.128e3 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.1289233807434232521932192596510307730834375e43 / 0.65536e5 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.1722105e7 / 0.2e1 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.72234483542902241509660224207257184496875e41 / 0.65536e5 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.249774531791650183641007223314902412176515625e45 / 0.65536e5 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.691947398987789255749356168271604082967238255859375e51 / 0.8388608e7 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.1244244826312004906597018435625e31 / 0.1024e4 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.40383959025338381763479320755967425603576210096796875e53 / 0.16777216e8 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.34985735683208696282789581440831460194928505015625e50 / 0.2097152e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.10742279369268559874299603149760684375069828125e47 / 0.262144e6 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.366498598837440546637042690583890536966215519112890625e54 / 0.67108864e8 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.20456051424000848288223086470737890341040251381597265625e56 / 0.4294967296e10 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.5660367248711581775838770443462309404255995239632421875e55 / 0.2147483648e10 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.7092825824559878814328649717770587450699112105184765625e55 / 0.8589934592e10 * a * a * pow(x, 0.4e1) - 0.1027633326152039179786217740264634250709192533983203125e55 / 0.8589934592e10 * a * x * x + 0.287003556126641476502284333006150177381140851909296875e54 / 0.67108864e8 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.1860805795618694925e19 / 0.4e1 * pow(a, 0.29e2) * pow(x, 0.58e2)) * exp(-a * x * x / 0.2e1);
return retval;
}

double HO_deriv_73( const double a, const double x )
{
double retval = -0.2e1 / 0.174865344543353986303948473285124243127671456831640625e54 * (0.16568697357367155e17 / 0.4e1 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.122975011225517426218218194507317404375e39 / 0.32768e5 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.1753586443665e13 / 0.16e2 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.1835325255141460433359808224425e31 / 0.1024e4 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.1145001573855794655e19 / 0.2e1 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.3172919074316985135732428820989575693125e40 / 0.32768e5 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.174865344543353986303948473285124243127671456831640625e54 / 0.68719476736e11 - 0.389148041719543024593675e24 / 0.64e2 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.1819233e7 / 0.2e1 * pow(a, 0.35e2) * pow(x, 0.70e2) + pow(a, 0.37e2) * pow(x, 0.74e2) + 0.140039329514607677286955963395527569171875e42 / 0.65536e5 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.385318543194585e15 / 0.16e2 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.3625775799374242301178676082923125e34 / 0.1024e4 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.61231598390566356782804775e26 / 0.128e3 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.214560216398648454438896538755017871059954490109375e51 / 0.4194304e7 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.277255634469973957120369801557895404888494955364453125e54 / 0.67108864e8 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.1387e4 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.742633261771298944032226593138362811290191527657890625e54 / 0.67108864e8 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.63770997883111673414848479340824375e35 / 0.512e3 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.32476856576470361590006672119245881227437280140625e50 / 0.4194304e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.4598023337416725554504454710936073100675509375e46 / 0.524288e6 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.508447295726695105741935975e27 / 0.16e2 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.338301919902134150147017781608610209693809375e45 / 0.524288e6 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.375508350e9 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.659457933532425243951301718535302553009375e42 / 0.16384e5 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.26362961392273326141657202715680494360926353125e47 / 0.262144e6 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.314297885229120275278152001766035276796674443328125e51 / 0.262144e6 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.88236791112570213142298472328125e32 / 0.1024e4 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.1507770561778091795459369143644554798680085828881171875e55 / 0.67108864e8 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.2314375336687158390684573831186259765502784537234375e52 / 0.8388608e7 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.126763686871469014793156409520866046945500703125e48 / 0.131072e6 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.150419169376193099018656476719863873938422987166577265625e57 / 0.4294967296e10 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.104044880003295621850849341604648924660964516814826171875e57 / 0.4294967296e10 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.86908076238046931193062391222706748834452714045325390625e56 / 0.8589934592e10 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.4721364302670557630206608778698354564447129334454296875e55 / 0.2147483648e10 * a * a * pow(x, 0.4e1) + 0.12765170151664841000188238549814069748320016348709765625e56 / 0.68719476736e11 * a * x * x - 0.1123024101622873378707580195097797916975490022763203125e55 / 0.33554432e8 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.4145426152618820194125e22 / 0.64e2 * pow(a, 0.29e2) * pow(x, 0.58e2)) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * pow(a, 0.3e1 / 0.4e1) * sqrt(0.16151707720104542440946e23) * exp(-a * x * x / 0.2e1);
return retval;
}

double HO_deriv_74( const double a, const double x )
{
double retval = -0.2e1 / 0.174865344543353986303948473285124243127671456831640625e54 * pow(a, 0.5e1 / 0.4e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * sqrt(0.436532641083906552458e21) * x * (0.19687942707037605e17 / 0.4e1 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.213627937447048481964864340524120054375e39 / 0.32768e5 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.1960416442845e13 / 0.16e2 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.2690194641689943804480583243725e31 / 0.1024e4 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.5619210406418974365e19 / 0.8e1 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.11559514567949775115093844114770513794375e41 / 0.65536e5 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.1021402297144887526793925e25 / 0.128e3 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.1920411e7 / 0.2e1 * pow(a, 0.35e2) * pow(x, 0.70e2) + pow(a, 0.37e2) * pow(x, 0.74e2) + 0.268131247699997077210968830613254884190625e42 / 0.65536e5 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.887785214906205e15 / 0.32e2 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.5764635615942944267747991052156875e34 / 0.1024e4 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.83260761447907444522846725e26 / 0.128e3 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.26054936336959743959288322519483512226023047067914453125e56 / 0.137438953472e12 - 0.1280440001088708518425672892570267940196502602265625e52 / 0.8388608e7 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.1088144178361104267338001966114266419023915019151015625e55 / 0.67108864e8 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.2849e4 / 0.2e1 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.6514257185697971664140083894534551505096314630311015625e55 / 0.134217728e9 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.423504832095536497806301439724961875e36 / 0.2048e4 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.89740239392541964539235194180138436834284797765625e50 / 0.4194304e7 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.20799209015336473276332063159500794621550971875e47 / 0.1048576e7 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.11476838643793136695017661725e29 / 0.256e3 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.721541187560692134774717123180268893356971875e45 / 0.524288e6 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.1631012355e10 / 0.4e1 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.10645535212737721795213870599212741212865625e44 / 0.131072e6 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.63464253149360008202141423486681911793963221875e47 / 0.262144e6 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.71435419342790051138219976401394589340501291333578125e53 / 0.16777216e8 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.269176235418510111438995421298125e33 / 0.2048e4 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.7493844732419471162507013803487115641201023597275078125e55 / 0.67108864e8 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.7505348314073814546464328801065724387921038330203125e52 / 0.8388608e7 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.1304646037065670756848186771091763890057486546875e49 / 0.524288e6 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.1019243462584665491769367931186113180059696209483144765625e58 / 0.4294967296e10 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.1723181393578391299034542905242709333194450426104597265625e58 / 0.8589934592e10 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.925212537978885941534191372151592370388509678096210546875e57 / 0.8589934592e10 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.562891544085056481912410135504814938627974419541051171875e57 / 0.17179869184e11 * a * a * pow(x, 0.4e1) + 0.317030869657100777169058582065930252790468351235764453125e57 / 0.68719476736e11 * a * x * x - 0.25758412539033236003025900492989763082121081110346953125e56 / 0.134217728e9 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.5257118589780628095525e22 / 0.64e2 * pow(a, 0.29e2) * pow(x, 0.58e2)) * exp(-a * x * x / 0.2e1);
return retval;
}

double HO_deriv_75( const double a, const double x )
{
double retval = -0.4e1 / 0.2622980168150309794559227099276863646915071852474609375e55 * pow(0.3141592654e1, -0.1e1 / 0.4e1) * (-0.6873807583060543125e19 / 0.8e1 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.20831366357707655023924031006303350546875e41 / 0.65536e5 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.1020715621416225e16 / 0.32e2 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.407762019990416307427389103550625e33 / 0.2048e4 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.6643611404667826714125e22 / 0.64e2 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.253637666743240478442808353282808674234375e42 / 0.32768e5 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.28170934324479962432542125e26 / 0.32e2 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.1769087475e10 / 0.4e1 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.2925e4 / 0.2e1 * pow(a, 0.37e2) * pow(x, 0.74e2) - 0.21196862149256525698434698095777582061015625e44 / 0.131072e6 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.13114900840751548972796135496384318234575359262373046875e56 / 0.137438953472e12 + 0.186696008428804875e18 / 0.32e2 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.697073170840479328687390568491396875e36 / 0.2048e4 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.16104384122161045190603248125e29 / 0.256e3 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.1477430770486971367414237952965693777149810694921875e52 / 0.524288e6 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.27346819012641860996076793291592415466256458661080078125e56 / 0.134217728e9 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.1012875e7 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.70775200250628338757010685921822758833565222863153515625e56 / 0.134217728e9 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.367541693568626317739040178047020484375e39 / 0.32768e5 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.3723125541627167845883879641473548318417522951203125e52 / 0.8388608e7 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.599977183134705959894194129600984460237047265625e48 / 0.1048576e7 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.3919281237893274773427423140625e31 / 0.1024e4 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.46272750071826995599682945943082461639197109375e47 / 0.1048576e7 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.2188274909625e13 / 0.16e2 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.1516282205743483471628028737117956370097984375e46 / 0.524288e6 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.3288570589297765130898322026305685838574656171875e49 / 0.524288e6 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.4111689834265241315513824223103525781807923163967578125e55 / 0.67108864e8 * pow(a, 0.10e2) * pow(x, 0.20e2) + pow(a, 0.38e2) * pow(x, 0.76e2) + 0.18189384225062688223476670795640625e35 / 0.2048e4 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.138998732940038578014242997967906177215825437691392578125e57 / 0.134217728e9 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.245417666875335799364920637742634688537662998767578125e54 / 0.16777216e8 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.242329914735958266612917336200722259744148844140625e51 / 0.4194304e7 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.13015519036602742790580058114067272623064465984407064453125e59 / 0.8589934592e10 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.4367261979970265807941113120295977972113594634370224609375e58 / 0.4294967296e10 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.7084669434173986755104472395146808710317609073533919921875e58 / 0.17179869184e11 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.5984766416996290181252636498183377221044555610062900390625e58 / 0.68719476736e11 * a * a * pow(x, 0.4e1) - 0.983617563056366172959710162228823867593151944677978515625e57 / 0.137438953472e12 * a * x * x + 0.6416100933536563347469042732286683687426145203580947265625e58 / 0.4294967296e10 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.1334980755445208947700625e25 / 0.128e3 * pow(a, 0.29e2) * pow(x, 0.58e2)) * pow(a, 0.3e1 / 0.4e1) * sqrt(0.654798961625859828687e21) * exp(-a * x * x / 0.2e1);
return retval;
}

double HO_deriv_76( const double a, const double x )
{
double retval = -0.2e1 / 0.2622980168150309794559227099276863646915071852474609375e55 * pow(a, 0.5e1 / 0.4e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * (0.2006579828634986992837808730946800689890029967143076171875e58 / 0.274877906944e12 - 0.4192174007446800375e19 / 0.4e1 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.18576470041609067418797370567566074546875e41 / 0.32768e5 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.585644887955925e15 / 0.16e2 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.306801335302285549263898683448125e33 / 0.1024e4 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.8367256843940163794625e22 / 0.64e2 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.1897421848424171802148813709052927608296875e43 / 0.131072e6 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.303620069941617372884065125e27 / 0.256e3 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.958382325e9 / 0.2e1 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.1501e4 * pow(a, 0.37e2) * pow(x, 0.74e2) - 0.20834522625337610729230686162516426812109375e44 / 0.65536e5 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.441542587766586075e18 / 0.64e2 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.568907971223883771666585718885190625e36 / 0.1024e4 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.11240202795467505010584307875e29 / 0.128e3 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.144847312738542672861291888908756617911767440530140625e54 / 0.16777216e8 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.55101799503084346783139807378581732655889879391728515625e56 / 0.67108864e8 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.4270725e7 / 0.4e1 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.637466596029015798562279638250881111570139360251863671875e57 / 0.268435456e9 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.626484648049897204969178772621711459375e39 / 0.32768e5 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.5281541406200091717882305452601806050759249195328125e52 / 0.4194304e7 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.2786560695003412124841923846369016715323175078125e49 / 0.2097152e7 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.5676302411711090030345075476875e31 / 0.1024e4 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.50664739909152947724398615388527576642239546875e47 / 0.524288e6 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.2438967549375e13 / 0.16e2 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.3141374970519817108508022257794237661442515625e46 / 0.524288e6 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.4064193266625529937022410669210146908910085390625e49 / 0.262144e6 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.14993131617876283988893843884246189972047073355477734375e56 / 0.67108864e8 * pow(a, 0.10e2) * pow(x, 0.20e2) + pow(a, 0.38e2) * pow(x, 0.76e2) + 0.56966752792778748831767595348984375e35 / 0.4096e4 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.354681791009315830469193968727768322731396116853108984375e57 / 0.67108864e8 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.408591687526896859277115362770179090147319868851171875e54 / 0.8388608e7 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.640193045047720670974058591186557693984820361328125e51 / 0.4194304e7 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.45279340873815175623567244424994596308407367579556970703125e59 / 0.4294967296e10 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.148540824133556571615774896869326164360159916267777392578125e60 / 0.17179869184e11 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.38723056222403023497077869666624338019407205758082658203125e59 / 0.8589934592e10 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.91583101224413500016898453655984545474471010443719302734375e59 / 0.68719476736e11 * a * a * pow(x, 0.4e1) - 0.12542216837372064667650704246375536338332235241249423828125e59 / 0.68719476736e11 * a * x * x + 0.37777438243833963094218825230320935381570643956908478515625e59 / 0.4294967296e10 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.868965114885900523115625e24 / 0.64e2 * pow(a, 0.29e2) * pow(x, 0.58e2)) * sqrt(0.68926206486932613546e20) * x * exp(-a * x * x / 0.2e1);
return retval;
}

double HO_deriv_77( const double a, const double x )
{
double retval = -0.4e1 / 0.28852781849653407740151498092045500116065790377220703125e56 * pow(0.3141592654e1, -0.1e1 / 0.4e1) * pow(a, 0.3e1 / 0.4e1) * sqrt(0.54156305096875624929e20) * (-0.1009847364737869270905302433221592504062302663202724609375e58 / 0.274877906944e12 + 0.10503330738196133462625e23 / 0.64e2 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.3509390852395149616363735090195237788796875e43 / 0.131072e6 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.520921030511140875e18 / 0.64e2 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.88564311675173361517121354902554375e35 / 0.4096e4 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.140863818623609137431375e24 / 0.8e1 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.80910415691093712623255864697215967080765625e44 / 0.131072e6 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.31222785542965291696067521875e29 / 0.256e3 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.2714427413775e13 / 0.16e2 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.4498725e7 / 0.4e1 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.6419822982938159749865922229941170353546265625e46 / 0.524288e6 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.81586155683387730375e20 / 0.64e2 * pow(a, 0.32e2) * pow(x, 0.64e2) + pow(a, 0.39e2) * pow(x, 0.78e2) + 0.1058301748899606965713790228182268859375e40 / 0.32768e5 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.8174125255148313366030477226875e31 / 0.1024e4 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.2641810376605203357310814597452989995074655945930859375e55 / 0.16777216e8 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.2746845113302644718379068708862069217982279335781144921875e58 / 0.268435456e9 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.2074570575e10 / 0.4e1 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.6876744077482778151902717595117522516266996654094451171875e58 / 0.268435456e9 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.8200423712061660392081722142439077953125e40 / 0.8192e4 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.432296243444487822105406025037761999194034609334140625e54 / 0.16777216e8 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.78871783149879186664004018434183907898929868515625e50 / 0.2097152e7 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.229356338041514439740972802189375e33 / 0.512e3 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.6362895276825973140681826109088610360657731328125e49 / 0.2097152e7 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.335389601148525e15 / 0.8e1 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.54638445000066904408665173458216014025944609375e47 / 0.262144e6 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.1656307446147462919944084387117862065877527238828125e52 / 0.4194304e7 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.106856674888203570280192604234908871180088669812996484375e57 / 0.33554432e8 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.1540e4 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.3684609570636929474438728067172309375e37 / 0.4096e4 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.209249498357690249479325549680004613709267183903159728515625e60 / 0.4294967296e10 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.52870516757774264592415133697078669901429153411421484375e56 / 0.67108864e8 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.457456342269299282651223306918266665813793237390625e51 / 0.131072e6 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.1151652375799615846968649234899975682577184674953347205078125e61 / 0.17179869184e11 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.750489708691334788729080616872195503518987273501887708984375e60 / 0.17179869184e11 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.1183204495684536829077379350924632550592997953719192333984375e61 / 0.68719476736e11 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.121518299556790268932271392797664964655497087138727861328125e60 / 0.34359738368e11 * a * a * pow(x, 0.4e1) + 0.77758247084815933859708287358062622812797305066609794921875e59 / 0.274877906944e12 * a * x * x - 0.73143550642316822161147087148068194036658055320822798828125e59 / 0.1073741824e10 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.407237299640854016314105125e27 / 0.256e3 * pow(a, 0.29e2) * pow(x, 0.58e2)) * exp(-a * x * x / 0.2e1);
return retval;
}

double HO_deriv_78( const double a, const double x )
{
double retval = -0.4e1 / 0.28852781849653407740151498092045500116065790377220703125e56 * pow(a, 0.5e1 / 0.4e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * (-0.158546036263845475532132482015790023137781518122827763671875e60 / 0.549755813888e12 + 0.13142465513345719175625e23 / 0.64e2 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.6421712759278762149894472411067173187578125e43 / 0.131072e6 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.613183660790726025e18 / 0.64e2 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.136729142663891393862725643362323125e36 / 0.4096e4 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.2911955332530674136081375e25 / 0.128e3 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.310508180654718764255606821373756482581609375e45 / 0.262144e6 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.86306352458765111572498223625e29 / 0.512e3 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.3016721983275e13 / 0.16e2 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.4735731e7 / 0.4e1 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.12948456524909169664983809243440665628339078125e47 / 0.524288e6 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.197935108136218928475e21 / 0.128e3 * pow(a, 0.32e2) * pow(x, 0.64e2) + pow(a, 0.39e2) * pow(x, 0.78e2) + 0.1772297203476363077205028200309880809375e40 / 0.32768e5 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.11706046755768547162689635301375e32 / 0.1024e4 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.16609782331455987653783267050895344369033018656416203125e56 / 0.33554432e8 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.11358235971940226558606355050145901777789425079534391015625e59 / 0.268435456e9 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.4486106625e10 / 0.8e1 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.63554984339626549676156376563951691288995318656916616796875e59 / 0.536870912e9 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.114727832695415039199695712640409576315625e42 / 0.65536e5 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.1258462397582842326573515317332151597653745196061609375e55 / 0.16777216e8 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.375855271608661813281544076115979033242700986328125e51 / 0.4194304e7 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.1363155594020321670158611937540625e34 / 0.2048e4 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.14296397490835687660820009295221575597224888609375e50 / 0.2097152e7 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.1533777741220725e16 / 0.32e2 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.464574453973541841269353069458236703042220921875e48 / 0.1048576e7 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.4200558515498404425234536594672181675520426223203125e52 / 0.4194304e7 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.1599258302318408056042210320524140332535612780982745703125e58 / 0.134217728e9 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.3159e4 / 0.2e1 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.11839210343747231440543486782728259375e38 / 0.8192e4 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.1095760049146327250090327315084869230663458295425278691015625e61 / 0.4294967296e10 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.180638073153589554236901803319350549663221604614623046875e57 / 0.67108864e8 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.79360788205408437621320843348475848127903233700421875e53 / 0.8388608e7 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.8222195604556908655879534325879901106120796689299551091796875e61 / 0.17179869184e11 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.13096383475091130502416478872805790002849354493451860291015625e62 / 0.34359738368e11 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.13272173857307118831307975233514592553223171332290140294921875e62 / 0.68719476736e11 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.7632628352161763523356456850775440464203695989018833142578125e61 / 0.137438953472e12 * a * a * pow(x, 0.4e1) + 0.2034842439946806580874184402941508895685539866353490087890625e61 / 0.274877906944e12 * a * x * x - 0.3535271614378646404455442545489962711771806007173101943359375e61 / 0.8589934592e10 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.543875203705754879622538875e27 / 0.256e3 * pow(a, 0.29e2) * pow(x, 0.58e2)) * sqrt(0.1388623207612195511e19) * x * exp(-a * x * x / 0.2e1);
return retval;
}

double HO_deriv_79( const double a, const double x )
{
double retval = -0.4e1 / 0.2279369766122619211471968349271594509169197439800435546875e58 * (pow(a, 0.40e2) * pow(x, 0.80e2) - 0.3748646189632936342125375e25 / 0.128e3 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.589042991465870639070160111690304829187171875e45 / 0.262144e6 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.239469878302307227575e21 / 0.128e3 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.18877566584800631416206036723285976875e38 / 0.8192e4 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.723335708632232920710110625e27 / 0.256e3 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.25788102490785489164715653703323006335431609375e47 / 0.524288e6 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.16674216391365184377367899382125e32 / 0.1024e4 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.1750426924571325e16 / 0.32e2 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.4845565725e10 / 0.8e1 * pow(a, 0.37e2) * pow(x, 0.74e2) - 0.973807870247280614648548256511197334476060296875e48 / 0.1048576e7 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.32786992912241425732875e23 / 0.128e3 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.3239e4 / 0.2e1 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.79777941814291672401518892224505807820921910393015244140625e59 / 0.549755813888e12 - 0.198776233408023825131292725671321401365625e42 / 0.65536e5 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.2013238967253293415504094596995625e34 / 0.2048e4 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.599004770975977213185578078661451328883226209870219140625e57 / 0.67108864e8 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.280914032435748870869630509178254559842375683488294171484375e60 / 0.536870912e9 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.3348060540825e13 / 0.16e2 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.5448149614986284439260298748428965195816215720611001044140625e61 / 0.4294967296e10 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.11630153305539639593208091931822050413234375e44 / 0.131072e6 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.50847644812259423164531424233886094705200559715680140625e56 / 0.33554432e8 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.2612945848223416925933294417158286239103257256953125e52 / 0.1048576e7 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.209664458161092985700354994458544375e36 / 0.4096e4 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.880297264374734044565762290272577716917140145390625e51 / 0.4194304e7 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.720203433520846275e18 / 0.64e2 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.31627712244856909739248602316167695246254518703125e50 / 0.2097152e7 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.210603435366807404230223530022957870871722534910421875e54 / 0.8388608e7 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.45187802104193850984959095990868227936097496899154807421875e59 / 0.268435456e9 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.4981977e7 / 0.4e1 * pow(a, 0.38e2) * pow(x, 0.76e2) + 0.2943184244812098443526668452766859121875e40 / 0.32768e5 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.20086612216868624447777869122995679762352714525485003849609375e62 / 0.8589934592e10 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.5784709360277134912731312844842129364732332627164530078125e58 / 0.134217728e9 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.3577766052888189689615217483407763593329676909632078125e55 / 0.16777216e8 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.104155801462973084868211593719965511096486477011680902314453125e63 / 0.34359738368e11 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.131930681853099240833068018711956314055549537548129142931640625e63 / 0.68719476736e11 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.101153111691067554493632520747858397263074254250983795220703125e63 / 0.137438953472e12 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.40447416499845877907570078357824444565207408569258728779296875e62 / 0.274877906944e12 * a * a * pow(x, 0.4e1) - 0.6302457403329042119719992485735958817852830921048204287109375e61 / 0.549755813888e12 * a * x * x + 0.54497681977596018143165258128224378533313126355606775150390625e62 / 0.17179869184e11 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.118719117124057574095457611125e30 / 0.512e3 * pow(a, 0.29e2) * pow(x, 0.58e2)) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * pow(a, 0.3e1 / 0.4e1) * sqrt(0.219402466802726890738e21) * exp(-a * x * x / 0.2e1);
return retval;
}

double HO_deriv_80( const double a, const double x )
{
double retval = -0.2e1 / 0.11396848830613096057359841746357972545845987199002177734375e59 * pow(a, 0.5e1 / 0.4e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * sqrt(0.548506167006817226845e21) * x * exp(-a * x * x / 0.2e1) * (pow(a, 0.40e2) * pow(x, 0.80e2) - 0.601094870057759471769375e24 / 0.16e2 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.138147646796292089178851110152042322966640625e45 / 0.32768e5 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.36122004507334370625e20 / 0.16e2 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.3735133495388360226735953790168883125e37 / 0.1024e4 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.239530841219198442595807125e27 / 0.64e2 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.25368783751097920235208082098390924931603453125e47 / 0.262144e6 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.11813716066756709579106811303125e32 / 0.512e3 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.249278325721425e15 / 0.4e1 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.653587935e9 * pow(a, 0.37e2) * pow(x, 0.74e2) - 0.251741000505286918036509952818153157083975234375e48 / 0.131072e6 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.81547136217626110156125e23 / 0.256e3 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.1660e4 * pow(a, 0.39e2) * pow(x, 0.78e2) - 0.42663805229419074076331958664057411640625e41 / 0.8192e4 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.369496688672559854989602267373125e33 / 0.256e3 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.965454748514222096546167020901398024200023420614353203125e57 / 0.33554432e8 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.148890684352528126517261537481432179605113872271408697265625e60 / 0.67108864e8 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.1855400922375e13 / 0.8e1 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.25816395234412132146821677075888887365795793447339710830078125e62 / 0.4294967296e10 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.5213516999035010852127765348747815702484375e43 / 0.32768e5 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.18973001795619187747959486654435109964627074520776171875e56 / 0.4194304e7 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.51071214306184967188696209062639231037018210022265625e53 / 0.8388608e7 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.79851243674210815658066716967090625e35 / 0.1024e4 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.253509643028551527573360115339268412808337411484375e51 / 0.524288e6 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.211023690351098625e18 / 0.16e2 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.17233932129935107748064844330954498281524912109375e50 / 0.524288e6 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.68459181223453523459452313729547099464505340132171875e53 / 0.1048576e7 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.43343402018308387679450561460628708428501680699189305078125e59 / 0.67108864e8 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.1309425e7 * pow(a, 0.38e2) * pow(x, 0.76e2) + 0.4848102327460162159162004885752989515625e40 / 0.32768e5 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.13482794501733734218371446397627237100757301530805002583984375e62 / 0.1073741824e10 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.2533316323498808295115477269795387465966585492047478515625e58 / 0.16777216e8 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.2486117476667341842836070665063910960882168385481015625e55 / 0.4194304e7 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.12844248632100959256644541648145435059168427573275454306640625e62 / 0.1099511627776e13 - 0.95318339520660217061211822131604801064057321386447371208984375e62 / 0.4294967296e10 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.590216208290180814253199031079804562880090036399525113115234375e63 / 0.34359738368e11 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.145442785826674127518673847086438326305904539971266124853515625e63 / 0.17179869184e11 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.162826779242969303371500059030216353762501619112144113291015625e63 / 0.68719476736e11 * a * a * pow(x, 0.4e1) - 0.21141154580787293186402506439494039072544306254149039697265625e62 / 0.68719476736e11 * a * x * x + 0.84409091628501109182241408119599089412304114625627957353515625e62 / 0.4294967296e10 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.20319157633396361136311289375e29 / 0.64e2 * pow(a, 0.29e2) * pow(x, 0.58e2));
return retval;
}

double HO_deriv_81( const double a, const double x )
{
double retval = -0.2e1 / 0.102571639475517864516238575717221752912613884791019599609375e60 * pow(0.3141592654e1, -0.1e1 / 0.4e1) * pow(a, 0.3e1 / 0.4e1) * (-0.1701e4 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.316033824681095102639182125e27 / 0.64e2 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.49329854590387573349926459523081290864640953125e47 / 0.262144e6 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.101112334785303977260125e24 / 0.256e3 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.7923429538365865022602115595582850475625e40 / 0.32768e5 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.13848590930722568463777208875e29 / 0.32e2 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.1027840084989878782422238197603874109655059859375e49 / 0.262144e6 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.1078890865322948468440934791381875e34 / 0.512e3 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.246810196364556825e18 / 0.16e2 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.2053731054375e13 / 0.8e1 * pow(a, 0.37e2) * pow(x, 0.74e2) - 0.6462013286957625464523030270184970433494674741834234775390625e61 / 0.1099511627776e13 + 0.37029370803814254668789431840362444097103842734375e50 / 0.524288e6 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.12295122342090534649828125e26 / 0.256e3 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.1375785e7 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.9258787714005320275852319064164181063609375e43 / 0.32768e5 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.120875735837108115445697323849265625e36 / 0.1024e4 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.17222905940333624740173568488896698959269232302049404296875e59 / 0.33554432e8 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.116974977027646695313529943716268958616054043413118551830078125e63 / 0.4294967296e10 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.567039707959725e15 / 0.8e1 * pow(a, 0.36e2) * pow(x, 0.72e2) + pow(a, 0.41e2) * pow(x, 0.82e2) - 0.274883912392489805799042345943461425788909065903555052681640625e63 / 0.4294967296e10 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.128227189348735590796259815763736762723046875e45 / 0.16384e5 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.3029717343877589723524159168903937988351449128474800703125e58 / 0.33554432e8 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.1396880850460238688603939195412819823424601329567140625e55 / 0.8388608e7 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.1467651207127650899902484961209810625e37 / 0.256e3 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.122612833252195099064516890430823324856315948822265625e54 / 0.8388608e7 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.5435075600793964125e19 / 0.2e1 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.17965250293361919276852291638215871773819186640625e50 / 0.16384e5 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.6762987241039430667203686967068593877046379863661890625e55 / 0.4194304e7 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.151806026423766439484033092061488194310668549490709007421875e60 / 0.16777216e8 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.704593890e9 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.290484865170740304363199335947451767953125e42 / 0.32768e5 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.491644517395152673328970809517319720210687915964228035400390625e63 / 0.4294967296e10 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.160714316574656052575448213384961768002780893424266726953125e60 / 0.67108864e8 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.27646374045045102147026680553605445948456594301702421875e56 / 0.2097152e7 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.4811998027589356520911375629862406612657675237939657686927734375e64 / 0.34359738368e11 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.2964217809202990766654778599651991437421628656575675409111328125e64 / 0.34359738368e11 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.2212162548568493784021717362493321545066343653287919704775390625e64 / 0.68719476736e11 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.53850110724646878871025252251541420279122289515285289794921875e62 / 0.8589934592e10 * a * a * pow(x, 0.4e1) + 0.523423076243567662626365451884982605113068654088573016806640625e63 / 0.1099511627776e13 * a * x * x - 0.323829855457607227499348773202074589045439773981771532650390625e63 / 0.2147483648e10 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.16655593784757489071627435443125e32 / 0.512e3 * pow(a, 0.29e2) * pow(x, 0.58e2)) * sqrt(0.1097012334013634453690e22) * exp(-a * x * x / 0.2e1);
return retval;
}

double HO_deriv_82( const double a, const double x )
{
double retval = -0.2e1 / 0.102571639475517864516238575717221752912613884791019599609375e60 * pow(a, 0.5e1 / 0.4e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * sqrt(0.26756398390576450090e20) * x * exp(-a * x * x / 0.2e1) * (-0.1066232192348008201646299994580520121526621332402648737939453125e64 / 0.2199023255552e13 - 0.3485e4 / 0.2e1 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.415378413205186622609793375e27 / 0.64e2 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.94841958329898792376545610131490259180474390625e47 / 0.262144e6 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.125012173893861968839125e24 / 0.256e3 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.12851382962984194558503259385336477465625e41 / 0.32768e5 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.75180559844590992732107041875e29 / 0.128e3 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.4144516471733382187186444345176911732480080078125e49 / 0.524288e6 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.3132919608270472193283000378613125e34 / 0.1024e4 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.288080825543886375e18 / 0.16e2 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.2270361648555e13 / 0.8e1 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.78474535521148076540653875292131561421904643515625e50 / 0.524288e6 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.31331754842213479375346625e26 / 0.512e3 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.1444635e7 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.16290524795034964884920109886064565239578125e44 / 0.32768e5 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.181853049188323647402766453169589375e36 / 0.1024e4 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.113789279132649925283363885067784933352611922215025835703125e60 / 0.67108864e8 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.508297178475577961539037469919216303950221859878057326517578125e63 / 0.4294967296e10 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.1287744137254575e16 / 0.16e2 * pow(a, 0.36e2) * pow(x, 0.72e2) + pow(a, 0.41e2) * pow(x, 0.82e2) - 0.2669738983792877938992606822525605485126304425444861394009765625e64 / 0.8589934592e10 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.942422350161595949541103623709478636843015625e45 / 0.65536e5 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.9268040334277178655053238380882202144720831230906006015625e58 / 0.33554432e8 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.6994666003268761771310634006047848023080212167244828125e55 / 0.16777216e8 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.18327838389817807599051786591064831875e38 / 0.2048e4 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.289474077976940605307920975166572341891548554340390625e54 / 0.8388608e7 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.104421718185302392875e21 / 0.32e2 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.2568059697340302460953291093906047184100802111953125e52 / 0.1048576e7 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.18022693490203778884435439269487080938590136035324296875e56 / 0.4194304e7 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.4775062577192018427156490647119297963899071569959074333984375e61 / 0.134217728e9 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.1517746815e10 / 0.2e1 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.980616395653793976094487835707196432703125e42 / 0.65536e5 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.2705574406394124622737474028197090122510550122430698459701171875e64 / 0.4294967296e10 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.577016557303863096295072183145150548561117194210946613671875e60 / 0.67108864e8 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.314989215032491559350606216368360628585153529802560859375e57 / 0.8388608e7 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.36104188270756033872953709714020772164627539713230843684091796875e65 / 0.34359738368e11 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.54360883298688465997027948279087945534709469123582970394443359375e65 / 0.68719476736e11 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.26077916191895137392473011728922175682255866683153614024287109375e65 / 0.68719476736e11 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.14218583235735761897105507604496996610499449323615927917451171875e65 / 0.137438953472e12 * a * a * pow(x, 0.4e1) + 0.14395211598912603659802470431882052469014970433226063667978515625e65 / 0.1099511627776e13 * a * x * x - 0.8224229486986113919447023701605724279684387458249606576177734375e64 / 0.8589934592e10 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.23366834005030733788688698205625e32 / 0.512e3 * pow(a, 0.29e2) * pow(x, 0.58e2));
return retval;
}

double HO_deriv_83( const double a, const double x )
{
double retval = -0.4e1 / 0.8513446076467982754847801784529405491746952437654626767578125e61 * (0.536347102817482913555411512425352545980058003572241486357421875e63 / 0.2199023255552e13 + 0.3032073e7 / 0.2e1 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.101603466284594708764528072875e30 / 0.128e3 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.8255876811692897316875397135592408171100319515625e49 / 0.524288e6 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.39792174691596057064459125e26 / 0.512e3 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.1641736235732180889208446814173723395195625e43 / 0.65536e5 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.32626214956556931103084967401125e32 / 0.512e3 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.10257301493315417878542160077554204091367063640625e50 / 0.32768e5 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.135980207951629394003870410928611875e36 / 0.512e3 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.125090759310640598475e21 / 0.32e2 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.1459892438079075e16 / 0.16e2 * pow(a, 0.37e2) * pow(x, 0.74e2) - 0.5652665062077083548283559955782588559046849201953125e52 / 0.1048576e7 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.4351391338333945298989971375e28 / 0.512e3 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.1633184775e10 / 0.2e1 * pow(a, 0.39e2) * pow(x, 0.78e2) - 0.1714511088346446386103703789738084922147390625e46 / 0.65536e5 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.28419863461890543346808915884079881875e38 / 0.2048e4 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.1004735124256376999842468346875122283858169100409270676953125e61 / 0.33554432e8 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.12393083649597811461766575294721770428718303540935318551611328125e65 / 0.8589934592e10 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.83897222877693225e17 / 0.4e1 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.3569e4 / 0.2e1 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.28256230721083010132827791671965636577477732073332526297673828125e65 / 0.8589934592e10 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.180360945146215515731597823258185097465898453125e48 / 0.262144e6 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.365826634985655215327257705785300934122717980149016502890625e60 / 0.67108864e8 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.188370522330944681525469665253676082995190236635870984375e57 / 0.16777216e8 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.20691156382543783479810933338130368735625e41 / 0.32768e5 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.17203599134974606019574717252380399317270703167646390625e56 / 0.16777216e8 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.154129685579182165978125e24 / 0.256e3 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.672493214231416724290411832893334728109373613518515625e54 / 0.8388608e7 * pow(a, 0.18e2) * pow(x, 0.36e2) + pow(a, 0.42e2) * pow(x, 0.84e2) - 0.877831257659892535474901119776934948859938815172392234375e57 / 0.8388608e7 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.2123783177004761795763787850506004448205620859436073537055078125e64 / 0.4294967296e10 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.2506720871655e13 / 0.8e1 * pow(a, 0.38e2) * pow(x, 0.76e2) + 0.56811494033105129640687778174090710709453125e44 / 0.65536e5 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.49076611252407333388595638167098210897724482022103861464380859375e65 / 0.8589934592e10 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.18139250254047924545543057574229358221482429242872746952734375e62 / 0.134217728e9 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.27670767904496612531274057036446862518411114826086276953125e59 / 0.33554432e8 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.454069186992993976487276760338827590918585973303609601116388671875e66 / 0.68719476736e11 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.68065001381361522125008175267312596906516884739048741006787109375e65 / 0.17179869184e11 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.197912080939651195101946848084955089466641403318157108465888671875e66 / 0.137438953472e12 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.300533159945396259228882250795672543264159168001645979522275390625e66 / 0.1099511627776e13 * a * a * pow(x, 0.4e1) - 0.44516809533851081825099155531304261316344814296496043367666015625e65 / 0.2199023255552e13 * a * x * x + 0.251331736413843616444626146976957504294407195810168260226677734375e66 / 0.34359738368e11 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.4524447330513984676474817060540625e34 / 0.1024e4 * pow(a, 0.29e2) * pow(x, 0.58e2)) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * pow(a, 0.3e1 / 0.4e1) * sqrt(0.1110390533208922678735e22) * exp(-a * x * x / 0.2e1);
return retval;
}

double HO_deriv_84( const double a, const double x )
{
double retval = -0.2e1 / 0.178782367605827637851803837475117515326686001190747162119140625e63 * pow(a, 0.5e1 / 0.4e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * sqrt(0.46636402394774752506870e23) * x * exp(-a * x * x / 0.2e1) * (0.6360207e7 / 0.4e1 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.68374659700953671935877382375e29 / 0.64e2 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.8127878721589131467001359970699502618060004484375e49 / 0.262144e6 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.25188900748587144111918375e26 / 0.256e3 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.1363475856794523111376506676178177057026875e43 / 0.32768e5 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.45343901660934314083158160522875e32 / 0.512e3 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.677732432814426025194407601221813143500326229328125e51 / 0.1048576e7 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.808724394659690606444071391312270625e36 / 0.2048e4 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.74752425584024663475e20 / 0.16e2 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.826236996870285e15 / 0.8e1 * pow(a, 0.37e2) * pow(x, 0.74e2) - 0.6134312262632764039971626602902525098989302625078125e52 / 0.524288e6 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.11354814084054851342334777375e29 / 0.1024e4 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.877922955e9 * pow(a, 0.39e2) * pow(x, 0.78e2) - 0.1544674621973795261704174010775540060658078125e46 / 0.32768e5 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.21892813480212332434623136159506511875e38 / 0.1024e4 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.13597415348269635397868071627709988241547221825538796494765625e62 / 0.134217728e9 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.27577872458157656242288989655833497564537361774249750966427734375e65 / 0.4294967296e10 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.780359100465119175e18 / 0.32e2 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.1827e4 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.281075137172878363952865927684289753323331124308413024750544921875e66 / 0.17179869184e11 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.339388875275136723150856119034219269425077734375e48 / 0.262144e6 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.573071144946229844354593057106551228570955709122324756484375e60 / 0.33554432e8 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.966028507568855345363237481167247933649130678790375796875e57 / 0.33554432e8 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.33076233722778188685683450365508338310625e41 / 0.32768e5 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.20798381043775269963963464140937497682073536665363546875e56 / 0.8388608e7 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.189512500355620506689625e24 / 0.256e3 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.1538307573585869705932121416274433984938149469743828125e55 / 0.8388608e7 * pow(a, 0.18e2) * pow(x, 0.36e2) + pow(a, 0.42e2) * pow(x, 0.84e2) - 0.1197938027634046896237137152234162279440000655207205671875e58 / 0.4194304e7 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.8552532253343500204562280803389044940071284001512836676248828125e64 / 0.4294967296e10 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.2764328550165e13 / 0.8e1 * pow(a, 0.38e2) * pow(x, 0.76e2) + 0.90642660376154612390864545599884580270629802603708811194404296875e65 / 0.4398046511104e13 + 0.196405450800163448186377747401856457024109375e45 / 0.131072e6 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.138306813529511575913314980289094957984496267516838155035982421875e66 / 0.4294967296e10 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.33350723963219739768964513836596800970646967881327081502734375e62 / 0.67108864e8 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.80722309128290117936061559492531192036468286699548242421875e59 / 0.33554432e8 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.1744691617226244979851573190761041802160136438274743910388517578125e67 / 0.34359738368e11 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.5113950437119629028992280901750753114242968606727195407643271484375e67 / 0.137438953472e12 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.1194802562709746103763605045846210354928242545957763284442216796875e67 / 0.68719476736e11 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.5079743410784380674283302434180513962977129351832699117291142578125e67 / 0.1099511627776e13 * a * a * pow(x, 0.4e1) - 0.626989763193637525946276058025237126250687806175950297551826171875e66 / 0.1099511627776e13 * a * x * x + 0.1634399871708959375577775949867907084139369870978549810586501953125e67 / 0.34359738368e11 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.3250072951441632752191925598804375e34 / 0.512e3 * pow(a, 0.29e2) * pow(x, 0.58e2));
return retval;
}

double HO_deriv_85( const double a, const double x )
{
double retval = -0.4e1 / 0.3039300249299069843480665237076997760553662020242701756025390625e64 * (-0.45589503739486047652209978556154966408304930303640526340380859375e65 / 0.4398046511104e13 - 0.3772174455e10 / 0.4e1 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.62735347814403053666399644996875e32 / 0.512e3 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.1382233920745553262901108156792365307434220161328125e52 / 0.1048576e7 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.14762896810582137170914335375e29 / 0.1024e4 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.336648681784742968213675576951611811461159375e45 / 0.131072e6 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.1161437481145808701233751189963125e34 / 0.128e3 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.26269841063641073484153301711666538782694647119609375e53 / 0.1048576e7 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.67038242520153291243908112587805654375e38 / 0.2048e4 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.232400760690697283309625e24 / 0.256e3 * pow(a, 0.35e2) * pow(x, 0.70e2) + pow(a, 0.43e2) * pow(x, 0.86e2) + 0.905599234727562375e18 / 0.32e2 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.3466822964610814394651140271342659890867732975936328125e55 / 0.8388608e7 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.1466540598258772683110641051875e31 / 0.1024e4 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.3044800815525e13 / 0.8e1 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.632148670295080748686203310409824065311753484375e48 / 0.262144e6 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.52509437201561448641564578532138118590625e41 / 0.32768e5 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.237841330758109028511096136090922764291802072532366601646484375e63 / 0.134217728e9 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.1335974417426644075578436816771006852215833121712827339863701171875e67 / 0.17179869184e11 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.178281598615098103125e21 / 0.32e2 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.6666975e7 / 0.4e1 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.2957981205486005639694446191344192165926484689150441831898591796875e67 / 0.17179869184e11 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.494538075400913510876961773449862364019398984375e48 / 0.8192e4 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.44759661663667420500674474509252242460902128078232483952265625e62 / 0.134217728e9 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.25639321095045248318744482215083689074345337764326883984375e59 / 0.33554432e8 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.1123743838017464102782835172674321750296875e43 / 0.16384e5 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.2432699526359526234673846211698544066488686745858975546875e58 / 0.33554432e8 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.15895908239399654051210625e26 / 0.128e3 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.24735523134366473331627329780785748272095687639053765625e56 / 0.4194304e7 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.1870e4 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.230335288694671802243088185124078365929118728241973353671875e60 / 0.33554432e8 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.58991078172085582558008898402875627240699124854852116305669921875e65 / 0.2147483648e10 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.116726002327935e15 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.11030400078322359118131432299169506937219609375e47 / 0.131072e6 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.9986346804845916475891506372486802611461208993285679688888408203125e67 / 0.34359738368e11 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.33265645585762546555268175791095278519191235820405328743798828125e65 / 0.4294967296e10 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.437961464419446384546716971714796892963817300178400038671875e60 / 0.8388608e7 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.43738569887662914117530253426775074772127750133312720970961396484375e68 / 0.137438953472e12 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.25545318595358682034454991317632166177453529280139908259393408203125e68 / 0.137438953472e12 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.72399171238553142741552926612411163654148782984201398530280830078125e68 / 0.1099511627776e13 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.6701657049704449004874866847754780062020824754635157372035986328125e67 / 0.549755813888e12 * a * a * pow(x, 0.4e1) + 0.3875107817856314050437848177273172144705919075809444738932373046875e67 / 0.4398046511104e13 * a * x * x - 0.1554494627507660621461045295751452339450855317121103064811572265625e67 / 0.4294967296e10 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.1195688035436741223137481199544690625e37 / 0.2048e4 * pow(a, 0.29e2) * pow(x, 0.58e2)) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * pow(a, 0.3e1 / 0.4e1) * sqrt(0.79281884071117079261679e23) * exp(-a * x * x / 0.2e1);
return retval;
}

double HO_deriv_86( const double a, const double x )
{
double retval = -0.4e1 / 0.3039300249299069843480665237076997760553662020242701756025390625e64 * pow(a, 0.5e1 / 0.4e1) * (-0.7886984146931086243832326290214809188636752942529811056885888671875e67 / 0.8796093022208e13 - 0.8097115215e10 / 0.8e1 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.86417262660359531067741848649375e32 / 0.512e3 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.2785732978733345806769925669843074696521274478984375e52 / 0.1048576e7 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.19128157765555734475746791625e29 / 0.1024e4 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.572335222744939106037328873833839559890090625e45 / 0.131072e6 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.13216451336973031567435121854873125e35 / 0.1024e4 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.111040074680682408910475042490037646192336058297890625e54 / 0.2097152e7 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.204034723604894862824017976061252418125e39 / 0.4096e4 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.284259312095857019546625e24 / 0.256e3 * pow(a, 0.35e2) * pow(x, 0.70e2) + pow(a, 0.43e2) * pow(x, 0.86e2) + 0.1049016582921151845e19 / 0.32e2 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.7701839766385678362399490729102235234017294269158203125e55 / 0.8388608e7 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.3916624378369725108683518296375e31 / 0.2048e4 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.3349854923625e13 / 0.8e1 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.1165877706342936835047401647466413110661089421875e49 / 0.262144e6 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.82801476166530025485018782233883128760625e41 / 0.32768e5 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.1647404763424004914238478858307613136019000949962024666755703125e64 / 0.268435456e9 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.6086308607073535723670732319739412624756341596866708284478173828125e67 / 0.17179869184e11 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.424261360430340307875e21 / 0.64e2 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.6984705e7 / 0.4e1 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.30119654778636537064219013933280001979139816193747560795094107421875e68 / 0.34359738368e11 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.60960060094419272107433487940586367404791248140625e50 / 0.524288e6 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.143544303082720327237322858129367541651629808007360492674921875e63 / 0.134217728e9 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.134589786839185576239435320926452300309745266549882162421875e60 / 0.67108864e8 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.7354514703402346826137221891099995052571875e43 / 0.65536e5 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.6020805411615274660308728284605464962899743552794657078125e58 / 0.33554432e8 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.80011176924068492799571875e26 / 0.512e3 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.231664494093088862315765659361858256074587751799150609375e57 / 0.16777216e8 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.3827e4 / 0.2e1 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.643494634340543803722284984247141241298569313929983712734375e60 / 0.33554432e8 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.972687476927696861276041460131625943901151735388651812468677734375e66 / 0.8589934592e10 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.2107637037704835e16 / 0.16e2 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.39031205017105121961788313764342396173505859375e47 / 0.262144e6 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.57617428780364161135586691197208666206379988090374845597409322265625e68 / 0.34359738368e11 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.125213818428032588280206530673380662855135474888053217120861328125e66 / 0.4294967296e10 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.10462412761131219186393794324297925776357857726484000923828125e62 / 0.67108864e8 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.344066931922142946183804204565955666754032997401109833092557158203125e69 / 0.137438953472e12 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.491176247788807178955171174521951813086809729654722626288336669921875e69 / 0.274877906944e12 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.894833818698881442387420939765446757659969725661876493710751533203125e69 / 0.1099511627776e13 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.463818493144783151604053879834609397244812699923177986881766787109375e69 / 0.2199023255552e13 * a * a * pow(x, 0.4e1) + 0.111739873665480302795566657441135822666755384174222930060273486328125e69 / 0.4398046511104e13 * a * x * x - 0.165565635480546684344227947422881608400281097852759946426007919921875e69 / 0.68719476736e11 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.1758155615591640008449254990112546875e37 / 0.2048e4 * pow(a, 0.29e2) * pow(x, 0.58e2)) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * sqrt(0.1843764745839932075853e22) * x * exp(-a * x * x / 0.2e1);
return retval;
}

double HO_deriv_87( const double a, const double x )
{
double retval = -0.4e1 / 0.88139707229673025460939291875232935056056198587038350924736328125e65 * pow(0.3141592654e1, -0.1e1 / 0.4e1) * pow(a, 0.3e1 / 0.4e1) * sqrt(0.35646118419572020133158e23) * exp(-a * x * x / 0.2e1) * (0.1840657126455e13 / 0.4e1 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.18709786520139669866660225314963125e35 / 0.1024e4 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.231740993667632567683193348612398653653822729616328125e54 / 0.2097152e7 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.5210188393244129731734955531875e31 / 0.2048e4 * pow(a, 0.33e2) * pow(x, 0.66e2) + pow(a, 0.44e2) * pow(x, 0.88e2) - 0.68457611103601015511219759277555415496635396875e47 / 0.262144e6 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.2571493691674033473227519037712438125e37 / 0.2048e4 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.16875586688125064145168661908655119868313449220866640625e56 / 0.8388608e7 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.129718999276496618556962197857403941215625e42 / 0.32768e5 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.100389533822280223210564875e27 / 0.512e3 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.3915e4 / 0.2e1 * pow(a, 0.43e2) * pow(x, 0.86e2) - 0.503732313681942720375e21 / 0.64e2 * pow(a, 0.37e2) * pow(x, 0.74e2) - 0.534261220914641736642927872896363853713311668862966234375e57 / 0.16777216e8 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.474127143785215805587880953400625e33 / 0.2048e4 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.2375061245502435e16 / 0.16e2 * pow(a, 0.39e2) * pow(x, 0.78e2) - 0.116187778845278390214875758107184330190122854140625e51 / 0.524288e6 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.11946865482386365046314734183063261017446875e44 / 0.65536e5 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.456906052674476530744329790735316193597216203068326639957580078125e66 / 0.4294967296e10 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.146505581948739504063961275841071092429319148407379324376986412109375e69 / 0.34359738368e11 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.346814759417922641971125e24 / 0.256e3 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.8683216395e10 / 0.8e1 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.157632588172694403106793777803684086791039590058572690785365126953125e69 / 0.17179869184e11 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.5550200820224452332572141983427805311389714801640625e52 / 0.1048576e7 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.5549466226815504421995908389497767533569427567631497651306640625e64 / 0.268435456e9 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.3523470620200320267933910088570011132425033376273966762734375e61 / 0.67108864e8 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.965345901027580218250579094890472353360584375e45 / 0.131072e6 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.346834006385335546279095526642760057994700255101636260859375e60 / 0.67108864e8 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.24701507746723705488471255375e29 / 0.1024e4 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.14654958016281783645595585632792678506818320638097306796875e59 / 0.33554432e8 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.7313655e7 / 0.4e1 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.3966286825335286145742268134385482077522528936416725791613134765625e67 / 0.8796093022208e13 - 0.30550245262503160024269879426949943266964944561333282697578125e62 / 0.67108864e8 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.26646251746839363497309412594678486497804215533120956399012185546875e68 / 0.17179869184e11 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.1212977707524457875e19 / 0.32e2 * pow(a, 0.38e2) * pow(x, 0.76e2) + 0.266224043180670615876965730523826615820248765625e48 / 0.32768e5 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.1035262673674722701485159135305276570006016767141436861103884482421875e70 / 0.68719476736e11 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.3871677604241616918412478753072942482586937299684241528061599609375e67 / 0.8589934592e10 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.449046755707751927480021652398866974321279253620693319650703125e63 / 0.134217728e9 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.4299131739736941380891261880270320051272549161014244950821914052734375e70 / 0.274877906944e12 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.9789589142292553264921066209290246863741105920863762598859539228515625e70 / 0.1099511627776e13 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.6765163228413553069254395347883503930227593522548128625228136865234375e70 / 0.2199023255552e13 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.2444554780014981361159151260159585453779718667811508662897562060546875e70 / 0.4398046511104e13 * a * a * pow(x, 0.4e1) - 0.345066953804169894679577327691536940744460017468255143870342724609375e69 / 0.8796093022208e13 * a * x * x + 0.2509788846965815724003332510606879066076964625214230622988039638671875e70 / 0.137438953472e12 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.308667915197148638631206681733689555625e39 / 0.4096e4 * pow(a, 0.29e2) * pow(x, 0.58e2));
return retval;
}

double HO_deriv_88( const double a, const double x )
{
double retval = -0.2e1 / 0.88139707229673025460939291875232935056056198587038350924736328125e65 * pow(a, 0.5e1 / 0.4e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * (0.8082226970895e13 / 0.16e2 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.6590888317453824110644718747821875e34 / 0.256e3 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.119449974174395821940139577469424505614691688122265625e54 / 0.524288e6 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.1726360930298801194694268847875e31 / 0.512e3 * pow(a, 0.33e2) * pow(x, 0.66e2) + pow(a, 0.44e2) * pow(x, 0.88e2) - 0.29765105107914913996008093280655124633924571875e47 / 0.65536e5 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.1870837976927349395163265687696951875e37 / 0.1024e4 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.36487100629848596365522487082271543244689193652576796875e56 / 0.8388608e7 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.201936828113470174619083842512520053518125e42 / 0.32768e5 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.31400074756530380738462625e26 / 0.128e3 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.2002e4 * pow(a, 0.43e2) * pow(x, 0.86e2) - 0.149210120627880026715e21 / 0.16e2 * pow(a, 0.37e2) * pow(x, 0.74e2) - 0.303562024072273212681916283039219744454720751278883453125e57 / 0.4194304e7 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.702032768084345647796381459786230327721487621745760465115524853515625e69 / 0.17592186044416e14 + 0.1295252834560490651309309945224125e34 / 0.4096e4 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.668158536903165e15 / 0.4e1 * pow(a, 0.39e2) * pow(x, 0.78e2) - 0.54804120889049479639815373954976307628139781609375e50 / 0.131072e6 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.4817916243716468526874466572186167557855625e43 / 0.16384e5 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.1618890287686618949984646395384288744892873410029460494839173203125e67 / 0.4294967296e10 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.170711700751729108999246016952720413496921512701203489896968177734375e69 / 0.8589934592e10 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.422098047552898473631875e24 / 0.256e3 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.2326060275e10 / 0.2e1 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.3284321337104021034142726829297935502434483694043908651539783998046875e70 / 0.68719476736e11 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.5467975622887793779496999139228874862332089397171875e52 / 0.524288e6 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.4551932544563235972807508066644835492967318118437490172256953125e64 / 0.67108864e8 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.18922342219594312550015443068246356081541845909619451133203125e62 / 0.134217728e9 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.807882296964651734689316041067802486835546875e45 / 0.65536e5 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.219545228186773768328779582860789364678335412987876796109375e60 / 0.16777216e8 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.15897535044724488932193792375e29 / 0.512e3 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.17551999909847912304493245804217331555270436532578318796875e59 / 0.16777216e8 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.3827043e7 / 0.2e1 * pow(a, 0.42e2) * pow(x, 0.84e2) - 0.21829317980321524418579052157922252877897620572547909024296875e62 / 0.16777216e8 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.56188127920380440488221435349218249306114627870207437974473802734375e68 / 0.8589934592e10 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.700061419771258545e18 / 0.16e2 * pow(a, 0.38e2) * pow(x, 0.76e2) + 0.7709630964762685794477844318638978935692510171875e49 / 0.524288e6 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.1527758003208870620380979695145976041169372891756869376098160392578125e70 / 0.17179869184e11 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.3727391482344413803440585134946000526714132182925822589127626953125e67 / 0.2147483648e10 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.685915780619762729859977155900972013898021152548291100566171875e63 / 0.67108864e8 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.8650060247422520609745069084399318657379707348064806105870598154296875e70 / 0.68719476736e11 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.96290191616517759362371757053283433437538179401511823657565520771484375e71 / 0.1099511627776e13 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.21387011819572929955071458234233396458416980530946268813536345283203125e71 / 0.549755813888e12 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.21637152308690742001329603944575307528106068022536283653460746982421875e71 / 0.2199023255552e13 * a * a * pow(x, 0.4e1) - 0.2545034046256808610184622052897350999743622734200732382951761474609375e70 / 0.2199023255552e13 * a * x * x + 0.8546466711525244913819978436681961547710489295992173697417058056640625e70 / 0.68719476736e11 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.116071904910389993670855945529847638125e39 / 0.1024e4 * pow(a, 0.29e2) * pow(x, 0.58e2)) * sqrt(0.3240556219961092739378e22) * x * exp(-a * x * x / 0.2e1);
return retval;
}

double HO_deriv_89( const double a, const double x )
{
double retval = -0.4e1 / 0.7844433943440899266023596976895731219989001674246413232301533203125e67 * pow(0.3141592654e1, -0.1e1 / 0.4e1) * pow(a, 0.3e1 / 0.4e1) * sqrt(0.144204751788268626902321e24) * (-0.3003338877999075e16 / 0.16e2 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.2708511226039567596912684898289686875e37 / 0.1024e4 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.77882267976329589948096487025453440064524274668221796875e56 / 0.8388608e7 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.1762085714595164675272761960880125e34 / 0.4096e4 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.2047e4 * pow(a, 0.44e2) * pow(x, 0.88e2) + 0.13829524071675081339861807560721393222629820571875e50 / 0.524288e6 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.86810080143064785182404866824844031875e38 / 0.512e3 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.1360569359690836053962833412470747487735906676595283390625e58 / 0.8388608e7 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.15438595721734885790530375461860204752756875e44 / 0.32768e5 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.20398016787398787240652323375e29 / 0.512e3 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.4003131e7 / 0.2e1 * pow(a, 0.43e2) * pow(x, 0.86e2) + 0.512493305098332586903875e24 / 0.256e3 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.41400181944878297070583359550895602126821160302113623171875e59 / 0.16777216e8 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.147922458672594087213687122505463125e36 / 0.4096e4 * pow(a, 0.32e2) * pow(x, 0.64e2) + pow(a, 0.45e2) * pow(x, 0.90e2) + 0.806696822630551545e18 / 0.16e2 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.10658888080836846782327756086048310168056962757546875e53 / 0.524288e6 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.1342161789357274748563850382893975864796121875e46 / 0.65536e5 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.27823173839177334003746819362145307157472586681581785391101060546875e68 / 0.4294967296e10 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.16340008639877769244399529132097182220186468564777458570704142748046875e71 / 0.68719476736e11 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.78353457570033753805322625e26 / 0.256e3 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.8862607950735e13 / 0.16e2 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.34201159225209625115154569985200408430840746515465131002344707193359375e71 / 0.68719476736e11 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.121702229579704295350458707549656078784530992679453125e54 / 0.262144e6 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.5577805501013775597910900828340136133107522111076869165979313203125e67 / 0.4294967296e10 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.489006422511556325920957950721346794060658942485716084469453125e63 / 0.134217728e9 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.1604539282013584097907159480301820770696115625e46 / 0.2048e4 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.49873613549981439609513319924704493087942139097280963088203125e62 / 0.134217728e9 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.569964419489217352567318225875e30 / 0.128e3 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.136640037123236820847981698423847926268334627663783460515625e60 / 0.4194304e7 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.1245229260e10 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.2048540418629492716695904928697533867010868542845567380885546875e64 / 0.67108864e8 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.95555606081156545288886135275422118246704494530862330822831244140625e68 / 0.1073741824e10 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.88214670192364430715e20 / 0.8e1 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.409566674430377408911291993144441260824036993859375e51 / 0.524288e6 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.54660389262369683271331758192008354937608125047181114374735764384765625e71 / 0.68719476736e11 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.228754329709435365994606202629040828529989547513276488939505099609375e69 / 0.8589934592e10 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.352999527454840466971061863960307904899505075341088595453568994140625e69 / 0.17592186044416e14 - 0.7282230778482906367093184617498975230470893981341339528180234375e64 / 0.33554432e8 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.862053608969179703640641824979987188112398020322410586946133922646484375e72 / 0.1099511627776e13 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.478643825926933350514961816739246831850068915157493396195342651455078125e72 / 0.1099511627776e13 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.322806301206536445696137039196236235433767407896914150922440392841796875e72 / 0.2199023255552e13 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.14237647607345232167832828513065752164280038038757240016627282763671875e71 / 0.549755813888e12 * a * a * pow(x, 0.4e1) + 0.31416957943480801560424505892467403536055951705356884995367640478515625e71 / 0.17592186044416e14 * a * x * x - 0.32269386432001379280665736763956739661961423220624995233277740419921875e71 / 0.34359738368e11 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.312429478434890161871475115702613670718125e42 / 0.32768e5 * pow(a, 0.29e2) * pow(x, 0.58e2)) * exp(-a * x * x / 0.2e1);
return retval;
}

double HO_deriv_90( const double a, const double x )
{
double retval = -0.4e1 / 0.117666509151613488990353954653435968299835025113696198484522998046875e69 * (-0.6740827259509035e16 / 0.32e2 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.3902092444294292300636918921264803125e37 / 0.1024e4 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.164190625612383412580162968097138950995483430417838671875e57 / 0.8388608e7 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.2387743800217328409148086710540625e34 / 0.4096e4 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.4185e4 / 0.2e1 * pow(a, 0.44e2) * pow(x, 0.88e2) + 0.24592773575422203468623033354586006952459364184375e50 / 0.524288e6 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.516591132654631426577261748482268583125e39 / 0.2048e4 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.6015897273336832587034270384757416592114514190241862796875e58 / 0.16777216e8 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.49146633239818184817053402361609310545703125e44 / 0.65536e5 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.26091701370821240017172434125e29 / 0.512e3 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.4185225e7 / 0.2e1 * pow(a, 0.43e2) * pow(x, 0.86e2) + 0.620793777119112303381675e24 / 0.256e3 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.96211690435280549530228934167574286632753400702095039765625e59 / 0.16777216e8 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.413162729395866243596850238722155625e36 / 0.8192e4 * pow(a, 0.32e2) * pow(x, 0.64e2) + pow(a, 0.45e2) * pow(x, 0.90e2) + 0.928031713301714175e18 / 0.16e2 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.20562954935244155034182635192995707929801857336328125e53 / 0.524288e6 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.2213695418810050559319597384773180971806590625e46 / 0.65536e5 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.63892914469326124521762197376815730786810418636737035777095987939453125e71 / 0.35184372088832e14 - 0.201610998126961912550226952608775994941070589646538783372439992578125e69 / 0.8589934592e10 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.77877818956142584410442200249469026371064163042652799620607463974609375e71 / 0.68719476736e11 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.194989198062412766319181875e27 / 0.512e3 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.9708118618275e13 / 0.16e2 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.364338030483761070989989500918383117071725312593010900562997777490234375e72 / 0.137438953472e12 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.980776791318793439000755466723698987851808588063828125e54 / 0.1048576e7 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.18713416724180415967017091523651971875144284138894258024389470703125e68 / 0.4294967296e10 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.2685330108877956728337447223248673426844159057630406508081640625e64 / 0.268435456e9 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.175742462869601050723604920436831501394168890625e48 / 0.131072e6 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.129124835081458795701342705010536290323576223142275370187265625e63 / 0.134217728e9 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.6000557087169089519264623558125e31 / 0.1024e4 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.2677406132820180949048290036683506663366016352871432672265625e61 / 0.33554432e8 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.5328848745e10 / 0.4e1 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.5987024578317162584924160856128921559715635160703496926071953125e64 / 0.67108864e8 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.6593336819599801624933143334004126159022610122629500826775355845703125e70 / 0.17179869184e11 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.416397918740181753375e21 / 0.32e2 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.1515928600164383916100236598002152718634422639609375e52 / 0.1048576e7 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.329938012294544714685990492219231154502911694561900461466778529599609375e72 / 0.68719476736e11 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.900790990132641741162029377991627478333558179668405766847638408203125e69 / 0.8589934592e10 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.90994843756542305512589067316661423705611805919301493015464453125e65 / 0.134217728e9 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.7094655102692874673277795554247060334251232905220266809144920358037109375e73 / 0.1099511627776e13 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.9628532777367380190591673755336011850007200270028646225790032407177734375e73 / 0.2199023255552e13 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.4174219412153488521932806541330640975436647515908372641238453355712890625e73 / 0.2199023255552e13 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.2061870239863723167577972347392158472518009145067298486044296494775390625e73 / 0.4398046511104e13 * a * a * pow(x, 0.4e1) + 0.947803731216246653817301104733426724655171127290822878792832749267578125e72 / 0.17592186044416e14 * a * x * x - 0.898932907748609851389974095567366319154639646860267724355594197412109375e72 / 0.137438953472e12 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.480493793591863585984610937875511716428125e42 / 0.32768e5 * pow(a, 0.29e2) * pow(x, 0.58e2)) * pow(a, 0.5e1 / 0.4e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * sqrt(0.721023758941343134511605e24) * x * exp(-a * x * x / 0.2e1);
return retval;
}

double HO_deriv_91( const double a, const double x )
{
double retval = -0.4e1 / 0.1529664618970975356874601410494667587897855326478050580298798974609375e70 * pow(0.3141592654e1, -0.1e1 / 0.4e1) * (0.32122956998390482494366629620388019345854961856039062186274778466796875e71 / 0.35184372088832e14 + 0.2131769935603743435e19 / 0.32e2 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.764488770292151172735371891715561958125e39 / 0.2048e4 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.13126886958132142973599601808820556771918904486036026859375e59 / 0.16777216e8 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.574532684311423429648145281455388125e36 / 0.8192e4 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.2186730e7 * pow(a, 0.44e2) * pow(x, 0.88e2) - 0.2779734338406691349312223319705000037748593934946875e52 / 0.1048576e7 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.734673708250757276998692387938655041758125e42 / 0.32768e5 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.110206118134957720370989506410130546506608440804217954640625e60 / 0.8388608e7 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.226598743657721710796494220488593327822721875e45 / 0.4096e4 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.7869757170959814750044400100125e31 / 0.1024e4 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.5696796105e10 / 0.4e1 * pow(a, 0.43e2) * pow(x, 0.86e2) - 0.241983867171429679005084375e27 / 0.512e3 * pow(a, 0.37e2) * pow(x, 0.74e2) - 0.6455901611733017076053644542173696829306877180444619688515625e61 / 0.33554432e8 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.44759295684552176389658775861566859375e38 / 0.8192e4 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.4277e4 / 0.2e1 * pow(a, 0.45e2) * pow(x, 0.90e2) - 0.490424215405102953975e21 / 0.32e2 * pow(a, 0.39e2) * pow(x, 0.78e2) - 0.1954394627956427801804425127120947618128056529499453125e55 / 0.1048576e7 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.298454397896551884878014098301423580461242890625e48 / 0.131072e6 * pow(a, 0.27e2) * pow(x, 0.54e2) + pow(a, 0.46e2) * pow(x, 0.92e2) + 0.859245074445182373645122362654487426921947529872378666489885693359375e69 / 0.2147483648e10 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.1853094373228180046590835488509459719355381337383846014782708561201171875e73 / 0.137438953472e12 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.16637050824037167057996837375e29 / 0.256e3 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.7554740234576535e16 / 0.32e2 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.3775518212544161375837891201382938540449486516813124442293495629130859375e73 / 0.137438953472e12 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.342019059892374865315774397246165833172409892662404296875e57 / 0.8388608e7 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.710133006141464570957168820335370224219184943149910491751333222265625e69 / 0.8589934592e10 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.68553413880201153041946186226800697859260484720902954868731171875e65 / 0.268435456e9 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.43365883174981137414136799274117309969603916996875e50 / 0.524288e6 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.7235443345081742862575237780762809371579702158834395743251953125e64 / 0.268435456e9 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.3223148792211524128768184567323125e34 / 0.4096e4 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.328619289281384554139395984709354262675344779531399222540078125e63 / 0.134217728e9 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.10623362124375e14 / 0.16e2 * pow(a, 0.42e2) * pow(x, 0.84e2) - 0.277821729935552041275255596813876512377003017026817238152226328125e66 / 0.134217728e9 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.356517966288795070472834170712599923178454469094647356299983371888671875e72 / 0.68719476736e11 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.750265769986059483231075e24 / 0.256e3 * pow(a, 0.38e2) * pow(x, 0.76e2) + 0.78545410579809155155260584305097185598527094566171875e53 / 0.1048576e7 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.5877638242971679797549830624863549009857259229470981274632731290771484375e73 / 0.137438953472e12 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.27441832691852138778871936485005315594667227111181282097211263658203125e71 / 0.17179869184e11 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.61210982446190134808243002596719675746439690699479927860422333203125e68 / 0.4294967296e10 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.88126120229384449675045411700572492273418502355857563201826227245810546875e74 / 0.2199023255552e13 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.23876535037517954345455653416411266379497623790995891507883953194677734375e74 / 0.1099511627776e13 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.31448374901424282361984930398359870939592007657062241880363008118994140625e74 / 0.4398046511104e13 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.21682995973913575683697474993761913058452099252826366975735475465087890625e74 / 0.17592186044416e14 * a * a * pow(x, 0.4e1) - 0.2923189086853533906987363295455309760472801528899554658951004840478515625e73 / 0.35184372088832e14 * a * x * x + 0.54115761046466313053676440553155452413109306740988117006206770684208984375e74 / 0.1099511627776e13 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.77726247824517973394804732617684462719590625e44 / 0.65536e5 * pow(a, 0.29e2) * pow(x, 0.58e2)) * pow(a, 0.3e1 / 0.4e1) * sqrt(0.2678088247496417356757390e25) * exp(-a * x * x / 0.2e1);
return retval;
}

double HO_deriv_92( const double a, const double x )
{
double retval = -0.4e1 / 0.1529664618970975356874601410494667587897855326478050580298798974609375e70 * pow(a, 0.5e1 / 0.4e1) * (0.5942747044702239261457826479771783578983167943367226504460834016357421875e73 / 0.70368744177664e14 + 0.4889101989062716425e19 / 0.64e2 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.562773544407102697805976341832767311875e39 / 0.1024e4 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.14141608648967120288296459334821752775250991436152142921875e59 / 0.8388608e7 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.397798117116206912964071245976068125e36 / 0.4096e4 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.9135945e7 / 0.4e1 * pow(a, 0.44e2) * pow(x, 0.88e2) - 0.2525921896620654562368877204472936820956799580921875e52 / 0.524288e6 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.1116968223807999561803934751625400975703125e43 / 0.32768e5 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.996036325149279125846205972568524044985200948731888560234375e60 / 0.33554432e8 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.11795060919867724840933304424379936906140628125e47 / 0.131072e6 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.5143441491768893010592398879375e31 / 0.512e3 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.3042834795e10 / 0.2e1 * pow(a, 0.43e2) * pow(x, 0.86e2) - 0.149766015245735750424237675e27 / 0.256e3 * pow(a, 0.37e2) * pow(x, 0.74e2) - 0.7666808341857861164080566279272662093391834122614421906171875e61 / 0.16777216e8 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.127759097323188417325559357151528789375e39 / 0.16384e5 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.2185e4 * pow(a, 0.45e2) * pow(x, 0.90e2) - 0.288257462171473219425e21 / 0.16e2 * pow(a, 0.39e2) * pow(x, 0.78e2) - 0.1926672718340024570573156685601501552622694025534921875e55 / 0.524288e6 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.251536531709737294863624189701311677742580371875e48 / 0.65536e5 * pow(a, 0.27e2) * pow(x, 0.54e2) + pow(a, 0.46e2) * pow(x, 0.92e2) + 0.25454276085364082636863104871276535535135773624939345616096373780078125e71 / 0.17179869184e11 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.4513465749885503842076981047155887623363360632144167750653382107529296875e73 / 0.68719476736e11 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.84617798613840698989694286375e29 / 0.1024e4 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.4228013138604255e16 / 0.16e2 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.41107673087280546968856815405533563324165697733480713465531701709892578125e74 / 0.274877906944e12 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.704233530940299484583527854139248125065476369462969609375e57 / 0.8388608e7 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.1217513550613847133610110818549671312690838882840704485857771023828125e70 / 0.4294967296e10 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.384751935318066758460300844229843151143122241998177828043165859375e66 / 0.536870912e9 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.75846904878368953316091748987721470095493643278125e50 / 0.524288e6 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.9572836090464340175894781261938756932379544989574040539548203125e64 / 0.134217728e9 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.4334579410215497966274455107779375e34 / 0.4096e4 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.822628418091530216972761168443357967997375134736380668842109375e63 / 0.134217728e9 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.11613209512905e14 / 0.16e2 * pow(a, 0.42e2) * pow(x, 0.84e2) - 0.414928557695954347359147969267477908095523986468623147889688671875e66 / 0.67108864e8 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.1571411942004619387275732494604316734567055412560031030381459809892578125e73 / 0.68719476736e11 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.904721637977417568282975e24 / 0.256e3 * pow(a, 0.38e2) * pow(x, 0.76e2) + 0.297114752385328508876621970162498477576181122422578125e54 / 0.2097152e7 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.18130785262437346387265477527520265298642039646674015178925907581650390625e74 / 0.68719476736e11 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.55222453441628378036495378358714400517663679248426530640067110818359375e71 / 0.8589934592e10 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.195431350674794497606158693524982094712991797626721502656043364453125e69 / 0.4294967296e10 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.370645385499762183847500294769910429885589834882264045859300485542724609375e75 / 0.1099511627776e13 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.981832061997329213538888535941517832635705317708528023521167408641748046875e75 / 0.4398046511104e13 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.207821764798015682960340222231216033159390522510634429889975127489404296875e75 / 0.2199023255552e13 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.401183609952898735872144837329025973610382618620071847644385708271826171875e75 / 0.17592186044416e14 * a * a * pow(x, 0.4e1) - 0.45068508668741846939596381357404391142234511484022804247343514188916015625e74 / 0.17592186044416e14 * a * x * x + 0.385199665838800464473306899751351601344833508984600568099636387392607421875e75 / 0.1099511627776e13 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.61081078798874630155024111911825750767803125e44 / 0.32768e5 * pow(a, 0.29e2) * pow(x, 0.58e2)) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * sqrt(0.58219309728182986016465e23) * x * exp(-a * x * x / 0.2e1);
return retval;
}

double HO_deriv_93( const double a, const double x )
{
double retval = -0.4e1 / 0.142258809564300708189337931176004085674500545362458703967788304638671875e72 * pow(0.3141592654e1, -0.1e1 / 0.4e1) * pow(a, 0.3e1 / 0.4e1) * sqrt(0.10828791609442035399062490e26) * (-0.2987435000850314871976096554696085799164511452611632783323554397412109375e73 / 0.70368744177664e14 - 0.1352924275724428512105e22 / 0.64e2 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.1688855954397695337447549344457606275263125e43 / 0.32768e5 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.2220719412623466661862033611746374299311832263034742671734375e61 / 0.33554432e8 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.181511985753680914472301085179219339375e39 / 0.16384e5 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.6496410375e10 / 0.4e1 * pow(a, 0.44e2) * pow(x, 0.88e2) + 0.556667260162526435463148374462117585578497594915528125e54 / 0.2097152e7 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.2981910933488367771347633809868658698900625e43 / 0.1024e4 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.35893180278003945939593508254390789473960954035260171128078125e62 / 0.33554432e8 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.841838185187768547368007239033070380580129946875e48 / 0.131072e6 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.5808018858083623282282768052841375e34 / 0.4096e4 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.12682812046905e14 / 0.16e2 * pow(a, 0.43e2) * pow(x, 0.86e2) + 0.107285087407789893648497826375e30 / 0.1024e4 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.2026786724192307758172027251816468324543161979790270280880859375e64 / 0.134217728e9 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.13190862833542090063208372304909497236875e41 / 0.16384e5 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.9537801e7 / 0.4e1 * pow(a, 0.45e2) * pow(x, 0.90e2) + 0.1088602958893081830573375e25 / 0.256e3 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.1433874192044032530590513234931068569166617473809432109375e58 / 0.8388608e7 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.131607369617687816238531798368836669497360315028125e51 / 0.524288e6 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.2232e4 * pow(a, 0.46e2) * pow(x, 0.92e2) - 0.430599621621531708493163349042490816306445008127301352414265630982421875e72 / 0.17179869184e11 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.213646387741586274680350510046510728519086022737123629155179554251611328125e75 / 0.274877906944e12 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.13402764930725318308761062587125e32 / 0.1024e4 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.5597766249498287865e19 / 0.64e2 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.424005907979455837442541781476921291984032260509060740938740961514736328125e75 / 0.274877906944e12 * pow(a, 0.8e1) * pow(x, 0.16e2) + pow(a, 0.47e2) * pow(x, 0.94e2) - 0.7524810196557838322507397624441072519316643249878794421875e58 / 0.2097152e7 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.91613502986644832538695541803786976677581358201943664847612987905078125e71 / 0.17179869184e11 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.9709328250085331728204062480858983049435261283365781660618714921875e67 / 0.536870912e9 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.2275488614562538383535723567106389238708091246403125e52 / 0.262144e6 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.1059288200235554039728648345071090659490925941925779095200734609375e67 / 0.536870912e9 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.274309625989673081356836079157990625e36 / 0.2048e4 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.12446800126453634356737364598856352832608282558187880524931328125e65 / 0.67108864e8 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.2363230644739965e16 / 0.8e1 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.609696022678435318009532026041632038155562945716994853509108534453125e69 / 0.4294967296e10 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.10556645041348968866558495790533471291531309358775520499432401504197265625e74 / 0.34359738368e11 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.46229338987659541738349325e26 / 0.64e2 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.15039135966898752942963129524299490536659158400758203125e56 / 0.2097152e7 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.2573617255410185431918683836406429237391451627741043101977009091984794921875e76 / 0.1099511627776e13 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.6683046159963447410678445799366788360398402605813156762266935687361328125e73 / 0.68719476736e11 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.508664690957267670376191851415630871878921905229943922662950158203125e69 / 0.536870912e9 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.9182625962883495932724723629364907458447155835789250226762375865907060546875e76 / 0.4398046511104e13 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.4858849640668690688206837039316419546212566126854777034019809544933837890625e76 / 0.4398046511104e13 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.6252701456779709027045970088978907577651322470316147415496199353783544921875e76 / 0.17592186044416e14 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.526784371816605522425118359144743129252675519477184580792720092077001953125e75 / 0.8796093022208e13 * a * a * pow(x, 0.4e1) + 0.277831455079079283093776979586735979322299565092881848849090558959326171875e75 / 0.70368744177664e14 * a * x * x - 0.722229008316679455382843431523082609091349335399154512217265517543251953125e75 / 0.274877906944e12 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.19059380716546484005196959434743843517139828125e47 / 0.131072e6 * pow(a, 0.29e2) * pow(x, 0.58e2)) * exp(-a * x * x / 0.2e1);
return retval;
}

double HO_deriv_94( const double a, const double x )
{
double retval = -0.4e1 / 0.142258809564300708189337931176004085674500545362458703967788304638671875e72 * pow(a, 0.5e1 / 0.4e1) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * (-0.3169195731383743606545e22 / 0.128e3 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.2539879363013314051202928202838864161513125e43 / 0.32768e5 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.4887846582292300467284100103076043336714064703825115361265625e61 / 0.33554432e8 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.256745972508448584919102660489617568125e39 / 0.16384e5 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.13859982045e11 / 0.8e1 * pow(a, 0.44e2) * pow(x, 0.88e2) + 0.1033449051049100654413398218346409260183098831367759375e55 / 0.2097152e7 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.296382393274425799961978750643175044121876875e45 / 0.65536e5 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.165695412977496132771900684446604283906492129933373090580046875e63 / 0.67108864e8 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.564625215160709510803482248837560216042092664543598596048151781110888671875e75 / 0.140737488355328e15 - 0.2797623867947230829132064461029092476877401540625e49 / 0.262144e6 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.7754654923194486755265581694805875e34 / 0.4096e4 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.13837613955165e14 / 0.16e2 * pow(a, 0.43e2) * pow(x, 0.86e2) + 0.135643484781077046823422398025e30 / 0.1024e4 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.4917642865501814755469017916629564341635152331819332712277421875e64 / 0.134217728e9 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.38459711735513538025483467638383769859375e41 / 0.32768e5 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.9952767e7 / 0.4e1 * pow(a, 0.45e2) * pow(x, 0.90e2) + 0.1307075175269322879194775e25 / 0.256e3 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.2887943795243614815133005529509053597053891531757025234375e58 / 0.8388608e7 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.226607533303725697159697221343356490627069524790625e51 / 0.524288e6 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.4559e4 / 0.2e1 * pow(a, 0.46e2) * pow(x, 0.92e2) - 0.3257853722609735023770226118853186615079493695636314134607443871481640625e73 / 0.34359738368e11 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.1063204964878717578703391361760871037218510442562391707442834722922724609375e76 / 0.274877906944e12 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.34814267526716355871458234844875e32 / 0.2048e4 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.6399446798983152915e19 / 0.64e2 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.4716268177538926695274018091913607421507751450340865779169497617067470703125e76 / 0.549755813888e12 * pow(a, 0.8e1) * pow(x, 0.16e2) + pow(a, 0.47e2) * pow(x, 0.94e2) - 0.126621188863065847328118308174236812886772651229441935765625e60 / 0.16777216e8 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.320919545670181098344282828421953373720599353079602385184070919223046875e72 / 0.17179869184e11 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.55668324131608129621148233913176717887943118111854003786872958359375e68 / 0.1073741824e10 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.16261788223272125029507795836401820541666370183784375e53 / 0.1048576e7 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.2863419123827833461752580034821111485859515950623117146024991328125e67 / 0.536870912e9 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.1507245258940358274083407519006273125e37 / 0.8192e4 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.127318548661917616869556740868244712971957553166328661244354453125e66 / 0.268435456e9 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.10554337766327355e17 / 0.32e2 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.1860456666997120102688947664601517444318710450528012470507786066953125e70 / 0.4294967296e10 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.190139300597357958519442476336071116708918798722798093711999013940677734375e75 / 0.137438953472e12 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.455517661156697265625924425e27 / 0.512e3 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.58113325978214598106715253269698381216583231907769453125e56 / 0.4194304e7 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.16220691130841973316115842570454314542179838803195463228935555388180029296875e77 / 0.1099511627776e13 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.27477857155344734796445846558004149733246234705619417195931471037244140625e74 / 0.68719476736e11 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.26545280803266513529218232687324681431088290047413694226141681704296875e71 / 0.8589934592e10 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.78910553856730185170595607654593428445266518944325804042647464923264658203125e77 / 0.4398046511104e13 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.102059836773255683171791512823369829826247654422601452415818567404326318359375e78 / 0.8796093022208e13 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.84426193453315976988418192677091968721160164155713004585059357365607958984375e77 / 0.17592186044416e14 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.39829479243003347978142644632726447903060988190035825478197401744430712890625e77 / 0.35184372088832e14 * a * a * pow(x, 0.4e1) + 0.8752188740824472469932637539741299362952297052334546844210239866285009765625e76 / 0.70368744177664e14 * a * x * x - 0.42015546295010184540768353194688980594621923924374590119828194688407783203125e77 / 0.2199023255552e13 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.30599376029146467280312302278935552681885246875e47 / 0.131072e6 * pow(a, 0.29e2) * pow(x, 0.58e2)) * sqrt(0.230399821477490114873670e24) * x * exp(-a * x * x / 0.2e1);
return retval;
}

double HO_deriv_95( const double a, const double x )
{
double retval = -0.8e1 / 0.2702917381721713455597420692344077627815510361886715375387977788134765625e73 * pow(0.3141592654e1, -0.1e1 / 0.4e1) * (0.283806325080779912837729172696128150920628587998105114415737667754150390625e75 / 0.140737488355328e15 + 0.1566135119917296783179325e25 / 0.256e3 * pow(a, 0.40e2) * pow(x, 0.80e2) + pow(a, 0.48e2) * pow(x, 0.96e2) - 0.457654733300720008693478065821856938597796875e45 / 0.65536e5 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.377302594268028106743302133806984826728589461737067200505859375e63 / 0.67108864e8 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.55801545390799642444246922137145906086875e41 / 0.32768e5 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.15083365608675e14 / 0.16e2 * pow(a, 0.44e2) * pow(x, 0.88e2) - 0.111198406729945379923345924341593072710880538785221265625e57 / 0.4194304e7 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.48818851832760394363246344857233057332168065625e47 / 0.131072e6 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.11756748837391755806121294489425647200862847627727013967762578125e65 / 0.134217728e9 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.387271075434409524775567208962455801442028870409375e51 / 0.524288e6 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.2062452485374114804796539922701618125e37 / 0.8192e4 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.11769898262116995e17 / 0.32e2 * pow(a, 0.43e2) * pow(x, 0.86e2) - 0.45075992027545662892012798869375e32 / 0.2048e4 * pow(a, 0.37e2) * pow(x, 0.74e2) - 0.320376740096982238527969576694602709112442208947951206399192578125e66 / 0.268435456e9 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.1899909759734368778458883301336158231053125e43 / 0.16384e5 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.14774832345e11 / 0.8e1 * pow(a, 0.45e2) * pow(x, 0.90e2) - 0.559706860713300588464801625e27 / 0.512e3 * pow(a, 0.39e2) * pow(x, 0.78e2) - 0.263303731563826582075112583864567405508176412676515689515625e60 / 0.16777216e8 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.28817524142619296990652501137500387577892148298109375e53 / 0.1048576e7 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.10381125e8 / 0.4e1 * pow(a, 0.46e2) * pow(x, 0.92e2) + 0.109417814420983524788242442880675207021609257959502469672421725986630859375e75 / 0.68719476736e11 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.25035296395221084866049941894454698355017062130422129521410338988479541015625e77 / 0.549755813888e12 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.10317818175118714870451404215778125e35 / 0.4096e4 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.3705313872562107931125e22 / 0.128e3 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.96860698467027783516234602777855763980445323139081480424215173603703603515625e77 / 0.1099511627776e13 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.4655e4 / 0.2e1 * pow(a, 0.47e2) * pow(x, 0.94e2) + 0.10625096312156732308289184825177669961997487590566036174921875e62 / 0.33554432e8 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.11975839908054900075724117924082692988299211090952138438871652646448828125e74 / 0.34359738368e11 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.5557968030337308482875787048337866578939543798747207065982379759765625e70 / 0.4294967296e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.1901614883640431475331792515772999883845491762201328125e55 / 0.2097152e7 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.156534571977414392209335891913971999905962196114448969059753298046875e69 / 0.1073741824e10 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.361605398870100948152442532349078784375e39 / 0.16384e5 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.7604994877263170591966529769901231580723660643052795000733041484375e67 / 0.536870912e9 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.7305109496836576425e19 / 0.64e2 * pow(a, 0.42e2) * pow(x, 0.84e2) - 0.84582168025315040003036977444705351392225421082752951167768215616796875e71 / 0.8589934592e10 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.5079757054420539542693980950635272733377327670020315935560210342853017578125e76 / 0.274877906944e12 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.171028741680488450342576067075e30 / 0.1024e4 * pow(a, 0.38e2) * pow(x, 0.76e2) + 0.5755692179331679876314031999371190735387126479375889453125e58 / 0.8388608e7 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.286716258211711953423887349686114068545220635012580435402056001687237939453125e78 / 0.2199023255552e13 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.825914390706651702552177512863783898560795750234854549071754727041943359375e75 / 0.137438953472e12 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.1095514137059908306793147779757676065417821630363760990615211420134765625e73 / 0.17179869184e11 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.974925181110271139248770860064123954528078422633579620038399464320885107421875e78 / 0.8796093022208e13 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.1008039522926204424697780060106262030905655511913841065674069376195920166015625e79 / 0.17592186044416e14 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.634042250652134377273676153747996697700078974160300032612385665607288916015625e78 / 0.35184372088832e14 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.208976057367814275819514580828582361794556183629271399248121502689639404296875e78 / 0.70368744177664e14 * a * a * pow(x, 0.4e1) - 0.26961600882674091719584271406132174337459715859819985869495078436644287109375e77 / 0.140737488355328e15 * a * x * x + 0.628198543272852032782674530211148801868741840757900953970796857629341552734375e78 / 0.4398046511104e13 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.4616768452031144471720401943077566402728716828125e49 / 0.262144e6 * pow(a, 0.29e2) * pow(x, 0.58e2)) * pow(a, 0.3e1 / 0.4e1) * sqrt(0.437759660807231218259973e24) * exp(-a * x * x / 0.2e1);
return retval;
}

double HO_deriv_96( const double a, const double x )
{
double retval = -0.2e1 / 0.2702917381721713455597420692344077627815510361886715375387977788134765625e73 * pow(a, 0.5e1 / 0.4e1) * (0.936366500268013420631025e24 / 0.128e3 * pow(a, 0.40e2) * pow(x, 0.80e2) + pow(a, 0.48e2) * pow(x, 0.96e2) - 0.43921443269153348819667125730888834400228125e44 / 0.4096e4 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.52997852776253250342547555539399729149783263927718276536171875e62 / 0.4194304e7 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.5036813265551922239104022111881684486875e40 / 0.2048e4 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.4106534284125e13 / 0.4e1 * pow(a, 0.44e2) * pow(x, 0.88e2) - 0.13174293423680355699286219702442261307088580817138890625e56 / 0.262144e6 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.9676463925122403055606205463505211065839571875e46 / 0.16384e5 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.6927275630760996039807027176696241418736902517492553801287578125e64 / 0.33554432e8 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.54774620740590523177681730330352733127681317483634287082237369876551025390625e77 / 0.281474976710656e15 + 0.164260487103758838681896927640422429713801719028125e51 / 0.131072e6 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.175720380305483344024456991797944375e36 / 0.512e3 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.819374830218945e15 / 0.2e1 * pow(a, 0.43e2) * pow(x, 0.86e2) - 0.3636639356798599243491202078275e31 / 0.128e3 * pow(a, 0.37e2) * pow(x, 0.74e2) - 0.49608785929103143828007277110552867045383159227704732259615234375e65 / 0.16777216e8 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.11311770415649241804055197501801434391039375e44 / 0.65536e5 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.1967430810e10 * pow(a, 0.45e2) * pow(x, 0.90e2) - 0.42882271140592650015624375e26 / 0.32e2 * pow(a, 0.39e2) * pow(x, 0.78e2) - 0.33843470014470277672726508156302601524076303698730229984375e59 / 0.1048576e7 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.3166510557963701408459049532104785670614236058053125e52 / 0.65536e5 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.2705790e7 * pow(a, 0.46e2) * pow(x, 0.92e2) + 0.105666346497978375366931273410480628495154083400890956426510123952803515625e75 / 0.17179869184e11 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.7951319181785281037311687534536428697146979805487972171046840876558837890625e76 / 0.34359738368e11 * pow(a, 0.9e1) * pow(x, 0.18e2) + 0.3420427395039354792670191534545625e34 / 0.1024e4 * pow(a, 0.36e2) * pow(x, 0.72e2) - 0.270289051382953327725e21 / 0.8e1 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.275042945914394401321500396123216099858911586025947947086942551783778681640625e78 / 0.549755813888e12 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.2376e4 * pow(a, 0.47e2) * pow(x, 0.94e2) + 0.2852503334254690295378537908020671755563289461251061964078125e61 / 0.4194304e7 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.2677329671546410057089595305651686384265017740547532957552297177987890625e73 / 0.2147483648e10 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.16269688234260121195327303905134482167441210029060006138602966205859375e71 / 0.4294967296e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.433629701229057959064877754270608598849942326367203125e54 / 0.262144e6 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.27004336648544905997776933252428442660088234194065880015009881796875e68 / 0.67108864e8 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.63395055902892873098254300902713671875e38 / 0.2048e4 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.2482295625218955889685540902025973717616662621536982983607250546875e67 / 0.67108864e8 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.1040858738764950105e19 / 0.8e1 * pow(a, 0.42e2) * pow(x, 0.84e2) - 0.16471796162636023321977332525074040952129920712650813668275052742578125e71 / 0.536870912e9 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.2919594586095526049455344533089376022838131850211012149009689001041767578125e76 / 0.34359738368e11 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.26883604267734637738577787525e29 / 0.128e3 * pow(a, 0.38e2) * pow(x, 0.76e2) + 0.5677383442197915524255337686454575895449886663329958984375e58 / 0.4194304e7 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.115330809482913347557024349649021164650774143072476175139253987195540654296875e78 / 0.137438953472e12 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.216723315822256942920341209257862475683727989703570528733406739116376953125e75 / 0.8589934592e10 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.456080317783561490212454290143019051624744917603079638649730574404296875e72 / 0.2147483648e10 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.534699225204334520926648553621582468567347706319515695705375929982183740234375e78 / 0.549755813888e12 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.2702714662918084327088250885792151821993424198609573871734823689800655517578125e79 / 0.4398046511104e13 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.546386639962899209908651800695278260230021973124313852988553545938078466796875e78 / 0.2199023255552e13 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.504210317138513593147509648211941272925588749437433546270999540532023583984375e78 / 0.8796093022208e13 * a * a * pow(x, 0.4e1) - 0.54207008090428963352006271984960476825840060307638076853405894541042724609375e77 / 0.8796093022208e13 * a * x * x + 0.583097109396852399659815845990861195580729606036820885480585801184158056640625e78 / 0.549755813888e12 * pow(a, 0.6e1) * pow(x, 0.12e2) - 0.473005621824592337730018413090415986113111640625e48 / 0.16384e5 * pow(a, 0.29e2) * pow(x, 0.58e2)) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * sqrt(0.145919886935743739419991e24) * x * exp(-a * x * x / 0.2e1);
return retval;
}

double HO_deriv_97( const double a, const double x )
{
double retval = -0.2e1 / 0.262182986027006205192949807157375529898104505103011391412633845449072265625e75 * (-0.209787528206064564337306725e27 / 0.128e3 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.2425e4 * pow(a, 0.48e2) * pow(x, 0.96e2) + 0.15252810829340406853840584357826914071523496875e47 / 0.16384e5 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.16103274723359439595804135070882112404776198226938028117590078125e65 / 0.33554432e8 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.16753749699475797410046516384509758946559375e44 / 0.65536e5 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.1823230824420915e16 / 0.4e1 * pow(a, 0.44e2) * pow(x, 0.88e2) + 0.11090083352883707538552288595250993631911902748424672984375e59 / 0.4194304e7 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.385178405130248278971259438610417758568158565625e48 / 0.8192e4 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.242154886670706055614647134592543865848625150139880002758870234375e66 / 0.33554432e8 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.11048615975628742324479417432164180217610823655796875e53 / 0.131072e6 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.88550214085160765143641607500910456875e38 / 0.2048e4 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.1184762400535739025e19 / 0.8e1 * pow(a, 0.43e2) * pow(x, 0.86e2) + 0.4520587200457418429356605608645625e34 / 0.1024e4 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.6376745348995259464519041210936988467347128953683506739316916171875e67 / 0.67108864e8 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.1073225495454655492914156255454772205459009375e46 / 0.65536e5 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.4468083122685e13 / 0.4e1 * pow(a, 0.45e2) * pow(x, 0.90e2) + 0.33717919619602308081937470525e29 / 0.128e3 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.6055430918209183512949770435030751975991517604494156926953125e61 / 0.4194304e7 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.784451734269640705038038637683656795450368479561578125e54 / 0.262144e6 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.2094495780e10 * pow(a, 0.46e2) * pow(x, 0.92e2) - 0.1762091521042170972555054939209638179486996968915385332060505865213271484375e76 / 0.17179869184e11 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.1490549750206507763093856195688464902750774464634029270057485906810647431640625e79 / 0.549755813888e12 * pow(a, 0.9e1) * pow(x, 0.18e2) + pow(a, 0.49e2) * pow(x, 0.98e2) - 0.477318142347415009468421115028381875e36 / 0.1024e4 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.1117455294621594259155825e25 / 0.128e3 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.2812396555267691408303973666022220020673905779393064270853875162617513720703125e79 / 0.549755813888e12 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.2819790e7 * pow(a, 0.47e2) * pow(x, 0.94e2) - 0.58804962472386959892423326224631969189073182070309923935078125e62 / 0.2097152e7 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.396549397758685345880905029253260255777216849176306752724886650883416015625e75 / 0.17179869184e11 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.401891615575481378843581910749812643353501194320320772752944078265234375e72 / 0.4294967296e10 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.6186744571744459669433496396036629435765643385348171875e55 / 0.65536e5 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.27529213532835651545259729751524430639300973035816196098326553772152587890625e77 / 0.281474976710656e15 + 0.46704764507337147326155143143091569744094112969793375312752468205859375e71 / 0.4294967296e10 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.226294991550966399811528552502326723125e39 / 0.64e2 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.9152413189758406295542846000997760090945348416577185050509987890625e67 / 0.8388608e7 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.78732846799238657025e20 / 0.2e1 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.1483597025646647902101199793915735912982150032978745119502618527082421875e73 / 0.2147483648e10 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.9696065790817022704927509256400422194120945659949332921722261960329462890625e76 / 0.8589934592e10 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.2340252217665617823653117657625e31 / 0.64e2 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.275429056421618654347880811276576047324058625793067563296875e60 / 0.4194304e7 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.4062350579831109811994628628698762252084530570234426169011153012669742041015625e79 / 0.549755813888e12 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.12947166953263344367500605630447317003011557900121246203622052275245126953125e77 / 0.34359738368e11 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.4665287032455121716245941520626591244437845284427138267351607657451953125e73 / 0.1073741824e10 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.26358042134253014826662822962952434147246140211521044212886318384531582080078125e80 / 0.4398046511104e13 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.13320730971074104267238200852244778547532995590768699763501687785731014599609375e80 / 0.4398046511104e13 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.8194529228274078943305646222703772186965256306994621038601870839510753662109375e79 / 0.8796093022208e13 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.82587640598506954635779189254573291917902919107448588294979661316457763671875e77 / 0.549755813888e12 * a * a * pow(x, 0.4e1) + 0.2670333712685058199890193785897869772012194384474171021537675715898801025390625e79 / 0.281474976710656e15 * a * x * x - 0.2172885193863151759904103685117942599952190770125390741564105099800094580078125e79 / 0.274877906944e12 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.276716697756218954769175971985237181493701209528125e51 / 0.131072e6 * pow(a, 0.29e2) * pow(x, 0.58e2)) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * pow(a, 0.3e1 / 0.4e1) * sqrt(0.28308458065534285447478254e26) * exp(-a * x * x / 0.2e1);
return retval;
}

double HO_deriv_98( const double a, const double x )
{
double retval = -0.2e1 / 0.1835280902189043436350648650101628709286731535721079739888436918143505859375e76 * pow(a, 0.5e1 / 0.4e1) * (-0.512010174204073285374959325e27 / 0.256e3 * pow(a, 0.40e2) * pow(x, 0.80e2) - 0.4949e4 / 0.2e1 * pow(a, 0.48e2) * pow(x, 0.96e2) + 0.23903658762399145069451662053310835485223390625e47 / 0.16384e5 * pow(a, 0.31e2) * pow(x, 0.62e2) + 0.36938801426733598227161705183735923803767812000481523271850390625e65 / 0.33554432e8 * pow(a, 0.21e2) * pow(x, 0.42e2) + 0.24693988363016106446633430234711399007569375e44 / 0.65536e5 * pow(a, 0.33e2) * pow(x, 0.66e2) - 0.4052382785365005e16 / 0.8e1 * pow(a, 0.44e2) * pow(x, 0.88e2) + 0.21456317590873313295780858112165701619839225220763609859375e59 / 0.4194304e7 * pow(a, 0.25e2) * pow(x, 0.50e2) - 0.2493445162622330469367468284852202905755109403125e49 / 0.32768e5 * pow(a, 0.30e2) * pow(x, 0.60e2) - 0.1165039113919788421415559978999649756080971407145776648670411953125e67 / 0.67108864e8 * pow(a, 0.20e2) * pow(x, 0.40e2) - 0.5423255065968623354416166761050312835942291688055790631370331093114059814453125e79 / 0.562949953421312e15 - 0.38263101641914276050039245633494897806252220871128125e53 / 0.262144e6 * pow(a, 0.28e2) * pow(x, 0.56e2) + 0.123194272803924757766349591656196238125e39 / 0.2048e4 * pow(a, 0.35e2) * pow(x, 0.70e2) + 0.1346692308571344735e19 / 0.8e1 * pow(a, 0.43e2) * pow(x, 0.86e2) + 0.5955317826700953196444210273946925e34 / 0.1024e4 * pow(a, 0.37e2) * pow(x, 0.74e2) + 0.16125031812405734011057400218893241528432808074699188901661179453125e68 / 0.67108864e8 * pow(a, 0.19e2) * pow(x, 0.38e2) - 0.3260704220922139788961098515990093455933036875e46 / 0.131072e6 * pow(a, 0.32e2) * pow(x, 0.64e2) + 0.4857175992585e13 / 0.4e1 * pow(a, 0.45e2) * pow(x, 0.90e2) + 0.42181761274812499125890879775e29 / 0.128e3 * pow(a, 0.39e2) * pow(x, 0.78e2) + 0.12710392443639645053139106793983697551875528725007735348234375e62 / 0.4194304e7 * pow(a, 0.23e2) * pow(x, 0.46e2) + 0.1407593675295101772138677780857716559723618933748521875e55 / 0.262144e6 * pow(a, 0.27e2) * pow(x, 0.54e2) - 0.2228325225e10 * pow(a, 0.46e2) * pow(x, 0.92e2) - 0.13895116115232077520324837878772188695359324005112299032443635552942234765625e77 / 0.34359738368e11 * pow(a, 0.12e2) * pow(x, 0.24e2) + 0.7731290277386918740447198517080736642239528580310509005129632695822701728515625e79 / 0.549755813888e12 * pow(a, 0.9e1) * pow(x, 0.18e2) + pow(a, 0.49e2) * pow(x, 0.98e2) - 0.1291901733043710531592611281285390625e37 / 0.2048e4 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.1330978775141129497007625e25 / 0.128e3 * pow(a, 0.41e2) * pow(x, 0.82e2) - 0.32605418364273405359801231952877214854061268441094231396343815447391802861328125e80 / 0.1099511627776e13 * pow(a, 0.8e1) * pow(x, 0.16e2) + 0.2937354e7 * pow(a, 0.47e2) * pow(x, 0.94e2) - 0.515626670942087764109354007843351898257873270153349122504421875e63 / 0.8388608e7 * pow(a, 0.22e2) * pow(x, 0.44e2) + 0.1447794075738572772608323851901118816190544653267221908968115576362589453125e76 / 0.17179869184e11 * pow(a, 0.13e2) * pow(x, 0.26e2) - 0.2401547458926657019918965076431807259063604697767770471328568272560546875e73 / 0.8589934592e10 * pow(a, 0.16e2) * pow(x, 0.32e2) - 0.92152662855858251470283001873878935306320537217817109375e56 / 0.524288e6 * pow(a, 0.26e2) * pow(x, 0.52e2) + 0.131580583463880703948501279817944397723484896045763558597161891908359375e72 / 0.4294967296e10 * pow(a, 0.17e2) * pow(x, 0.34e2) - 0.20730589008603748017516985222713148070625e41 / 0.4096e4 * pow(a, 0.34e2) * pow(x, 0.68e2) - 0.390288581913535498732635200550655834364691100856094123586342132265625e69 / 0.134217728e9 * pow(a, 0.18e2) * pow(x, 0.36e2) - 0.732678609625856208315e21 / 0.16e2 * pow(a, 0.42e2) * pow(x, 0.84e2) + 0.4718334419302961439134907856048374261924964523849619631904363547266015625e73 / 0.2147483648e10 * pow(a, 0.15e2) * pow(x, 0.30e2) - 0.364043197418857307012278302081215851470177323414461317879208562692369833984375e78 / 0.68719476736e11 * pow(a, 0.10e2) * pow(x, 0.20e2) - 0.12013294717350171494752670642475e32 / 0.256e3 * pow(a, 0.38e2) * pow(x, 0.76e2) - 0.1109160254238410256698222726492157595980668520085596403546875e61 / 0.8388608e7 * pow(a, 0.24e2) * pow(x, 0.48e2) + 0.26686518424428982918795483453144176640616839284463076525657882098615074638671875e80 / 0.549755813888e12 * pow(a, 0.7e1) * pow(x, 0.14e2) + 0.55483236693769704123597048116484629335744182405567059568245426416905029296875e77 / 0.34359738368e11 * pow(a, 0.11e2) * pow(x, 0.22e2) - 0.63437178843613896440447687573577671749080126108934535290539676537536328125e74 / 0.4294967296e10 * pow(a, 0.14e2) * pow(x, 0.28e2) + 0.236088699976696358608711091700423415533935858023623976659508636713062450244140625e81 / 0.4398046511104e13 * pow(a, 0.5e1) * pow(x, 0.10e2) - 0.291638982324154325340172525041699513306626648146829618226451845351430085595703125e81 / 0.8796093022208e13 * pow(a, 0.4e1) * pow(x, 0.8e1) + 0.115327216612657300496838410523736246462868922973176929774849487499219764697265625e81 / 0.8796093022208e13 * pow(a, 0.3e1) * pow(x, 0.6e1) - 0.52068754476005351332704252852033308111173860399942753300374843804649404736328125e80 / 0.17592186044416e14 * a * a * pow(x, 0.4e1) + 0.87680545102081550171652239258605311586173599119074584573170073764305992431640625e80 / 0.281474976710656e15 * a * x * x - 0.65876937399228999008463879282923577486844847261493869806951882039089823974609375e80 / 0.1099511627776e13 * pow(a, 0.6e1) * pow(x, 0.12e2) + 0.462961785413315475542337888772156827107246115965625e51 / 0.131072e6 * pow(a, 0.29e2) * pow(x, 0.58e2)) * pow(0.3141592654e1, -0.1e1 / 0.4e1) * sqrt(0.28308458065534285447478254e26) * x * exp(-a * x * x / 0.2e1);
return retval;
}

double HO_deriv_99( const double a, const double x )
{
double retval = -0.4e1 / 0.60564269772238433399571405453353747406462140678795631416318418298735693359375e77 * pow(0.3141592654e1, -0.1e1 / 0.4e1) * (0.105277168895960607062097405825e30 / 0.256e3 * pow(a, 0.40e2) * pow(x, 0.80e2) + 0.6117111e7 / 0.2e1 * pow(a, 0.48e2) * pow(x, 0.96e2) - 0.4010530705409262876442000436502330597883953928125e49 / 0.32768e5 * pow(a, 0.31e2) * pow(x, 0.62e2) - 0.2763655113729652788562661387854492187536935812947260894525717890625e67 / 0.67108864e8 * pow(a, 0.21e2) * pow(x, 0.42e2) - 0.4927831191017669906625419561759464546184514375e46 / 0.131072e6 * pow(a, 0.33e2) * pow(x, 0.66e2) + 0.764338877837790255e18 / 0.4e1 * pow(a, 0.44e2) * pow(x, 0.88e2) - 0.2210876479924884874089745971598461785276903023257866656734375e61 / 0.8388608e7 * pow(a, 0.25e2) * pow(x, 0.50e2) + 0.769382535471049459354532750405526813394056494878125e51 / 0.131072e6 * pow(a, 0.30e2) * pow(x, 0.60e2) + 0.10040114147346966459714985041952395668646842763491947806694696640625e68 / 0.16777216e8 * pow(a, 0.20e2) * pow(x, 0.40e2) + 0.1252913051636299379595965936807418036677067402567365625e55 / 0.131072e6 * pow(a, 0.28e2) * pow(x, 0.56e2) - 0.29546254766415308636261749702803789110625e41 / 0.4096e4 * pow(a, 0.35e2) * pow(x, 0.70e2) - 0.850896356064767767755e21 / 0.16e2 * pow(a, 0.43e2) * pow(x, 0.86e2) - 0.1742181861404026504982295472730158125e37 / 0.2048e4 * pow(a, 0.37e2) * pow(x, 0.74e2) - 0.1023120019079647324072246378952503803782431493221647197462856344765625e70 / 0.134217728e9 * pow(a, 0.19e2) * pow(x, 0.38e2) + 0.297998945904576008532497386931275082382451603125e48 / 0.131072e6 * pow(a, 0.32e2) * pow(x, 0.64e2) - 0.4498516669992345e16 / 0.8e1 * pow(a, 0.45e2) * pow(x, 0.90e2) - 0.15373656876049520164613557535475e32 / 0.256e3 * pow(a, 0.39e2) * pow(x, 0.78e2) - 0.1116971330659714414835352543844805774487004245063648866397046875e64 / 0.8388608e7 * pow(a, 0.23e2) * pow(x, 0.46e2) - 0.170111697179894657311809771275229390921782508933119859375e57 / 0.524288e6 * pow(a, 0.27e2) * pow(x, 0.54e2) + 0.5275591803405e13 / 0.4e1 * pow(a, 0.46e2) * pow(x, 0.92e2) + 0.115088085256219443410661305521622402565000789789833386418703370224780146484375e78 / 0.17179869184e11 * pow(a, 0.12e2) * pow(x, 0.24e2) - 0.180320573384738556713596868424475646789587456958758705125636239021211020244140625e81 / 0.1099511627776e13 * pow(a, 0.9e1) * pow(x, 0.18e2) - 0.5049e4 / 0.2e1 * pow(a, 0.49e2) * pow(x, 0.98e2) + 0.10670370085379309727794059119828020625e38 / 0.128e3 * pow(a, 0.36e2) * pow(x, 0.72e2) + 0.2725392139750729502980713245400918633290796330545803413734328823443106201171875e79 / 0.562949953421312e15 - 0.623442032004584544480954225e27 / 0.256e3 * pow(a, 0.41e2) * pow(x, 0.82e2) + 0.332050286625272098940422490835023443774232475687007788245480860866374453291015625e81 / 0.1099511627776e13 * pow(a, 0.8e1) * pow(x, 0.16e2) - 0.2369204145e10 * pow(a, 0.47e2) * pow(x, 0.94e2) + 0.83648511617958019211185538835427801645951625884961384957545078125e65 / 0.33554432e8 * pow(a, 0.22e2) * pow(x, 0.44e2) - 0.53214155224763843344845633014613099703481484062264220349682984889947295703125e77 / 0.34359738368e11 * pow(a, 0.13e2) * pow(x, 0.26e2) + 0.58739025495394352287194451692961497548155696078343468351671687513569140625e74 / 0.8589934592e10 * pow(a, 0.16e2) * pow(x, 0.32e2) + 0.41127415664766586395837406208719500279158075344666197234375e59 / 0.4194304e7 * pow(a, 0.26e2) * pow(x, 0.52e2) - 0.7035121379679265858350850635664941264786324349931468792480158821971484375e73 / 0.8589934592e10 * pow(a, 0.17e2) * pow(x, 0.34e2) + 0.36225981132453354181028925270229968818019375e44 / 0.65536e5 * pow(a, 0.34e2) * pow(x, 0.68e2) + 0.364066522344847837305362436796889100449642258384290582376196400310859375e72 / 0.4294967296e10 * pow(a, 0.18e2) * pow(x, 0.36e2) + 0.1582294022124299290231425e25 / 0.128e3 * pow(a, 0.42e2) * pow(x, 0.84e2) - 0.210581404327026011260894394844834756516177223355693930757353600813951953125e75 / 0.4294967296e10 * pow(a, 0.15e2) * pow(x, 0.30e2) + 0.38483685123752763115857284238653275688466033324338902366315657720547638212890625e80 / 0.549755813888e12 * pow(a, 0.10e2) * pow(x, 0.20e2) + 0.7820654860994961643083988588251225e34 / 0.1024e4 * pow(a, 0.38e2) * pow(x, 0.76e2) + 0.52777589815642764558398807680978664669046069606489073267171875e62 / 0.8388608e7 * pow(a, 0.24e2) * pow(x, 0.48e2) - 0.468362133308649724996854777264770176001066029912412401013595349755907343115234375e81 / 0.1099511627776e13 * pow(a, 0.7e1) * pow(x, 0.14e2) - 0.1647449723912455948682683163655671734619277039858663930063537054895978740234375e79 / 0.68719476736e11 * pow(a, 0.11e2) * pow(x, 0.22e2) + 0.5148921788152969334163437458264881203444568578912751601067057651274472265625e76 / 0.17179869184e11 * pow(a, 0.14e2) * pow(x, 0.28e2) - 0.2902502252654678761718859892081676108623093783937494771872782651354708947119140625e82 / 0.8796093022208e13 * pow(a, 0.5e1) * pow(x, 0.10e2) + 0.179330802795598001296130931547380446070534398549913864623718836582556388037109375e81 / 0.1099511627776e13 * pow(a, 0.4e1) * pow(x, 0.8e1) - 0.863585922682347821844488670359371084268743663938946908365284326521672251611328125e81 / 0.17592186044416e14 * pow(a, 0.3e1) * pow(x, 0.6e1) + 0.2181222175847167178885564167402535212843733996546824665458707835028965996337890625e82 / 0.281474976710656e15 * a * a * pow(x, 0.4e1) - 0.269813821835322220795090611294690944695788836724034537959698553520867513916015625e81 / 0.562949953421312e15 * a * x * x + 0.1958147452747893327284015525279982446487350351842998865234748104502459146142578125e82 / 0.4398046511104e13 * pow(a, 0.6e1) * pow(x, 0.12e2) + pow(a, 0.50e2) * pow(x, 0.100e3) - 0.65774355940576044596655871254056159618524544021315625e53 / 0.262144e6 * pow(a, 0.29e2) * pow(x, 0.58e2)) * pow(a, 0.3e1 / 0.4e1) * sqrt(0.155696519360438569961130397e27) * exp(-a * x * x / 0.2e1);
return retval;
}

TEF EF_HO[] = {&HO_0, &HO_1, &HO_2, &HO_3, &HO_4, &HO_5, &HO_6, &HO_7, &HO_8, &HO_9, &HO_10, &HO_11, &HO_12, &HO_13, &HO_14, &HO_15, &HO_16, &HO_17, &HO_18, &HO_19, &HO_20, &HO_21, &HO_22, &HO_23, &HO_24, &HO_25, &HO_26, &HO_27, &HO_28, &HO_29, &HO_30, &HO_31, &HO_32, &HO_33, &HO_34, &HO_35, &HO_36, &HO_37, &HO_38, &HO_39, &HO_40, &HO_41, &HO_42, &HO_43, &HO_44, &HO_45, &HO_46, &HO_47, &HO_48, &HO_49, &HO_50, &HO_51, &HO_52, &HO_53, &HO_54, &HO_55, &HO_56, &HO_57, &HO_58, &HO_59, &HO_60, &HO_61, &HO_62, &HO_63, &HO_64, &HO_65, &HO_66, &HO_67, &HO_68, &HO_69, &HO_70, &HO_71, &HO_72, &HO_73, &HO_74, &HO_75, &HO_76, &HO_77, &HO_78, &HO_79, &HO_80, &HO_81, &HO_82, &HO_83, &HO_84, &HO_85, &HO_86, &HO_87, &HO_88, &HO_89, &HO_90, &HO_91, &HO_92, &HO_93, &HO_94, &HO_95, &HO_96, &HO_97, &HO_98, &HO_99};

TEF EF_HO_DERIV[] = {&HO_deriv_0, &HO_deriv_1, &HO_deriv_2, &HO_deriv_3, &HO_deriv_4, &HO_deriv_5, &HO_deriv_6, &HO_deriv_7, &HO_deriv_8, &HO_deriv_9, &HO_deriv_10, &HO_deriv_11, &HO_deriv_12, &HO_deriv_13, &HO_deriv_14, &HO_deriv_15, &HO_deriv_16, &HO_deriv_17, &HO_deriv_18, &HO_deriv_19, &HO_deriv_20, &HO_deriv_21, &HO_deriv_22, &HO_deriv_23, &HO_deriv_24, &HO_deriv_25, &HO_deriv_26, &HO_deriv_27, &HO_deriv_28, &HO_deriv_29, &HO_deriv_30, &HO_deriv_31, &HO_deriv_32, &HO_deriv_33, &HO_deriv_34, &HO_deriv_35, &HO_deriv_36, &HO_deriv_37, &HO_deriv_38, &HO_deriv_39, &HO_deriv_40, &HO_deriv_41, &HO_deriv_42, &HO_deriv_43, &HO_deriv_44, &HO_deriv_45, &HO_deriv_46, &HO_deriv_47, &HO_deriv_48, &HO_deriv_49, &HO_deriv_50, &HO_deriv_51, &HO_deriv_52, &HO_deriv_53, &HO_deriv_54, &HO_deriv_55, &HO_deriv_56, &HO_deriv_57, &HO_deriv_58, &HO_deriv_59, &HO_deriv_60, &HO_deriv_61, &HO_deriv_62, &HO_deriv_63, &HO_deriv_64, &HO_deriv_65, &HO_deriv_66, &HO_deriv_67, &HO_deriv_68, &HO_deriv_69, &HO_deriv_70, &HO_deriv_71, &HO_deriv_72, &HO_deriv_73, &HO_deriv_74, &HO_deriv_75, &HO_deriv_76, &HO_deriv_77, &HO_deriv_78, &HO_deriv_79, &HO_deriv_80, &HO_deriv_81, &HO_deriv_82, &HO_deriv_83, &HO_deriv_84, &HO_deriv_85, &HO_deriv_86, &HO_deriv_87, &HO_deriv_88, &HO_deriv_89, &HO_deriv_90, &HO_deriv_91, &HO_deriv_92, &HO_deriv_93, &HO_deriv_94, &HO_deriv_95, &HO_deriv_96, &HO_deriv_97, &HO_deriv_98, &HO_deriv_99};
#endif
